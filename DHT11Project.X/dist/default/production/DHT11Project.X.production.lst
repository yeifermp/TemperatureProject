

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 29 03:33:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4553 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK0
    99  003B08                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for stoa@F1154
   103  003B08  28                 	db	40
   104  003B09  6E                 	db	110
   105  003B0A  75                 	db	117
   106  003B0B  6C                 	db	108
   107  003B0C  6C                 	db	108
   108  003B0D  29                 	db	41
   109  003B0E  00                 	db	0
   110                           
   111                           ;initializer for _END_CMD
   112  003B0F  18                 	db	low (STR_2+9)
   113  003B10  08                 	db	high (STR_2+9)
   114                           
   115                           ;initializer for _LED0_CMD
   116  003B11  1C                 	db	low STR_3
   117  003B12  08                 	db	high STR_3
   118                           
   119                           ;initializer for _RH_SENSOR_CMD
   120  003B13  0F                 	db	low STR_2
   121  003B14  08                 	db	high STR_2
   122                           
   123                           ;initializer for _TEMP_SENSOR_CMD
   124  003B15  01                 	db	low STR_1
   125  003B16  08                 	db	high STR_1
   126  0000                     _TXREG	set	4013
   127  0000                     _RCREG	set	4014
   128  0000                     _PIE1bits	set	3997
   129  0000                     _INTCONbits	set	4082
   130  0000                     _RCSTAbits	set	4011
   131  0000                     _TXSTAbits	set	4012
   132  0000                     _SPBRG	set	4015
   133  0000                     _PORTDbits	set	3971
   134  0000                     _LATDbits	set	3980
   135  0000                     _LATD	set	3980
   136  0000                     _TRISD	set	3989
   137  0000                     _TXIF	set	31988
   138  0000                     _CREN	set	32092
   139  0000                     _RCIF	set	31989
   140  0000                     _TRISC7	set	31911
   141  0000                     _TRISC6	set	31910
   142                           
   143                           	psect	smallconst
   144  000800                     __psmallconst:
   145                           	callstack 0
   146  000800  00                 	db	0
   147  000801                     STR_1:
   148  000801  43                 	db	67	;'C'
   149  000802  4D                 	db	77	;'M'
   150  000803  44                 	db	68	;'D'
   151  000804  2B                 	db	43
   152  000805  54                 	db	84	;'T'
   153  000806  45                 	db	69	;'E'
   154  000807  4D                 	db	77	;'M'
   155  000808  3D                 	db	61	;'='
   156  000809  25                 	db	37
   157  00080A  64                 	db	100	;'d'
   158  00080B  3E                 	db	62	;'>'
   159  00080C  3E                 	db	62	;'>'
   160  00080D  3E                 	db	62	;'>'
   161  00080E  00                 	db	0
   162  00080F                     STR_2:
   163  00080F  43                 	db	67	;'C'
   164  000810  4D                 	db	77	;'M'
   165  000811  44                 	db	68	;'D'
   166  000812  2B                 	db	43
   167  000813  52                 	db	82	;'R'
   168  000814  48                 	db	72	;'H'
   169  000815  3D                 	db	61	;'='
   170  000816  25                 	db	37
   171  000817  64                 	db	100	;'d'
   172  000818  3E                 	db	62	;'>'
   173  000819  3E                 	db	62	;'>'
   174  00081A  3E                 	db	62	;'>'
   175  00081B  00                 	db	0
   176  00081C                     STR_3:
   177  00081C  43                 	db	67	;'C'
   178  00081D  4D                 	db	77	;'M'
   179  00081E  44                 	db	68	;'D'
   180  00081F  2B                 	db	43
   181  000820  4C                 	db	76	;'L'
   182  000821  45                 	db	69	;'E'
   183  000822  44                 	db	68	;'D'
   184  000823  00                 	db	0
   185  000824                     STR_82:
   186  000824  68                 	db	104	;'h'
   187  000825  68                 	db	104	;'h'
   188  000826  58                 	db	88	;'X'
   189  000827  00                 	db	0
   190  000828                     STR_6:
   191  000828  68                 	db	104	;'h'
   192  000829  68                 	db	104	;'h'
   193  00082A  64                 	db	100	;'d'
   194  00082B  00                 	db	0
   195  00082C                     STR_10:
   196  00082C  68                 	db	104	;'h'
   197  00082D  68                 	db	104	;'h'
   198  00082E  69                 	db	105	;'i'
   199  00082F  00                 	db	0
   200  000830                     STR_48:
   201  000830  68                 	db	104	;'h'
   202  000831  68                 	db	104	;'h'
   203  000832  6E                 	db	110	;'n'
   204  000833  00                 	db	0
   205  000834                     STR_33:
   206  000834  68                 	db	104	;'h'
   207  000835  68                 	db	104	;'h'
   208  000836  6F                 	db	111	;'o'
   209  000837  00                 	db	0
   210  000838                     STR_63:
   211  000838  68                 	db	104	;'h'
   212  000839  68                 	db	104	;'h'
   213  00083A  75                 	db	117	;'u'
   214  00083B  00                 	db	0
   215  00083C                     STR_78:
   216  00083C  68                 	db	104	;'h'
   217  00083D  68                 	db	104	;'h'
   218  00083E  78                 	db	120	;'x'
   219  00083F  00                 	db	0
   220  000840                     STR_100:
   221  000840  7A                 	db	122	;'z'
   222  000841  58                 	db	88	;'X'
   223  000842  00                 	db	0
   224  000843                     STR_24:
   225  000843  7A                 	db	122	;'z'
   226  000844  64                 	db	100	;'d'
   227  000845  00                 	db	0
   228  000846                     STR_28:
   229  000846  7A                 	db	122	;'z'
   230  000847  69                 	db	105	;'i'
   231  000848  00                 	db	0
   232  000849                     STR_58:
   233  000849  7A                 	db	122	;'z'
   234  00084A  6E                 	db	110	;'n'
   235  00084B  00                 	db	0
   236  00084C                     STR_43:
   237  00084C  7A                 	db	122	;'z'
   238  00084D  6F                 	db	111	;'o'
   239  00084E  00                 	db	0
   240  00084F                     STR_73:
   241  00084F  7A                 	db	122	;'z'
   242  000850  75                 	db	117	;'u'
   243  000851  00                 	db	0
   244  000852                     STR_96:
   245  000852  7A                 	db	122	;'z'
   246  000853  78                 	db	120	;'x'
   247  000854  00                 	db	0
   248  000855                     STR_5:
   249  000855  3D                 	db	61	;'='
   250  000856  00                 	db	0
   251  000857  00                 	db	0	; dummy byte at the end
   252  0000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256  003608                     __pcinit:
   257                           	callstack 0
   258  003608                     start_initialization:
   259                           	callstack 0
   260  003608                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK0 (15 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265  003608  0E08               	movlw	low __pidataBANK0
   266  00360A  6EF6               	movwf	tblptrl,c
   267  00360C  0E3B               	movlw	high __pidataBANK0
   268  00360E  6EF7               	movwf	tblptrh,c
   269  003610  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270  003612  6EF8               	movwf	tblptru,c
   271  003614  EE00  F0F1         	lfsr	0,__pdataBANK0
   272  003618  EE10 F00F          	lfsr	1,15
   273  00361C                     copy_data0:
   274  00361C  0009               	tblrd		*+
   275  00361E  CFF5 FFEE          	movff	tablat,postinc0
   276  003622  50E5               	movf	postdec1,w,c
   277  003624  50E1               	movf	fsr1l,w,c
   278  003626  E1FA               	bnz	copy_data0
   279                           
   280                           ; Clear objects allocated to BIGRAM (512 bytes)
   281  003628  EE01  F050         	lfsr	0,__pbssBIGRAM
   282  00362C  EE12 F000          	lfsr	1,512
   283  003630                     clear_0:
   284  003630  6AEE               	clrf	postinc0,c
   285  003632  50E5               	movf	postdec1,w,c
   286  003634  50E1               	movf	fsr1l,w,c
   287  003636  E1FC               	bnz	clear_0
   288  003638  50E2               	movf	fsr1h,w,c
   289  00363A  E1FA               	bnz	clear_0
   290                           
   291                           ; Clear objects allocated to BANK1 (80 bytes)
   292  00363C  EE01  F000         	lfsr	0,__pbssBANK1
   293  003640  0E50               	movlw	80
   294  003642                     clear_1:
   295  003642  6AEE               	clrf	postinc0,c
   296  003644  06E8               	decf	wreg,f,c
   297  003646  E1FD               	bnz	clear_1
   298                           
   299                           ; Clear objects allocated to BANK0 (89 bytes)
   300  003648  EE00  F060         	lfsr	0,__pbssBANK0
   301  00364C  0E59               	movlw	89
   302  00364E                     clear_2:
   303  00364E  6AEE               	clrf	postinc0,c
   304  003650  06E8               	decf	wreg,f,c
   305  003652  E1FD               	bnz	clear_2
   306                           
   307                           ; Clear objects allocated to COMRAM (2 bytes)
   308  003654  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   309  003656  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   310  003658                     end_of_initialization:
   311                           	callstack 0
   312  003658                     __end_of__initialization:
   313                           	callstack 0
   314  003658  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315  00365A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316  00365C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   317  00365E  6EF8               	movwf	tblptru,c
   318  003660  0100               	movlb	0
   319  003662  EF32  F01A         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMRAM
   322  00005B                     __pbssCOMRAM:
   323                           	callstack 0
   324  00005B                     _flags:
   325                           	callstack 0
   326  00005B                     	ds	2
   327                           
   328                           	psect	bssBANK0
   329  000060                     __pbssBANK0:
   330                           	callstack 0
   331  000060                     _nout:
   332                           	callstack 0
   333  000060                     	ds	2
   334  000062                     _width:
   335                           	callstack 0
   336  000062                     	ds	2
   337  000064                     _prec:
   338                           	callstack 0
   339  000064                     	ds	2
   340  000066                     _position:
   341                           	callstack 0
   342  000066                     	ds	1
   343  000067                     _data_out:
   344                           	callstack 0
   345  000067                     	ds	50
   346  000099                     _dbuf:
   347                           	callstack 0
   348  000099                     	ds	32
   349                           
   350                           	psect	dataBANK0
   351  0000F1                     __pdataBANK0:
   352                           	callstack 0
   353  0000F1                     stoa@F1154:
   354                           	callstack 0
   355  0000F1                     	ds	7
   356  0000F8                     	ds	2
   357  0000FA                     	ds	2
   358  0000FC                     	ds	2
   359  0000FE                     	ds	2
   360                           
   361                           	psect	bssBANK1
   362  000100                     __pbssBANK1:
   363                           	callstack 0
   364  000100                     _dht_raw_data:
   365                           	callstack 0
   366  000100                     	ds	80
   367                           
   368                           	psect	bssBIGRAM
   369  000150                     __pbssBIGRAM:
   370                           	callstack 0
   371  000150                     _data_in:
   372                           	callstack 0
   373  000150                     	ds	512
   374                           
   375                           	psect	cstackBANK0
   376  0000B9                     __pcstackBANK0:
   377                           	callstack 0
   378  0000B9                     vfpfcnvrt@cp:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x0
   382  0000B9                     	ds	2
   383  0000BB                     vfpfcnvrt@done:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x2
   387  0000BB                     	ds	2
   388  0000BD                     _vfpfcnvrt$1108:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392  0000BD                     	ds	2
   393  0000BF                     _vfpfcnvrt$1109:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x6
   397  0000BF                     	ds	2
   398  0000C1                     vfpfcnvrt@ll:
   399                           	callstack 0
   400                           
   401                           ; 8 bytes @ 0x8
   402  0000C1                     	ds	8
   403  0000C9                     vfpfcnvrt@vp:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  0000C9                     	ds	2
   408  0000CB                     vfpfcnvrt@c:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x12
   412  0000CB                     	ds	1
   413  0000CC                     vfpfcnvrt@llu:
   414                           	callstack 0
   415                           
   416                           ; 8 bytes @ 0x13
   417  0000CC                     	ds	8
   418  0000D4                     ?_sprintf:
   419                           	callstack 0
   420  0000D4                     sprintf@s:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x1B
   424  0000D4                     	ds	2
   425  0000D6                     sprintf@fmt:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x1D
   429  0000D6                     	ds	6
   430  0000DC                     sprintf@f:
   431                           	callstack 0
   432                           
   433                           ; 6 bytes @ 0x23
   434  0000DC                     	ds	6
   435  0000E2                     sprintf@ap:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x29
   439  0000E2                     	ds	2
   440  0000E4                     dht_read@relative_humidity:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x2B
   444  0000E4                     	ds	2
   445  0000E6                     dht_read@temperature:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2D
   449  0000E6                     	ds	2
   450  0000E8                     dht_read@bit_position:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x2F
   454  0000E8                     	ds	2
   455  0000EA                     dht_read@index:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x31
   459  0000EA                     	ds	1
   460  0000EB                     dht_read@mask:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x32
   464  0000EB                     	ds	2
   465  0000ED                     dht_read@bit_index:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x34
   469  0000ED                     	ds	2
   470  0000EF                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x36
   473  0000EF                     	ds	2
   474                           
   475                           	psect	cstackCOMRAM
   476  000001                     __pcstackCOMRAM:
   477                           	callstack 0
   478  000001                     ??_isr:
   479  000001                     
   480                           ; 1 bytes @ 0x0
   481  000001                     	ds	2
   482  000003                     ?_dht_read_bit:
   483                           	callstack 0
   484  000003                     ?_strlen:
   485                           	callstack 0
   486  000003                     ?_isspace:
   487                           	callstack 0
   488  000003                     ?_isdigit:
   489                           	callstack 0
   490  000003                     ?_isupper:
   491                           	callstack 0
   492  000003                     ?_isalpha:
   493                           	callstack 0
   494  000003                     ?_strncmp:
   495                           	callstack 0
   496  000003                     ?_strchr:
   497                           	callstack 0
   498  000003                     ?_islower:
   499                           	callstack 0
   500  000003                     ?___wmul:
   501                           	callstack 0
   502  000003                     ?___aodiv:
   503                           	callstack 0
   504  000003                     ?___aomod:
   505                           	callstack 0
   506  000003                     ?___lodiv:
   507                           	callstack 0
   508  000003                     ?___lomod:
   509                           	callstack 0
   510  000003                     USART_SendChar@data:
   511                           	callstack 0
   512  000003                     ___wmul@multiplier:
   513                           	callstack 0
   514  000003                     isdigit@c:
   515                           	callstack 0
   516  000003                     isspace@c:
   517                           	callstack 0
   518  000003                     memset@dest:
   519                           	callstack 0
   520  000003                     isalpha@c:
   521                           	callstack 0
   522  000003                     isupper@c:
   523                           	callstack 0
   524  000003                     fputc@c:
   525                           	callstack 0
   526  000003                     strlen@s:
   527                           	callstack 0
   528  000003                     strncmp@_l:
   529                           	callstack 0
   530  000003                     strchr@s:
   531                           	callstack 0
   532  000003                     islower@c:
   533                           	callstack 0
   534  000003                     ___aodiv@dividend:
   535                           	callstack 0
   536  000003                     ___aomod@dividend:
   537                           	callstack 0
   538  000003                     ___lodiv@dividend:
   539                           	callstack 0
   540  000003                     ___lomod@dividend:
   541                           	callstack 0
   542                           
   543                           ; 8 bytes @ 0x2
   544  000003                     	ds	2
   545  000005                     ??_isspace:
   546  000005                     ??_isdigit:
   547  000005                     ??_isupper:
   548  000005                     ??_isalpha:
   549  000005                     ??_islower:
   550  000005                     ___wmul@multiplicand:
   551                           	callstack 0
   552  000005                     memset@c:
   553                           	callstack 0
   554  000005                     fputc@fp:
   555                           	callstack 0
   556  000005                     strlen@a:
   557                           	callstack 0
   558  000005                     strncmp@_r:
   559                           	callstack 0
   560  000005                     strchr@c:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x4
   564  000005                     	ds	2
   565  000007                     ??_fputc:
   566  000007                     USART_SendString@data:
   567                           	callstack 0
   568  000007                     ___wmul@product:
   569                           	callstack 0
   570  000007                     memset@n:
   571                           	callstack 0
   572  000007                     strncmp@n:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x6
   576  000007                     	ds	2
   577  000009                     ??_memset:
   578  000009                     ??_USART_SendString:
   579  000009                     ??_strncmp:
   580  000009                     ?_toupper:
   581                           	callstack 0
   582  000009                     _isspace$948:
   583                           	callstack 0
   584  000009                     toupper@c:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x8
   588  000009                     	ds	1
   589  00000A                     ?_atoi:
   590                           	callstack 0
   591  00000A                     atoi@s:
   592                           	callstack 0
   593  00000A                     strncmp@l:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x9
   597  00000A                     	ds	1
   598  00000B                     ??_toupper:
   599  00000B                     USART_SendString@index:
   600                           	callstack 0
   601  00000B                     memset@k:
   602                           	callstack 0
   603  00000B                     ___aodiv@divisor:
   604                           	callstack 0
   605  00000B                     ___aomod@divisor:
   606                           	callstack 0
   607  00000B                     ___lodiv@divisor:
   608                           	callstack 0
   609  00000B                     ___lomod@divisor:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0xA
   613  00000B                     	ds	1
   614  00000C                     ??_atoi:
   615  00000C                     ?_ctoa:
   616                           	callstack 0
   617  00000C                     ?_stoa:
   618                           	callstack 0
   619  00000C                     ctoa@fp:
   620                           	callstack 0
   621  00000C                     stoa@fp:
   622                           	callstack 0
   623  00000C                     fputs@s:
   624                           	callstack 0
   625  00000C                     strncmp@r:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0xB
   629  00000C                     	ds	1
   630  00000D                     memset@s:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xC
   634  00000D                     	ds	1
   635  00000E                     ?_strstr:
   636                           	callstack 0
   637  00000E                     ctoa@c:
   638                           	callstack 0
   639  00000E                     stoa@s:
   640                           	callstack 0
   641  00000E                     fputs@fp:
   642                           	callstack 0
   643  00000E                     strstr@h:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xD
   647  00000E                     	ds	1
   648  00000F                     ??_ctoa:
   649  00000F                     _toupper$1303:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xE
   653  00000F                     	ds	1
   654  000010                     ??_stoa:
   655  000010                     fputs@c:
   656                           	callstack 0
   657  000010                     atoi@neg:
   658                           	callstack 0
   659  000010                     ctoa@l:
   660                           	callstack 0
   661  000010                     strstr@n:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xF
   665  000010                     	ds	1
   666  000011                     fputs@i:
   667                           	callstack 0
   668  000011                     stoa@nuls:
   669                           	callstack 0
   670                           
   671                           ; 7 bytes @ 0x10
   672  000011                     	ds	1
   673  000012                     _atoi$930:
   674                           	callstack 0
   675  000012                     ctoa@w:
   676                           	callstack 0
   677  000012                     strstr@nl:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x11
   681  000012                     	ds	1
   682  000013                     ?_pad:
   683                           	callstack 0
   684  000013                     ___aodiv@counter:
   685                           	callstack 0
   686  000013                     ___aomod@counter:
   687                           	callstack 0
   688  000013                     ___lomod@counter:
   689                           	callstack 0
   690  000013                     pad@fp:
   691                           	callstack 0
   692  000013                     ___lodiv@quotient:
   693                           	callstack 0
   694                           
   695                           ; 8 bytes @ 0x12
   696  000013                     	ds	1
   697  000014                     ___aodiv@sign:
   698                           	callstack 0
   699  000014                     ___aomod@sign:
   700                           	callstack 0
   701  000014                     data_received@ptr:
   702                           	callstack 0
   703  000014                     is_command@command:
   704                           	callstack 0
   705  000014                     _atoi$932:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x13
   709  000014                     	ds	1
   710  000015                     ?_abs:
   711                           	callstack 0
   712  000015                     pad@buf:
   713                           	callstack 0
   714  000015                     abs@a:
   715                           	callstack 0
   716  000015                     ___aodiv@quotient:
   717                           	callstack 0
   718                           
   719                           ; 8 bytes @ 0x14
   720  000015                     	ds	1
   721  000016                     _atoi$931:
   722                           	callstack 0
   723  000016                     is_command@ptr:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x15
   727  000016                     	ds	1
   728  000017                     ??_abs:
   729  000017                     atoi@n:
   730                           	callstack 0
   731  000017                     pad@p:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x16
   735  000017                     	ds	1
   736  000018                     stoa@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x17
   740  000018                     	ds	1
   741  000019                     ??_pad:
   742  000019                     get_action@str_value:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x18
   746  000019                     	ds	1
   747  00001A                     pad@i:
   748                           	callstack 0
   749  00001A                     stoa@w:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x19
   753  00001A                     	ds	1
   754  00001B                     ___lodiv@counter:
   755                           	callstack 0
   756  00001B                     get_action@value:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x1A
   760  00001B                     	ds	1
   761  00001C                     pad@w:
   762                           	callstack 0
   763  00001C                     stoa@cp:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x1B
   767  00001C                     	ds	2
   768  00001E                     ?_dtoa:
   769                           	callstack 0
   770  00001E                     ?_otoa:
   771                           	callstack 0
   772  00001E                     ?_utoa:
   773                           	callstack 0
   774  00001E                     ?_xtoa:
   775                           	callstack 0
   776  00001E                     dtoa@fp:
   777                           	callstack 0
   778  00001E                     otoa@fp:
   779                           	callstack 0
   780  00001E                     stoa@p:
   781                           	callstack 0
   782  00001E                     utoa@fp:
   783                           	callstack 0
   784  00001E                     xtoa@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x1D
   788  00001E                     	ds	2
   789  000020                     stoa@l:
   790                           	callstack 0
   791  000020                     dtoa@d:
   792                           	callstack 0
   793  000020                     otoa@d:
   794                           	callstack 0
   795  000020                     utoa@d:
   796                           	callstack 0
   797  000020                     xtoa@d:
   798                           	callstack 0
   799                           
   800                           ; 8 bytes @ 0x1F
   801  000020                     	ds	8
   802  000028                     ??_dtoa:
   803  000028                     ??_otoa:
   804  000028                     ??_utoa:
   805  000028                     xtoa@x:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x27
   809  000028                     	ds	1
   810  000029                     ??_xtoa:
   811                           
   812                           ; 1 bytes @ 0x28
   813  000029                     	ds	7
   814  000030                     _dtoa$1057:
   815                           	callstack 0
   816  000030                     otoa@p:
   817                           	callstack 0
   818  000030                     utoa@p:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x2F
   822  000030                     	ds	1
   823  000031                     _xtoa$1093:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x30
   827  000031                     	ds	1
   828  000032                     dtoa@p:
   829                           	callstack 0
   830  000032                     otoa@t:
   831                           	callstack 0
   832  000032                     utoa@w:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x31
   836  000032                     	ds	1
   837  000033                     _xtoa$1094:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x32
   841  000033                     	ds	1
   842  000034                     dtoa@w:
   843                           	callstack 0
   844  000034                     otoa@w:
   845                           	callstack 0
   846  000034                     utoa@n:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x33
   850  000034                     	ds	1
   851  000035                     xtoa@p:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x34
   855  000035                     	ds	1
   856  000036                     dtoa@s:
   857                           	callstack 0
   858  000036                     otoa@n:
   859                           	callstack 0
   860                           
   861                           ; 8 bytes @ 0x35
   862  000036                     	ds	1
   863  000037                     xtoa@w:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x36
   867  000037                     	ds	1
   868  000038                     dtoa@n:
   869                           	callstack 0
   870                           
   871                           ; 8 bytes @ 0x37
   872  000038                     	ds	1
   873  000039                     xtoa@n:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x38
   877  000039                     	ds	3
   878  00003C                     utoa@i:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x3B
   882  00003C                     	ds	2
   883  00003E                     otoa@i:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x3D
   887  00003E                     	ds	2
   888  000040                     dtoa@i:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x3F
   892  000040                     	ds	1
   893  000041                     xtoa@i:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x40
   897  000041                     	ds	2
   898  000043                     xtoa@c:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x42
   902  000043                     	ds	2
   903  000045                     ?_vfpfcnvrt:
   904                           	callstack 0
   905  000045                     vfpfcnvrt@fp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x44
   909  000045                     	ds	2
   910  000047                     vfpfcnvrt@fmt:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x46
   914  000047                     	ds	2
   915  000049                     vfpfcnvrt@ap:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x48
   919  000049                     	ds	2
   920  00004B                     ??_vfpfcnvrt:
   921                           
   922                           ; 1 bytes @ 0x4A
   923  00004B                     	ds	4
   924  00004F                     ?_vfprintf:
   925                           	callstack 0
   926  00004F                     vfprintf@fp:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x4E
   930  00004F                     	ds	2
   931  000051                     vfprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x50
   935  000051                     	ds	2
   936  000053                     vfprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x52
   940  000053                     	ds	2
   941  000055                     vfprintf@cfmt:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x54
   945  000055                     	ds	2
   946  000057                     ??_dht_read:
   947  000057                     
   948                           ; 1 bytes @ 0x56
   949  000057                     	ds	3
   950  00005A                     main@action:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x59
   954  00005A                     	ds	1
   955                           
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 114 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  action          1   89[COMRAM] enum E3677
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       2       0       0       0       0       0       0       0
   978 ;;      Totals:         1       2       0       0       0       0       0       0       0
   979 ;;Total ram usage:        3 bytes
   980 ;; Hardware stack levels required when called:   10
   981 ;; This function calls:
   982 ;;		_USART_Init
   983 ;;		_data_received
   984 ;;		_dht_read
   985 ;;		_get_action
   986 ;;		_memset
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text0
   993  003464                     __ptext0:
   994                           	callstack 0
   995  003464                     _main:
   996                           	callstack 21
   997  003464                     
   998                           ;main.c: 115:     USART_Init();
   999  003464  EC6C  F01D         	call	_USART_Init	;wreg free
  1000  003468                     
  1001                           ;main.c: 116:     memset(data_in, 0, 512);
  1002  003468  0E50               	movlw	low _data_in
  1003  00346A  6E03               	movwf	memset@dest^0,c
  1004  00346C  0E01               	movlw	high _data_in
  1005  00346E  6E04               	movwf	(memset@dest+1)^0,c
  1006  003470  0E00               	movlw	0
  1007  003472  6E06               	movwf	(memset@c+1)^0,c
  1008  003474  0E00               	movlw	0
  1009  003476  6E05               	movwf	memset@c^0,c
  1010  003478  0E02               	movlw	2
  1011  00347A  6E08               	movwf	(memset@n+1)^0,c
  1012  00347C  0E00               	movlw	0
  1013  00347E  6E07               	movwf	memset@n^0,c
  1014  003480  ECC7  F015         	call	_memset	;wreg free
  1015  003484                     
  1016                           ;main.c: 117:     position = 0;
  1017  003484  0E00               	movlw	0
  1018  003486  0100               	movlb	0	; () banked
  1019  003488  6F66               	movwf	_position& (0+255),b
  1020  00348A                     
  1021                           ; BSR set to: 0
  1022                           ;main.c: 118:     TRISD = 0;
  1023  00348A  0E00               	movlw	0
  1024  00348C  6E95               	movwf	149,c	;volatile
  1025  00348E                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 119:     LATD = 0;
  1028  00348E  0E00               	movlw	0
  1029  003490  6E8C               	movwf	140,c	;volatile
  1030  003492                     l3763:
  1031                           
  1032                           ;main.c: 122:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  1033  003492  0E15               	movlw	21
  1034  003494  0100               	movlb	0	; () banked
  1035  003496  6FF0               	movwf	(??_main+1)& (0+255),b
  1036  003498  0E4B               	movlw	75
  1037  00349A  6FEF               	movwf	??_main& (0+255),b
  1038  00349C  0EBE               	movlw	190
  1039  00349E                     u4127:
  1040  00349E  2EE8               	decfsz	wreg,f,c
  1041  0034A0  D7FE               	bra	u4127
  1042  0034A2  2FEF               	decfsz	??_main& (0+255),f,b
  1043  0034A4  D7FC               	bra	u4127
  1044  0034A6  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  1045  0034A8  D7FA               	bra	u4127
  1046  0034AA  F000               	nop	
  1047  0034AC                     
  1048                           ;main.c: 123:         dht_read();
  1049  0034AC  EC2A  F010         	call	_dht_read	;wreg free
  1050  0034B0                     
  1051                           ;main.c: 125:         if (data_received()) {
  1052  0034B0  EC3D  F01D         	call	_data_received	;wreg free
  1053  0034B4  0900               	iorlw	0
  1054  0034B6  B4D8               	btfsc	status,2,c
  1055  0034B8  EF60  F01A         	goto	u4111
  1056  0034BC  EF62  F01A         	goto	u4110
  1057  0034C0                     u4111:
  1058  0034C0  EF49  F01A         	goto	l3763
  1059  0034C4                     u4110:
  1060  0034C4                     
  1061                           ;main.c: 126:             action_t action = get_action();
  1062  0034C4  EC8B  F01A         	call	_get_action	;wreg free
  1063  0034C8  6E5A               	movwf	main@action^0,c
  1064                           
  1065                           ;main.c: 128:             switch (action) {
  1066  0034CA  EF6D  F01A         	goto	l3773
  1067  0034CE                     l84:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;main.c: 130:                     LATDbits.LATD1 = 1;
  1071  0034CE  828C               	bsf	140,1,c	;volatile
  1072                           
  1073                           ;main.c: 131:                     break;
  1074  0034D0  EF49  F01A         	goto	l3763
  1075  0034D4                     l86:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 134:                     LATDbits.LATD1 = 0;
  1079  0034D4  928C               	bcf	140,1,c	;volatile
  1080                           
  1081                           ;main.c: 135:                     break;
  1082  0034D6  EF49  F01A         	goto	l3763
  1083  0034DA                     l3773:
  1084  0034DA  505A               	movf	main@action^0,w,c
  1085  0034DC  0100               	movlb	0	; () banked
  1086  0034DE  6FEF               	movwf	??_main& (0+255),b
  1087  0034E0  6BF0               	clrf	(??_main+1)& (0+255),b
  1088                           
  1089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1090                           ; Switch size 1, requested type "simple"
  1091                           ; Number of cases is 1, Range of values is 0 to 0
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte            4     3 (average)
  1095                           ;	Chosen strategy is simple_byte
  1096  0034E2  51F0               	movf	(??_main+1)& (0+255),w,b
  1097  0034E4  0A00               	xorlw	0	; case 0
  1098  0034E6  B4D8               	btfsc	status,2,c
  1099  0034E8  EF78  F01A         	goto	l3881
  1100  0034EC  EF49  F01A         	goto	l3763
  1101  0034F0                     l3881:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 3, Range of values is 0 to 2
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte           10     6 (average)
  1109                           ;	Chosen strategy is simple_byte
  1110  0034F0  51EF               	movf	??_main& (0+255),w,b
  1111  0034F2  0A00               	xorlw	0	; case 0
  1112  0034F4  B4D8               	btfsc	status,2,c
  1113  0034F6  EF67  F01A         	goto	l84
  1114  0034FA  0A01               	xorlw	1	; case 1
  1115  0034FC  B4D8               	btfsc	status,2,c
  1116  0034FE  EF6A  F01A         	goto	l86
  1117  003502  0A03               	xorlw	3	; case 2
  1118  003504  B4D8               	btfsc	status,2,c
  1119  003506  EF87  F01A         	goto	l82
  1120  00350A  EF49  F01A         	goto	l3763
  1121  00350E                     l82:
  1122                           
  1123                           ; BSR set to: 0
  1124  00350E  EF49  F01A         	goto	l3763
  1125  003512  EF07  F000         	goto	start
  1126  003516                     __end_of_main:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _get_action *****************
  1130 ;; Defined at:
  1131 ;;		line 218 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  value           2   26[COMRAM] int 
  1136 ;;  str_value       2   24[COMRAM] PTR unsigned char 
  1137 ;;		 -> NULL(0), data_in(512), 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      enum E3677
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1147 ;;      Params:         0       0       0       0       0       0       0       0       0
  1148 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1150 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1151 ;;Total ram usage:        4 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    4
  1154 ;; This function calls:
  1155 ;;		_atoi
  1156 ;;		_is_command
  1157 ;;		_memset
  1158 ;;		_strstr
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text1
  1165  003516                     __ptext1:
  1166                           	callstack 0
  1167  003516                     _get_action:
  1168                           	callstack 26
  1169  003516                     
  1170                           ;main.c: 219:     if (is_command(LED0_CMD)) {
  1171  003516  0E1C               	movlw	low STR_3
  1172  003518  6E14               	movwf	is_command@command^0,c
  1173  00351A  0E08               	movlw	high STR_3
  1174  00351C  6E15               	movwf	(is_command@command+1)^0,c
  1175  00351E  ECCD  F01C         	call	_is_command	;wreg free
  1176  003522  0900               	iorlw	0
  1177  003524  B4D8               	btfsc	status,2,c
  1178  003526  EF97  F01A         	goto	u4051
  1179  00352A  EF99  F01A         	goto	u4050
  1180  00352E                     u4051:
  1181  00352E  EFD1  F01A         	goto	l3623
  1182  003532                     u4050:
  1183  003532                     
  1184                           ;main.c: 220:         char * str_value = (strstr(data_in, "=") + 1);
  1185  003532  0E50               	movlw	low _data_in
  1186  003534  6E0E               	movwf	strstr@h^0,c
  1187  003536  0E01               	movlw	high _data_in
  1188  003538  6E0F               	movwf	(strstr@h+1)^0,c
  1189  00353A  0E55               	movlw	low STR_5
  1190  00353C  6E10               	movwf	strstr@n^0,c
  1191  00353E  0E08               	movlw	high STR_5
  1192  003540  6E11               	movwf	(strstr@n+1)^0,c
  1193  003542  ECD2  F019         	call	_strstr	;wreg free
  1194  003546  0E01               	movlw	1
  1195  003548  240E               	addwf	?_strstr^0,w,c
  1196  00354A  6E19               	movwf	get_action@str_value^0,c
  1197  00354C  0E00               	movlw	0
  1198  00354E  200F               	addwfc	(?_strstr+1)^0,w,c
  1199  003550  6E1A               	movwf	(get_action@str_value+1)^0,c
  1200  003552                     
  1201                           ;main.c: 221:         int value = atoi(str_value);
  1202  003552  C019  F00A         	movff	get_action@str_value,atoi@s
  1203  003556  C01A  F00B         	movff	get_action@str_value+1,atoi@s+1
  1204  00355A  EC51  F012         	call	_atoi	;wreg free
  1205  00355E  C00A  F01B         	movff	?_atoi,get_action@value
  1206  003562  C00B  F01C         	movff	?_atoi+1,get_action@value+1
  1207  003566                     
  1208                           ;main.c: 222:         memset(data_in, '\0', 512);
  1209  003566  0E50               	movlw	low _data_in
  1210  003568  6E03               	movwf	memset@dest^0,c
  1211  00356A  0E01               	movlw	high _data_in
  1212  00356C  6E04               	movwf	(memset@dest+1)^0,c
  1213  00356E  0E00               	movlw	0
  1214  003570  6E06               	movwf	(memset@c+1)^0,c
  1215  003572  0E00               	movlw	0
  1216  003574  6E05               	movwf	memset@c^0,c
  1217  003576  0E02               	movlw	2
  1218  003578  6E08               	movwf	(memset@n+1)^0,c
  1219  00357A  0E00               	movlw	0
  1220  00357C  6E07               	movwf	memset@n^0,c
  1221  00357E  ECC7  F015         	call	_memset	;wreg free
  1222  003582                     
  1223                           ;main.c: 223:         position = 0;
  1224  003582  0E00               	movlw	0
  1225  003584  0100               	movlb	0	; () banked
  1226  003586  6F66               	movwf	_position& (0+255),b
  1227  003588                     
  1228                           ; BSR set to: 0
  1229                           ;main.c: 225:         return (value == 1) ? LED_ON : LED_OFF;
  1230  003588  041B               	decf	get_action@value^0,w,c
  1231  00358A  101C               	iorwf	(get_action@value+1)^0,w,c
  1232  00358C  A4D8               	btfss	status,2,c
  1233  00358E  EFCB  F01A         	goto	u4061
  1234  003592  EFCE  F01A         	goto	u4060
  1235  003596                     u4061:
  1236  003596  0E01               	movlw	1
  1237  003598  EFCF  F01A         	goto	u4070
  1238  00359C                     u4060:
  1239  00359C  0E00               	movlw	0
  1240  00359E                     u4070:
  1241  00359E  EFD2  F01A         	goto	l127
  1242  0035A2                     l3623:
  1243                           
  1244                           ;main.c: 230:     return NO_OP;
  1245  0035A2  0E02               	movlw	2
  1246  0035A4                     l127:
  1247  0035A4  0012               	return		;funcret
  1248  0035A6                     __end_of_get_action:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _is_command *****************
  1252 ;; Defined at:
  1253 ;;		line 233 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  command         2   19[COMRAM] PTR const unsigned char 
  1256 ;;		 -> STR_3(8), 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  ptr             2   21[COMRAM] PTR unsigned char 
  1259 ;;		 -> NULL(0), data_in(512), 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      _Bool 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1269 ;;      Params:         2       0       0       0       0       0       0       0       0
  1270 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1272 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1273 ;;Total ram usage:        4 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    3
  1276 ;; This function calls:
  1277 ;;		_strstr
  1278 ;; This function is called by:
  1279 ;;		_get_action
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text2
  1284  00399A                     __ptext2:
  1285                           	callstack 0
  1286  00399A                     _is_command:
  1287                           	callstack 26
  1288  00399A                     
  1289                           ;main.c: 234:     char * ptr = strstr(data_in, command);
  1290  00399A  0E50               	movlw	low _data_in
  1291  00399C  6E0E               	movwf	strstr@h^0,c
  1292  00399E  0E01               	movlw	high _data_in
  1293  0039A0  6E0F               	movwf	(strstr@h+1)^0,c
  1294  0039A2  C014  F010         	movff	is_command@command,strstr@n
  1295  0039A6  C015  F011         	movff	is_command@command+1,strstr@n+1
  1296  0039AA  ECD2  F019         	call	_strstr	;wreg free
  1297  0039AE  C00E  F016         	movff	?_strstr,is_command@ptr
  1298  0039B2  C00F  F017         	movff	?_strstr+1,is_command@ptr+1
  1299  0039B6                     
  1300                           ;main.c: 236:     if (ptr != ((void*)0)) {
  1301  0039B6  5016               	movf	is_command@ptr^0,w,c
  1302  0039B8  1017               	iorwf	(is_command@ptr+1)^0,w,c
  1303  0039BA  B4D8               	btfsc	status,2,c
  1304  0039BC  EFE2  F01C         	goto	u3951
  1305  0039C0  EFE4  F01C         	goto	u3950
  1306  0039C4                     u3951:
  1307  0039C4  EFE7  F01C         	goto	l3501
  1308  0039C8                     u3950:
  1309  0039C8                     
  1310                           ;main.c: 237:         return 1;
  1311  0039C8  0E01               	movlw	1
  1312  0039CA  EFE8  F01C         	goto	l131
  1313  0039CE                     l3501:
  1314                           
  1315                           ;main.c: 240:     return 0;
  1316  0039CE  0E00               	movlw	0
  1317  0039D0                     l131:
  1318  0039D0  0012               	return		;funcret
  1319  0039D2                     __end_of_is_command:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _dht_read *****************
  1323 ;; Defined at:
  1324 ;;		line 146 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  index           1   49[BANK0 ] unsigned char 
  1329 ;;  bit_index       2   52[BANK0 ] int 
  1330 ;;  mask            2   50[BANK0 ] int 
  1331 ;;  bit_position    2   47[BANK0 ] int 
  1332 ;;  temperature     2   45[BANK0 ] int 
  1333 ;;  relative_hum    2   43[BANK0 ] int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1345 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         3      11       0       0       0       0       0       0       0
  1347 ;;Total ram usage:       14 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    9
  1350 ;; This function calls:
  1351 ;;		_USART_SendString
  1352 ;;		_dht_read_bit
  1353 ;;		_memset
  1354 ;;		_sprintf
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361  002054                     __ptext3:
  1362                           	callstack 0
  1363  002054                     _dht_read:
  1364                           	callstack 21
  1365  002054                     
  1366                           ;main.c: 147:     memset(dht_raw_data, 0, 40);
  1367  002054  0E00               	movlw	low _dht_raw_data
  1368  002056  6E03               	movwf	memset@dest^0,c
  1369  002058  0E01               	movlw	high _dht_raw_data
  1370  00205A  6E04               	movwf	(memset@dest+1)^0,c
  1371  00205C  0E00               	movlw	0
  1372  00205E  6E06               	movwf	(memset@c+1)^0,c
  1373  002060  0E00               	movlw	0
  1374  002062  6E05               	movwf	memset@c^0,c
  1375  002064  0E00               	movlw	0
  1376  002066  6E08               	movwf	(memset@n+1)^0,c
  1377  002068  0E28               	movlw	40
  1378  00206A  6E07               	movwf	memset@n^0,c
  1379  00206C  ECC7  F015         	call	_memset	;wreg free
  1380  002070                     
  1381                           ;main.c: 148:     TRISD = 0;
  1382  002070  0E00               	movlw	0
  1383  002072  6E95               	movwf	149,c	;volatile
  1384  002074                     
  1385                           ;main.c: 149:     LATDbits.LATD2 = 0;
  1386  002074  948C               	bcf	140,2,c	;volatile
  1387  002076                     
  1388                           ;main.c: 150:     _delay((unsigned long)((18)*(16000000/4000.0)));
  1389  002076  0E5E               	movlw	94
  1390  002078  6E57               	movwf	??_dht_read^0,c
  1391  00207A  0E80               	movlw	128
  1392  00207C                     u4137:
  1393  00207C  2EE8               	decfsz	wreg,f,c
  1394  00207E  D7FE               	bra	u4137
  1395  002080  2E57               	decfsz	??_dht_read^0,f,c
  1396  002082  D7FC               	bra	u4137
  1397  002084  D000               	nop2	
  1398  002086                     
  1399                           ;main.c: 151:     LATDbits.LATD2 = 1;
  1400  002086  848C               	bsf	140,2,c	;volatile
  1401  002088                     
  1402                           ;main.c: 152:     _delay((unsigned long)((20)*(16000000/4000000.0)));
  1403  002088  0E1A               	movlw	26
  1404  00208A                     u4147:
  1405  00208A  2EE8               	decfsz	wreg,f,c
  1406  00208C  D7FE               	bra	u4147
  1407  00208E  D000               	nop2	
  1408  002090                     
  1409                           ;main.c: 153:     TRISD = 1;
  1410  002090  0E01               	movlw	1
  1411  002092  6E95               	movwf	149,c	;volatile
  1412  002094                     l93:
  1413  002094  B483               	btfsc	131,2,c	;volatile
  1414  002096  EF4F  F010         	goto	u3961
  1415  00209A  EF51  F010         	goto	u3960
  1416  00209E                     u3961:
  1417  00209E  EF4A  F010         	goto	l93
  1418  0020A2                     u3960:
  1419  0020A2                     l96:
  1420  0020A2  A483               	btfss	131,2,c	;volatile
  1421  0020A4  EF56  F010         	goto	u3971
  1422  0020A8  EF58  F010         	goto	u3970
  1423  0020AC                     u3971:
  1424  0020AC  EF51  F010         	goto	l96
  1425  0020B0                     u3970:
  1426  0020B0                     l99:
  1427  0020B0  B483               	btfsc	131,2,c	;volatile
  1428  0020B2  EF5D  F010         	goto	u3981
  1429  0020B6  EF5F  F010         	goto	u3980
  1430  0020BA                     u3981:
  1431  0020BA  EF58  F010         	goto	l99
  1432  0020BE                     u3980:
  1433  0020BE                     
  1434                           ;main.c: 159:     for (uint8_t index = 0; index < 40; index++) {
  1435  0020BE  0E00               	movlw	0
  1436  0020C0  0100               	movlb	0	; () banked
  1437  0020C2  6FEA               	movwf	dht_read@index& (0+255),b
  1438  0020C4                     l3545:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 160:         dht_raw_data[index] = dht_read_bit();
  1442  0020C4  EC27  F01C         	call	_dht_read_bit	;wreg free
  1443  0020C8  0100               	movlb	0	; () banked
  1444  0020CA  51EA               	movf	dht_read@index& (0+255),w,b
  1445  0020CC  0D02               	mullw	2
  1446  0020CE  0E00               	movlw	low _dht_raw_data
  1447  0020D0  24F3               	addwf	243,w,c
  1448  0020D2  6ED9               	movwf	fsr2l,c
  1449  0020D4  0E01               	movlw	high _dht_raw_data
  1450  0020D6  20F4               	addwfc	prodh,w,c
  1451  0020D8  6EDA               	movwf	fsr2h,c
  1452  0020DA  C003  FFDE         	movff	?_dht_read_bit,postinc2
  1453  0020DE  C004  FFDD         	movff	?_dht_read_bit+1,postdec2
  1454  0020E2                     
  1455                           ; BSR set to: 0
  1456                           ;main.c: 161:     }
  1457  0020E2  2BEA               	incf	dht_read@index& (0+255),f,b
  1458  0020E4                     
  1459                           ; BSR set to: 0
  1460  0020E4  0E27               	movlw	39
  1461  0020E6  65EA               	cpfsgt	dht_read@index& (0+255),b
  1462  0020E8  EF78  F010         	goto	u3991
  1463  0020EC  EF7A  F010         	goto	u3990
  1464  0020F0                     u3991:
  1465  0020F0  EF62  F010         	goto	l3545
  1466  0020F4                     u3990:
  1467  0020F4                     
  1468                           ; BSR set to: 0
  1469                           ;main.c: 163:     int relative_humidity = 0;
  1470  0020F4  0E00               	movlw	0
  1471  0020F6  6FE5               	movwf	(dht_read@relative_humidity+1)& (0+255),b
  1472  0020F8  0E00               	movlw	0
  1473  0020FA  6FE4               	movwf	dht_read@relative_humidity& (0+255),b
  1474                           
  1475                           ;main.c: 164:     int temperature = 0;
  1476  0020FC  0E00               	movlw	0
  1477  0020FE  6FE7               	movwf	(dht_read@temperature+1)& (0+255),b
  1478  002100  0E00               	movlw	0
  1479  002102  6FE6               	movwf	dht_read@temperature& (0+255),b
  1480                           
  1481                           ;main.c: 166:     int bit_index = 0;
  1482  002104  0E00               	movlw	0
  1483  002106  6FEE               	movwf	(dht_read@bit_index+1)& (0+255),b
  1484  002108  0E00               	movlw	0
  1485  00210A  6FED               	movwf	dht_read@bit_index& (0+255),b
  1486                           
  1487                           ;main.c: 167:     int bit_position = 7;
  1488  00210C  0E00               	movlw	0
  1489  00210E  6FE9               	movwf	(dht_read@bit_position+1)& (0+255),b
  1490  002110  0E07               	movlw	7
  1491  002112  6FE8               	movwf	dht_read@bit_position& (0+255),b
  1492                           
  1493                           ;main.c: 169:     for (bit_index = 0; bit_index < 8; bit_index++) {
  1494  002114  0E00               	movlw	0
  1495  002116  6FEE               	movwf	(dht_read@bit_index+1)& (0+255),b
  1496  002118  0E00               	movlw	0
  1497  00211A  6FED               	movwf	dht_read@bit_index& (0+255),b
  1498  00211C                     l3557:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 170:         mask = dht_raw_data[bit_index];
  1502  00211C  90D8               	bcf	status,0,c
  1503  00211E  35ED               	rlcf	dht_read@bit_index& (0+255),w,b
  1504  002120  6ED9               	movwf	fsr2l,c
  1505  002122  35EE               	rlcf	(dht_read@bit_index+1)& (0+255),w,b
  1506  002124  6EDA               	movwf	fsr2h,c
  1507  002126  0E00               	movlw	low _dht_raw_data
  1508  002128  26D9               	addwf	fsr2l,f,c
  1509  00212A  0E01               	movlw	high _dht_raw_data
  1510  00212C  22DA               	addwfc	fsr2h,f,c
  1511  00212E  CFDE F0EB          	movff	postinc2,dht_read@mask
  1512  002132  CFDD F0EC          	movff	postdec2,dht_read@mask+1
  1513  002136                     
  1514                           ; BSR set to: 0
  1515                           ;main.c: 172:         mask = (mask << bit_position);
  1516  002136  C0E8  F057         	movff	dht_read@bit_position,??_dht_read
  1517  00213A  C0EB  F058         	movff	dht_read@mask,??_dht_read+1
  1518  00213E  C0EC  F059         	movff	dht_read@mask+1,??_dht_read+2
  1519  002142  2A57               	incf	??_dht_read^0,f,c
  1520  002144  EFA7  F010         	goto	u4004
  1521  002148                     u4005:
  1522  002148  90D8               	bcf	status,0,c
  1523  00214A  3658               	rlcf	(??_dht_read+1)^0,f,c
  1524  00214C  3659               	rlcf	(??_dht_read+2)^0,f,c
  1525  00214E                     u4004:
  1526  00214E  2E57               	decfsz	??_dht_read^0,f,c
  1527  002150  EFA4  F010         	goto	u4005
  1528  002154  C058  F0EB         	movff	??_dht_read+1,dht_read@mask
  1529  002158  C059  F0EC         	movff	??_dht_read+2,dht_read@mask+1
  1530  00215C                     
  1531                           ;main.c: 173:         relative_humidity = (relative_humidity | mask);
  1532  00215C  0100               	movlb	0	; () banked
  1533  00215E  51EB               	movf	dht_read@mask& (0+255),w,b
  1534  002160  11E4               	iorwf	dht_read@relative_humidity& (0+255),w,b
  1535  002162  6FE4               	movwf	dht_read@relative_humidity& (0+255),b
  1536  002164  51EC               	movf	(dht_read@mask+1)& (0+255),w,b
  1537  002166  11E5               	iorwf	(dht_read@relative_humidity+1)& (0+255),w,b
  1538  002168  6FE5               	movwf	(dht_read@relative_humidity+1)& (0+255),b
  1539  00216A                     
  1540                           ; BSR set to: 0
  1541                           ;main.c: 174:         bit_position--;
  1542  00216A  07E8               	decf	dht_read@bit_position& (0+255),f,b
  1543  00216C  A0D8               	btfss	status,0,c
  1544  00216E  07E9               	decf	(dht_read@bit_position+1)& (0+255),f,b
  1545  002170                     
  1546                           ; BSR set to: 0
  1547                           ;main.c: 175:     }
  1548  002170  4BED               	infsnz	dht_read@bit_index& (0+255),f,b
  1549  002172  2BEE               	incf	(dht_read@bit_index+1)& (0+255),f,b
  1550  002174                     
  1551                           ; BSR set to: 0
  1552  002174  BFEE               	btfsc	(dht_read@bit_index+1)& (0+255),7,b
  1553  002176  EFC6  F010         	goto	u4011
  1554  00217A  51EE               	movf	(dht_read@bit_index+1)& (0+255),w,b
  1555  00217C  E109               	bnz	u4010
  1556  00217E  0E08               	movlw	8
  1557  002180  5DED               	subwf	dht_read@bit_index& (0+255),w,b
  1558  002182  A0D8               	btfss	status,0,c
  1559  002184  EFC6  F010         	goto	u4011
  1560  002188  EFC8  F010         	goto	u4010
  1561  00218C                     u4011:
  1562  00218C  EF8E  F010         	goto	l3557
  1563  002190                     u4010:
  1564  002190                     
  1565                           ; BSR set to: 0
  1566                           ;main.c: 177:     bit_position = 7;
  1567  002190  0E00               	movlw	0
  1568  002192  6FE9               	movwf	(dht_read@bit_position+1)& (0+255),b
  1569  002194  0E07               	movlw	7
  1570  002196  6FE8               	movwf	dht_read@bit_position& (0+255),b
  1571                           
  1572                           ;main.c: 179:     for (bit_index = 16; bit_index < 24; bit_index++) {
  1573  002198  0E00               	movlw	0
  1574  00219A  6FEE               	movwf	(dht_read@bit_index+1)& (0+255),b
  1575  00219C  0E10               	movlw	16
  1576  00219E  6FED               	movwf	dht_read@bit_index& (0+255),b
  1577  0021A0                     l3575:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;main.c: 180:         mask = dht_raw_data[bit_index];
  1581  0021A0  90D8               	bcf	status,0,c
  1582  0021A2  35ED               	rlcf	dht_read@bit_index& (0+255),w,b
  1583  0021A4  6ED9               	movwf	fsr2l,c
  1584  0021A6  35EE               	rlcf	(dht_read@bit_index+1)& (0+255),w,b
  1585  0021A8  6EDA               	movwf	fsr2h,c
  1586  0021AA  0E00               	movlw	low _dht_raw_data
  1587  0021AC  26D9               	addwf	fsr2l,f,c
  1588  0021AE  0E01               	movlw	high _dht_raw_data
  1589  0021B0  22DA               	addwfc	fsr2h,f,c
  1590  0021B2  CFDE F0EB          	movff	postinc2,dht_read@mask
  1591  0021B6  CFDD F0EC          	movff	postdec2,dht_read@mask+1
  1592  0021BA                     
  1593                           ; BSR set to: 0
  1594                           ;main.c: 182:         mask = (mask << bit_position);
  1595  0021BA  C0E8  F057         	movff	dht_read@bit_position,??_dht_read
  1596  0021BE  C0EB  F058         	movff	dht_read@mask,??_dht_read+1
  1597  0021C2  C0EC  F059         	movff	dht_read@mask+1,??_dht_read+2
  1598  0021C6  2A57               	incf	??_dht_read^0,f,c
  1599  0021C8  EFE9  F010         	goto	u4024
  1600  0021CC                     u4025:
  1601  0021CC  90D8               	bcf	status,0,c
  1602  0021CE  3658               	rlcf	(??_dht_read+1)^0,f,c
  1603  0021D0  3659               	rlcf	(??_dht_read+2)^0,f,c
  1604  0021D2                     u4024:
  1605  0021D2  2E57               	decfsz	??_dht_read^0,f,c
  1606  0021D4  EFE6  F010         	goto	u4025
  1607  0021D8  C058  F0EB         	movff	??_dht_read+1,dht_read@mask
  1608  0021DC  C059  F0EC         	movff	??_dht_read+2,dht_read@mask+1
  1609  0021E0                     
  1610                           ;main.c: 183:         temperature = (temperature | mask);
  1611  0021E0  0100               	movlb	0	; () banked
  1612  0021E2  51EB               	movf	dht_read@mask& (0+255),w,b
  1613  0021E4  11E6               	iorwf	dht_read@temperature& (0+255),w,b
  1614  0021E6  6FE6               	movwf	dht_read@temperature& (0+255),b
  1615  0021E8  51EC               	movf	(dht_read@mask+1)& (0+255),w,b
  1616  0021EA  11E7               	iorwf	(dht_read@temperature+1)& (0+255),w,b
  1617  0021EC  6FE7               	movwf	(dht_read@temperature+1)& (0+255),b
  1618  0021EE                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 184:         bit_position--;
  1621  0021EE  07E8               	decf	dht_read@bit_position& (0+255),f,b
  1622  0021F0  A0D8               	btfss	status,0,c
  1623  0021F2  07E9               	decf	(dht_read@bit_position+1)& (0+255),f,b
  1624  0021F4                     
  1625                           ; BSR set to: 0
  1626                           ;main.c: 185:     }
  1627  0021F4  4BED               	infsnz	dht_read@bit_index& (0+255),f,b
  1628  0021F6  2BEE               	incf	(dht_read@bit_index+1)& (0+255),f,b
  1629  0021F8                     
  1630                           ; BSR set to: 0
  1631  0021F8  BFEE               	btfsc	(dht_read@bit_index+1)& (0+255),7,b
  1632  0021FA  EF08  F011         	goto	u4031
  1633  0021FE  51EE               	movf	(dht_read@bit_index+1)& (0+255),w,b
  1634  002200  E109               	bnz	u4030
  1635  002202  0E18               	movlw	24
  1636  002204  5DED               	subwf	dht_read@bit_index& (0+255),w,b
  1637  002206  A0D8               	btfss	status,0,c
  1638  002208  EF08  F011         	goto	u4031
  1639  00220C  EF0A  F011         	goto	u4030
  1640  002210                     u4031:
  1641  002210  EFD0  F010         	goto	l3575
  1642  002214                     u4030:
  1643  002214                     
  1644                           ; BSR set to: 0
  1645                           ;main.c: 187:     memset(data_out, 0, 50);
  1646  002214  0E67               	movlw	low _data_out
  1647  002216  6E03               	movwf	memset@dest^0,c
  1648  002218  0E00               	movlw	high _data_out
  1649  00221A  6E04               	movwf	(memset@dest+1)^0,c
  1650  00221C  0E00               	movlw	0
  1651  00221E  6E06               	movwf	(memset@c+1)^0,c
  1652  002220  0E00               	movlw	0
  1653  002222  6E05               	movwf	memset@c^0,c
  1654  002224  0E00               	movlw	0
  1655  002226  6E08               	movwf	(memset@n+1)^0,c
  1656  002228  0E32               	movlw	50
  1657  00222A  6E07               	movwf	memset@n^0,c
  1658  00222C  ECC7  F015         	call	_memset	;wreg free
  1659  002230                     
  1660                           ;main.c: 188:     sprintf(data_out, TEMP_SENSOR_CMD, temperature);
  1661  002230  0E67               	movlw	low _data_out
  1662  002232  0100               	movlb	0	; () banked
  1663  002234  6FD4               	movwf	sprintf@s& (0+255),b
  1664  002236  0E00               	movlw	high _data_out
  1665  002238  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1666  00223A  0E01               	movlw	low STR_1
  1667  00223C  6FD6               	movwf	sprintf@fmt& (0+255),b
  1668  00223E  0E08               	movlw	high STR_1
  1669  002240  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1670  002242  C0E6  F0D8         	movff	dht_read@temperature,?_sprintf+4
  1671  002246  C0E7  F0D9         	movff	dht_read@temperature+1,?_sprintf+5
  1672  00224A  EC62  F01B         	call	_sprintf	;wreg free
  1673  00224E                     
  1674                           ;main.c: 189:     USART_SendString(data_out);
  1675  00224E  0E67               	movlw	low _data_out
  1676  002250  6E07               	movwf	USART_SendString@data^0,c
  1677  002252  0E00               	movlw	high _data_out
  1678  002254  6E08               	movwf	(USART_SendString@data+1)^0,c
  1679  002256  EC4A  F01C         	call	_USART_SendString	;wreg free
  1680  00225A                     
  1681                           ;main.c: 191:     memset(data_out, 0, 50);
  1682  00225A  0E67               	movlw	low _data_out
  1683  00225C  6E03               	movwf	memset@dest^0,c
  1684  00225E  0E00               	movlw	high _data_out
  1685  002260  6E04               	movwf	(memset@dest+1)^0,c
  1686  002262  0E00               	movlw	0
  1687  002264  6E06               	movwf	(memset@c+1)^0,c
  1688  002266  0E00               	movlw	0
  1689  002268  6E05               	movwf	memset@c^0,c
  1690  00226A  0E00               	movlw	0
  1691  00226C  6E08               	movwf	(memset@n+1)^0,c
  1692  00226E  0E32               	movlw	50
  1693  002270  6E07               	movwf	memset@n^0,c
  1694  002272  ECC7  F015         	call	_memset	;wreg free
  1695  002276                     
  1696                           ;main.c: 192:     sprintf(data_out, RH_SENSOR_CMD, relative_humidity);
  1697  002276  0E67               	movlw	low _data_out
  1698  002278  0100               	movlb	0	; () banked
  1699  00227A  6FD4               	movwf	sprintf@s& (0+255),b
  1700  00227C  0E00               	movlw	high _data_out
  1701  00227E  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1702  002280  0E0F               	movlw	low STR_2
  1703  002282  6FD6               	movwf	sprintf@fmt& (0+255),b
  1704  002284  0E08               	movlw	high STR_2
  1705  002286  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1706  002288  C0E4  F0D8         	movff	dht_read@relative_humidity,?_sprintf+4
  1707  00228C  C0E5  F0D9         	movff	dht_read@relative_humidity+1,?_sprintf+5
  1708  002290  EC62  F01B         	call	_sprintf	;wreg free
  1709                           
  1710                           ;main.c: 193:     USART_SendString(data_out);
  1711  002294  0E67               	movlw	low _data_out
  1712  002296  6E07               	movwf	USART_SendString@data^0,c
  1713  002298  0E00               	movlw	high _data_out
  1714  00229A  6E08               	movwf	(USART_SendString@data+1)^0,c
  1715  00229C  EC4A  F01C         	call	_USART_SendString	;wreg free
  1716  0022A0  0012               	return		;funcret
  1717  0022A2                     __end_of_dht_read:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _sprintf *****************
  1721 ;; Defined at:
  1722 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1725 ;;		 -> data_out(50), 
  1726 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1727 ;;		 -> STR_2(13), STR_1(14), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  f               6   35[BANK0 ] struct _IO_FILE
  1730 ;;  ap              2   41[BANK0 ] PTR void [1]
  1731 ;;		 -> ?_sprintf(2), 
  1732 ;;  ret             2    0        int 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2   27[BANK0 ] int 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         0       6       0       0       0       0       0       0       0
  1743 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1746 ;;Total ram usage:       16 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    8
  1749 ;; This function calls:
  1750 ;;		_vfprintf
  1751 ;; This function is called by:
  1752 ;;		_dht_read
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text4
  1757  0036C4                     __ptext4:
  1758                           	callstack 0
  1759  0036C4                     _sprintf:
  1760                           	callstack 21
  1761  0036C4  0ED8               	movlw	low (?_sprintf+4)
  1762  0036C6  0100               	movlb	0	; () banked
  1763  0036C8  6FE2               	movwf	sprintf@ap& (0+255),b
  1764  0036CA  0E00               	movlw	high (?_sprintf+4)
  1765  0036CC  6FE3               	movwf	(sprintf@ap+1)& (0+255),b
  1766  0036CE  C0D4  F0DC         	movff	sprintf@s,sprintf@f
  1767  0036D2  C0D5  F0DD         	movff	sprintf@s+1,sprintf@f+1
  1768  0036D6                     
  1769                           ; BSR set to: 0
  1770  0036D6  0E00               	movlw	0
  1771  0036D8  6FDF               	movwf	(sprintf@f+3)& (0+255),b
  1772  0036DA  0E00               	movlw	0
  1773  0036DC  6FDE               	movwf	(sprintf@f+2)& (0+255),b
  1774  0036DE                     
  1775                           ; BSR set to: 0
  1776  0036DE  0E00               	movlw	0
  1777  0036E0  6FE1               	movwf	(sprintf@f+5)& (0+255),b
  1778  0036E2  0E00               	movlw	0
  1779  0036E4  6FE0               	movwf	(sprintf@f+4)& (0+255),b
  1780  0036E6                     
  1781                           ; BSR set to: 0
  1782  0036E6  0EDC               	movlw	low sprintf@f
  1783  0036E8  6E4F               	movwf	vfprintf@fp^0,c
  1784  0036EA  0E00               	movlw	high sprintf@f
  1785  0036EC  6E50               	movwf	(vfprintf@fp+1)^0,c
  1786  0036EE  C0D6  F051         	movff	sprintf@fmt,vfprintf@fmt
  1787  0036F2  C0D7  F052         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1788  0036F6  0EE2               	movlw	low sprintf@ap
  1789  0036F8  6E53               	movwf	vfprintf@ap^0,c
  1790  0036FA  0E00               	movlw	high sprintf@ap
  1791  0036FC  6E54               	movwf	(vfprintf@ap+1)^0,c
  1792  0036FE  ECD3  F01A         	call	_vfprintf	;wreg free
  1793  003702  0100               	movlb	0	; () banked
  1794  003704  51DE               	movf	(sprintf@f+2)& (0+255),w,b
  1795  003706  25D4               	addwf	sprintf@s& (0+255),w,b
  1796  003708  6ED9               	movwf	fsr2l,c
  1797  00370A  51DF               	movf	(sprintf@f+3)& (0+255),w,b
  1798  00370C  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1799  00370E  6EDA               	movwf	fsr2h,c
  1800  003710  0E00               	movlw	0
  1801  003712  6EDF               	movwf	indf2,c
  1802  003714                     
  1803                           ; BSR set to: 0
  1804  003714  0012               	return		;funcret
  1805  003716                     __end_of_sprintf:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _vfprintf *****************
  1809 ;; Defined at:
  1810 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  1813 ;;		 -> sprintf@f(6), 
  1814 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  1815 ;;		 -> STR_2(13), STR_1(14), 
  1816 ;;  ap              2   82[COMRAM] PTR PTR void 
  1817 ;;		 -> sprintf@ap(2), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  1820 ;;		 -> STR_2(13), STR_1(14), 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2   78[COMRAM] int 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1830 ;;      Params:         6       0       0       0       0       0       0       0       0
  1831 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1833 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1834 ;;Total ram usage:        8 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    7
  1837 ;; This function calls:
  1838 ;;		_vfpfcnvrt
  1839 ;; This function is called by:
  1840 ;;		_sprintf
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text5
  1845  0035A6                     __ptext5:
  1846                           	callstack 0
  1847  0035A6                     _vfprintf:
  1848                           	callstack 21
  1849  0035A6                     
  1850                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1851  0035A6  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  1852  0035AA  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1853  0035AE                     
  1854                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1855  0035AE  0E00               	movlw	0
  1856  0035B0  0100               	movlb	0	; () banked
  1857  0035B2  6F61               	movwf	(_nout+1)& (0+255),b
  1858  0035B4  0E00               	movlw	0
  1859  0035B6  6F60               	movwf	_nout& (0+255),b
  1860                           
  1861                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1862  0035B8  EFF1  F01A         	goto	l3421
  1863  0035BC                     l3419:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1867  0035BC  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1868  0035C0  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1869  0035C4  0E55               	movlw	low vfprintf@cfmt
  1870  0035C6  6E47               	movwf	vfpfcnvrt@fmt^0,c
  1871  0035C8  0E00               	movlw	high vfprintf@cfmt
  1872  0035CA  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1873  0035CC  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1874  0035D0  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1875  0035D4  EC2C  F004         	call	_vfpfcnvrt	;wreg free
  1876  0035D8  5045               	movf	?_vfpfcnvrt^0,w,c
  1877  0035DA  0100               	movlb	0	; () banked
  1878  0035DC  2760               	addwf	_nout& (0+255),f,b
  1879  0035DE  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  1880  0035E0  2361               	addwfc	(_nout+1)& (0+255),f,b
  1881  0035E2                     l3421:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1885  0035E2  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  1886  0035E6  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1887  0035EA                     	if	0	;tblptru may be non-zero
  1888  0035EA                     	endif
  1889  0035EA                     	if	0	;tblptru may be non-zero
  1890  0035EA                     	endif
  1891  0035EA  0008               	tblrd		*
  1892  0035EC  50F5               	movf	tablat,w,c
  1893  0035EE  0900               	iorlw	0
  1894  0035F0  A4D8               	btfss	status,2,c
  1895  0035F2  EFFD  F01A         	goto	u3851
  1896  0035F6  EFFF  F01A         	goto	u3850
  1897  0035FA                     u3851:
  1898  0035FA  EFDE  F01A         	goto	l3419
  1899  0035FE                     u3850:
  1900  0035FE                     
  1901                           ; BSR set to: 0
  1902                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  1903  0035FE  C060  F04F         	movff	_nout,?_vfprintf
  1904  003602  C061  F050         	movff	_nout+1,?_vfprintf+1
  1905  003606                     
  1906                           ; BSR set to: 0
  1907  003606  0012               	return		;funcret
  1908  003608                     __end_of_vfprintf:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _vfpfcnvrt *****************
  1912 ;; Defined at:
  1913 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1916 ;;		 -> sprintf@f(6), 
  1917 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1918 ;;		 -> vfprintf@cfmt(2), 
  1919 ;;  ap              2   72[COMRAM] PTR PTR void 
  1920 ;;		 -> sprintf@ap(2), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  llu             8   19[BANK0 ] unsigned long long 
  1923 ;;  ll              8    8[BANK0 ] long long 
  1924 ;;  f               4    0        long long 
  1925 ;;  ct              3    0        unsigned char [3]
  1926 ;;  vp              2   16[BANK0 ] PTR void 
  1927 ;;		 -> ?_sprintf(2), 
  1928 ;;  done            2    2[BANK0 ] int 
  1929 ;;  cp              2    0[BANK0 ] PTR unsigned char 
  1930 ;;		 -> ?_sprintf(2), 
  1931 ;;  i               2    0        int 
  1932 ;;  c               1   18[BANK0 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2   68[COMRAM] int 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         6       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         0      27       0       0       0       0       0       0       0
  1944 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1945 ;;      Totals:        10      27       0       0       0       0       0       0       0
  1946 ;;Total ram usage:       37 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    6
  1949 ;; This function calls:
  1950 ;;		_atoi
  1951 ;;		_ctoa
  1952 ;;		_dtoa
  1953 ;;		_fputc
  1954 ;;		_isdigit
  1955 ;;		_otoa
  1956 ;;		_stoa
  1957 ;;		_strncmp
  1958 ;;		_utoa
  1959 ;;		_xtoa
  1960 ;; This function is called by:
  1961 ;;		_vfprintf
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text6
  1966  000858                     __ptext6:
  1967                           	callstack 0
  1968  000858                     _vfpfcnvrt:
  1969                           	callstack 21
  1970  000858                     
  1971                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  1972  000858  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  00085C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  000860  CFDE FFF6          	movff	postinc2,tblptrl
  1975  000864  CFDD FFF7          	movff	postdec2,tblptrh
  1976  000868                     	if	0	;tblptru may be non-zero
  1977  000868                     	endif
  1978  000868                     	if	0	;tblptru may be non-zero
  1979  000868                     	endif
  1980  000868  0008               	tblrd		*
  1981  00086A  50F5               	movf	tablat,w,c
  1982  00086C  0A25               	xorlw	37
  1983  00086E  A4D8               	btfss	status,2,c
  1984  000870  EF3C  F004         	goto	u3331
  1985  000874  EF3E  F004         	goto	u3330
  1986  000878                     u3331:
  1987  000878  EF35  F00D         	goto	l3361
  1988  00087C                     u3330:
  1989  00087C                     
  1990                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1991  00087C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992  000880  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993  000884  2ADE               	incf	postinc2,f,c
  1994  000886  0E00               	movlw	0
  1995  000888  22DD               	addwfc	postdec2,f,c
  1996  00088A                     
  1997                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  1998  00088A  0E00               	movlw	0
  1999  00088C  0100               	movlb	0	; () banked
  2000  00088E  6F63               	movwf	(_width+1)& (0+255),b
  2001  000890  0E00               	movlw	0
  2002  000892  6F62               	movwf	_width& (0+255),b
  2003  000894  C062  F05B         	movff	_width,_flags
  2004  000898  C063  F05C         	movff	_width+1,_flags+1
  2005  00089C                     
  2006                           ; BSR set to: 0
  2007                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2008  00089C  6964               	setf	_prec& (0+255),b
  2009  00089E  6965               	setf	(_prec+1)& (0+255),b
  2010  0008A0                     
  2011                           ; BSR set to: 0
  2012                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2013  0008A0  0E00               	movlw	0
  2014  0008A2  6FBC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2015  0008A4  0E00               	movlw	0
  2016  0008A6  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  2017                           
  2018                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2019  0008A8  EF9C  F004         	goto	l3079
  2020  0008AC                     l3053:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2024  0008AC  805B               	bsf	_flags^0,0,c
  2025  0008AE                     l3055:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2029  0008AE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2030  0008B2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2031  0008B6  2ADE               	incf	postinc2,f,c
  2032  0008B8  0E00               	movlw	0
  2033  0008BA  22DD               	addwfc	postdec2,f,c
  2034                           
  2035                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2036  0008BC  EF9C  F004         	goto	l3079
  2037  0008C0                     l3057:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2041  0008C0  825B               	bsf	_flags^0,1,c
  2042  0008C2  EF57  F004         	goto	l3055
  2043  0008C6                     l3061:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2047  0008C6  845B               	bsf	_flags^0,2,c
  2048  0008C8  EF57  F004         	goto	l3055
  2049  0008CC                     l3065:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2053  0008CC  865B               	bsf	_flags^0,3,c
  2054  0008CE  EF57  F004         	goto	l3055
  2055  0008D2                     l3069:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2059  0008D2  885B               	bsf	_flags^0,4,c
  2060  0008D4  EF57  F004         	goto	l3055
  2061  0008D8                     l3073:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2065  0008D8  0E00               	movlw	0
  2066  0008DA  6FBC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2067  0008DC  0E01               	movlw	1
  2068  0008DE  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  2069                           
  2070                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2071  0008E0  EF9C  F004         	goto	l3079
  2072  0008E4                     l3077:
  2073                           
  2074                           ; BSR set to: 0
  2075  0008E4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2076  0008E8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2077  0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  2078  0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  2079  0008F4                     	if	0	;tblptru may be non-zero
  2080  0008F4                     	endif
  2081  0008F4                     	if	0	;tblptru may be non-zero
  2082  0008F4                     	endif
  2083  0008F4  0008               	tblrd		*
  2084  0008F6  50F5               	movf	tablat,w,c
  2085  0008F8  6E4B               	movwf	??_vfpfcnvrt^0,c
  2086  0008FA  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  2087                           
  2088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2089                           ; Switch size 1, requested type "simple"
  2090                           ; Number of cases is 1, Range of values is 0 to 0
  2091                           ; switch strategies available:
  2092                           ; Name         Instructions Cycles
  2093                           ; simple_byte            4     3 (average)
  2094                           ;	Chosen strategy is simple_byte
  2095  0008FC  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2096  0008FE  0A00               	xorlw	0	; case 0
  2097  000900  B4D8               	btfsc	status,2,c
  2098  000902  EF85  F004         	goto	l3883
  2099  000906  EF6C  F004         	goto	l3073
  2100  00090A                     l3883:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ; Switch size 1, requested type "simple"
  2104                           ; Number of cases is 5, Range of values is 32 to 48
  2105                           ; switch strategies available:
  2106                           ; Name         Instructions Cycles
  2107                           ; simple_byte           16     9 (average)
  2108                           ;	Chosen strategy is simple_byte
  2109  00090A  504B               	movf	??_vfpfcnvrt^0,w,c
  2110  00090C  0A20               	xorlw	32	; case 32
  2111  00090E  B4D8               	btfsc	status,2,c
  2112  000910  EF66  F004         	goto	l3065
  2113  000914  0A03               	xorlw	3	; case 35
  2114  000916  B4D8               	btfsc	status,2,c
  2115  000918  EF69  F004         	goto	l3069
  2116  00091C  0A08               	xorlw	8	; case 43
  2117  00091E  B4D8               	btfsc	status,2,c
  2118  000920  EF63  F004         	goto	l3061
  2119  000924  0A06               	xorlw	6	; case 45
  2120  000926  B4D8               	btfsc	status,2,c
  2121  000928  EF56  F004         	goto	l3053
  2122  00092C  0A1D               	xorlw	29	; case 48
  2123  00092E  B4D8               	btfsc	status,2,c
  2124  000930  EF60  F004         	goto	l3057
  2125  000934  EF6C  F004         	goto	l3073
  2126  000938                     l3079:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2130  000938  51BB               	movf	vfpfcnvrt@done& (0+255),w,b
  2131  00093A  11BC               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2132  00093C  B4D8               	btfsc	status,2,c
  2133  00093E  EFA3  F004         	goto	u3341
  2134  000942  EFA5  F004         	goto	u3340
  2135  000946                     u3341:
  2136  000946  EF72  F004         	goto	l3077
  2137  00094A                     u3340:
  2138  00094A                     
  2139                           ; BSR set to: 0
  2140                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2141  00094A  A05B               	btfss	_flags^0,0,c
  2142  00094C  EFAA  F004         	goto	u3351
  2143  000950  EFAC  F004         	goto	u3350
  2144  000954                     u3351:
  2145  000954  EFAD  F004         	goto	l3083
  2146  000958                     u3350:
  2147  000958                     
  2148                           ; BSR set to: 0
  2149                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2150  000958  925B               	bcf	_flags^0,1,c
  2151  00095A                     l3083:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2155  00095A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  00095E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  000962  CFDE FFF6          	movff	postinc2,tblptrl
  2158  000966  CFDD FFF7          	movff	postdec2,tblptrh
  2159  00096A                     	if	0	;tblptru may be non-zero
  2160  00096A                     	endif
  2161  00096A                     	if	0	;tblptru may be non-zero
  2162  00096A                     	endif
  2163  00096A  0008               	tblrd		*
  2164  00096C  50F5               	movf	tablat,w,c
  2165  00096E  0A2A               	xorlw	42
  2166  000970  A4D8               	btfss	status,2,c
  2167  000972  EFBD  F004         	goto	u3361
  2168  000976  EFBF  F004         	goto	u3360
  2169  00097A                     u3361:
  2170  00097A  EFE8  F004         	goto	l3091
  2171  00097E                     u3360:
  2172  00097E                     
  2173                           ; BSR set to: 0
  2174                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2175  00097E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  000982  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  000986  2ADE               	incf	postinc2,f,c
  2178  000988  0E00               	movlw	0
  2179  00098A  22DD               	addwfc	postdec2,f,c
  2180                           
  2181                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2182  00098C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2183  000990  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2184  000994  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2185  000998  0E02               	movlw	2
  2186  00099A  26DE               	addwf	postinc2,f,c
  2187  00099C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2188  0009A0  0E00               	movlw	0
  2189  0009A2  22DD               	addwfc	postdec2,f,c
  2190  0009A4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2191  0009A8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2192  0009AC  CFDE F062          	movff	postinc2,_width
  2193  0009B0  CFDD F063          	movff	postdec2,_width+1
  2194  0009B4                     
  2195                           ; BSR set to: 0
  2196                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2197  0009B4  BF63               	btfsc	(_width+1)& (0+255),7,b
  2198  0009B6  EFE1  F004         	goto	u3370
  2199  0009BA  EFDF  F004         	goto	u3371
  2200  0009BE                     u3371:
  2201  0009BE  EF2C  F005         	goto	l3101
  2202  0009C2                     u3370:
  2203  0009C2                     
  2204                           ; BSR set to: 0
  2205                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2206  0009C2  805B               	bsf	_flags^0,0,c
  2207                           
  2208                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2209  0009C4  6D62               	negf	_width& (0+255),b
  2210  0009C6  1F63               	comf	(_width+1)& (0+255),f,b
  2211  0009C8  B0D8               	btfsc	status,0,c
  2212  0009CA  2B63               	incf	(_width+1)& (0+255),f,b
  2213  0009CC  EF2C  F005         	goto	l3101
  2214  0009D0                     l3091:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2218  0009D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  0009D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  0009D8  CFDE F00A          	movff	postinc2,atoi@s
  2221  0009DC  CFDD F00B          	movff	postdec2,atoi@s+1
  2222  0009E0  EC51  F012         	call	_atoi	;wreg free
  2223  0009E4  C00A  F062         	movff	?_atoi,_width
  2224  0009E8  C00B  F063         	movff	?_atoi+1,_width+1
  2225                           
  2226                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 754:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2227  0009EC  EFFF  F004         	goto	l3095
  2228  0009F0                     l3093:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2232  0009F0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2233  0009F4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2234  0009F8  2ADE               	incf	postinc2,f,c
  2235  0009FA  0E00               	movlw	0
  2236  0009FC  22DD               	addwfc	postdec2,f,c
  2237  0009FE                     l3095:
  2238  0009FE  0ED0               	movlw	208
  2239  000A00  6E4B               	movwf	??_vfpfcnvrt^0,c
  2240  000A02  0EFF               	movlw	255
  2241  000A04  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2242  000A06  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2243  000A0A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2244  000A0E  CFDE FFF6          	movff	postinc2,tblptrl
  2245  000A12  CFDD FFF7          	movff	postdec2,tblptrh
  2246  000A16                     	if	0	;tblptru may be non-zero
  2247  000A16                     	endif
  2248  000A16                     	if	0	;tblptru may be non-zero
  2249  000A16                     	endif
  2250  000A16  0008               	tblrd		*
  2251  000A18  50F5               	movf	tablat,w,c
  2252  000A1A  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2253  000A1C  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2254  000A1E  504B               	movf	??_vfpfcnvrt^0,w,c
  2255  000A20  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2256  000A22  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2257  000A24  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2258  000A26  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2259  000A28  E10A               	bnz	u3380
  2260  000A2A  0E0A               	movlw	10
  2261  000A2C  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2262  000A2E  A0D8               	btfss	status,0,c
  2263  000A30  EF1C  F005         	goto	u3381
  2264  000A34  EF1F  F005         	goto	u3380
  2265  000A38                     u3381:
  2266  000A38  0E01               	movlw	1
  2267  000A3A  EF20  F005         	goto	u3390
  2268  000A3E                     u3380:
  2269  000A3E  0E00               	movlw	0
  2270  000A40                     u3390:
  2271  000A40  0100               	movlb	0	; () banked
  2272  000A42  6FBD               	movwf	_vfpfcnvrt$1108& (0+255),b
  2273  000A44  6BBE               	clrf	(_vfpfcnvrt$1108+1)& (0+255),b
  2274  000A46                     
  2275                           ; BSR set to: 0
  2276  000A46  51BD               	movf	_vfpfcnvrt$1108& (0+255),w,b
  2277  000A48  11BE               	iorwf	(_vfpfcnvrt$1108+1)& (0+255),w,b
  2278  000A4A  A4D8               	btfss	status,2,c
  2279  000A4C  EF2A  F005         	goto	u3401
  2280  000A50  EF2C  F005         	goto	u3400
  2281  000A54                     u3401:
  2282  000A54  EFF8  F004         	goto	l3093
  2283  000A58                     u3400:
  2284  000A58                     l3101:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  2288  000A58  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2289  000A5C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2290  000A60  CFDE FFF6          	movff	postinc2,tblptrl
  2291  000A64  CFDD FFF7          	movff	postdec2,tblptrh
  2292  000A68                     	if	0	;tblptru may be non-zero
  2293  000A68                     	endif
  2294  000A68                     	if	0	;tblptru may be non-zero
  2295  000A68                     	endif
  2296  000A68  0008               	tblrd		*
  2297  000A6A  50F5               	movf	tablat,w,c
  2298  000A6C  0A2E               	xorlw	46
  2299  000A6E  A4D8               	btfss	status,2,c
  2300  000A70  EF3C  F005         	goto	u3411
  2301  000A74  EF3E  F005         	goto	u3410
  2302  000A78                     u3411:
  2303  000A78  EFBC  F005         	goto	l3121
  2304  000A7C                     u3410:
  2305  000A7C                     
  2306                           ; BSR set to: 0
  2307                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  2308  000A7C  0E00               	movlw	0
  2309  000A7E  6F65               	movwf	(_prec+1)& (0+255),b
  2310  000A80  0E00               	movlw	0
  2311  000A82  6F64               	movwf	_prec& (0+255),b
  2312  000A84                     
  2313                           ; BSR set to: 0
  2314                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  2315  000A84  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  000A88  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  000A8C  2ADE               	incf	postinc2,f,c
  2318  000A8E  0E00               	movlw	0
  2319  000A90  22DD               	addwfc	postdec2,f,c
  2320  000A92                     
  2321                           ; BSR set to: 0
  2322                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  2323  000A92  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  000A96  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  000A9A  CFDE FFF6          	movff	postinc2,tblptrl
  2326  000A9E  CFDD FFF7          	movff	postdec2,tblptrh
  2327  000AA2                     	if	0	;tblptru may be non-zero
  2328  000AA2                     	endif
  2329  000AA2                     	if	0	;tblptru may be non-zero
  2330  000AA2                     	endif
  2331  000AA2  0008               	tblrd		*
  2332  000AA4  50F5               	movf	tablat,w,c
  2333  000AA6  0A2A               	xorlw	42
  2334  000AA8  A4D8               	btfss	status,2,c
  2335  000AAA  EF59  F005         	goto	u3421
  2336  000AAE  EF5B  F005         	goto	u3420
  2337  000AB2                     u3421:
  2338  000AB2  EF78  F005         	goto	l3111
  2339  000AB6                     u3420:
  2340  000AB6                     
  2341                           ; BSR set to: 0
  2342                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  2343  000AB6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2344  000ABA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2345  000ABE  2ADE               	incf	postinc2,f,c
  2346  000AC0  0E00               	movlw	0
  2347  000AC2  22DD               	addwfc	postdec2,f,c
  2348                           
  2349                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2350  000AC4  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2351  000AC8  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2352  000ACC  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2353  000AD0  0E02               	movlw	2
  2354  000AD2  26DE               	addwf	postinc2,f,c
  2355  000AD4  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2356  000AD8  0E00               	movlw	0
  2357  000ADA  22DD               	addwfc	postdec2,f,c
  2358  000ADC  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2359  000AE0  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2360  000AE4  CFDE F064          	movff	postinc2,_prec
  2361  000AE8  CFDD F065          	movff	postdec2,_prec+1
  2362                           
  2363                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 768:             } else {
  2364  000AEC  EFBC  F005         	goto	l3121
  2365  000AF0                     l3111:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  2369  000AF0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2370  000AF4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2371  000AF8  CFDE F00A          	movff	postinc2,atoi@s
  2372  000AFC  CFDD F00B          	movff	postdec2,atoi@s+1
  2373  000B00  EC51  F012         	call	_atoi	;wreg free
  2374  000B04  C00A  F064         	movff	?_atoi,_prec
  2375  000B08  C00B  F065         	movff	?_atoi+1,_prec+1
  2376                           
  2377                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2378  000B0C  EF8F  F005         	goto	l3115
  2379  000B10                     l3113:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  2383  000B10  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  000B14  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  000B18  2ADE               	incf	postinc2,f,c
  2386  000B1A  0E00               	movlw	0
  2387  000B1C  22DD               	addwfc	postdec2,f,c
  2388  000B1E                     l3115:
  2389  000B1E  0ED0               	movlw	208
  2390  000B20  6E4B               	movwf	??_vfpfcnvrt^0,c
  2391  000B22  0EFF               	movlw	255
  2392  000B24  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2393  000B26  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394  000B2A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395  000B2E  CFDE FFF6          	movff	postinc2,tblptrl
  2396  000B32  CFDD FFF7          	movff	postdec2,tblptrh
  2397  000B36                     	if	0	;tblptru may be non-zero
  2398  000B36                     	endif
  2399  000B36                     	if	0	;tblptru may be non-zero
  2400  000B36                     	endif
  2401  000B36  0008               	tblrd		*
  2402  000B38  50F5               	movf	tablat,w,c
  2403  000B3A  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2404  000B3C  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2405  000B3E  504B               	movf	??_vfpfcnvrt^0,w,c
  2406  000B40  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2407  000B42  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2408  000B44  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2409  000B46  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2410  000B48  E10A               	bnz	u3430
  2411  000B4A  0E0A               	movlw	10
  2412  000B4C  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2413  000B4E  A0D8               	btfss	status,0,c
  2414  000B50  EFAC  F005         	goto	u3431
  2415  000B54  EFAF  F005         	goto	u3430
  2416  000B58                     u3431:
  2417  000B58  0E01               	movlw	1
  2418  000B5A  EFB0  F005         	goto	u3440
  2419  000B5E                     u3430:
  2420  000B5E  0E00               	movlw	0
  2421  000B60                     u3440:
  2422  000B60  0100               	movlb	0	; () banked
  2423  000B62  6FBF               	movwf	_vfpfcnvrt$1109& (0+255),b
  2424  000B64  6BC0               	clrf	(_vfpfcnvrt$1109+1)& (0+255),b
  2425  000B66                     
  2426                           ; BSR set to: 0
  2427  000B66  51BF               	movf	_vfpfcnvrt$1109& (0+255),w,b
  2428  000B68  11C0               	iorwf	(_vfpfcnvrt$1109+1)& (0+255),w,b
  2429  000B6A  A4D8               	btfss	status,2,c
  2430  000B6C  EFBA  F005         	goto	u3451
  2431  000B70  EFBC  F005         	goto	u3450
  2432  000B74                     u3451:
  2433  000B74  EF88  F005         	goto	l3113
  2434  000B78                     u3450:
  2435  000B78                     l3121:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 814:         if (*fmt[0] == '
      +                          c') {
  2439  000B78  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2440  000B7C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2441  000B80  CFDE FFF6          	movff	postinc2,tblptrl
  2442  000B84  CFDD FFF7          	movff	postdec2,tblptrh
  2443  000B88                     	if	0	;tblptru may be non-zero
  2444  000B88                     	endif
  2445  000B88                     	if	0	;tblptru may be non-zero
  2446  000B88                     	endif
  2447  000B88  0008               	tblrd		*
  2448  000B8A  50F5               	movf	tablat,w,c
  2449  000B8C  0A63               	xorlw	99
  2450  000B8E  A4D8               	btfss	status,2,c
  2451  000B90  EFCC  F005         	goto	u3461
  2452  000B94  EFCE  F005         	goto	u3460
  2453  000B98                     u3461:
  2454  000B98  EFF5  F005         	goto	l3129
  2455  000B9C                     u3460:
  2456  000B9C                     
  2457                           ; BSR set to: 0
  2458                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 815:             ++*fmt;
  2459  000B9C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2460  000BA0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2461  000BA4  2ADE               	incf	postinc2,f,c
  2462  000BA6  0E00               	movlw	0
  2463  000BA8  22DD               	addwfc	postdec2,f,c
  2464                           
  2465                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 816:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2466  000BAA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2467  000BAE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2468  000BB2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2469  000BB6  0E02               	movlw	2
  2470  000BB8  26DE               	addwf	postinc2,f,c
  2471  000BBA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2472  000BBE  0E00               	movlw	0
  2473  000BC0  22DD               	addwfc	postdec2,f,c
  2474  000BC2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2475  000BC6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2476  000BCA  50DF               	movf	indf2,w,c
  2477  000BCC  6FCB               	movwf	vfpfcnvrt@c& (0+255),b
  2478  000BCE                     
  2479                           ; BSR set to: 0
  2480                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 817:             return ctoa(
      +                          fp, c);
  2481  000BCE  C045  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  2482  000BD2  C046  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2483  000BD6  C0CB  F00E         	movff	vfpfcnvrt@c,ctoa@c
  2484  000BDA  EC39  F018         	call	_ctoa	;wreg free
  2485  000BDE  C00C  F045         	movff	?_ctoa,?_vfpfcnvrt
  2486  000BE2  C00D  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2487  000BE6  EF50  F00D         	goto	l1096
  2488  000BEA                     l3129:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 824:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2492  000BEA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  000BEE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  000BF2  CFDE F003          	movff	postinc2,strncmp@_l
  2495  000BF6  CFDD F004          	movff	postdec2,strncmp@_l+1
  2496  000BFA  0E28               	movlw	low STR_6
  2497  000BFC  6E05               	movwf	strncmp@_r^0,c
  2498  000BFE  0E08               	movlw	high STR_6
  2499  000C00  6E06               	movwf	(strncmp@_r+1)^0,c
  2500  000C02  0E00               	movlw	0
  2501  000C04  6E08               	movwf	(strncmp@n+1)^0,c
  2502  000C06  0E03               	movlw	3
  2503  000C08  6E07               	movwf	strncmp@n^0,c
  2504  000C0A  EC34  F017         	call	_strncmp	;wreg free
  2505  000C0E  5003               	movf	?_strncmp^0,w,c
  2506  000C10  1004               	iorwf	(?_strncmp+1)^0,w,c
  2507  000C12  B4D8               	btfsc	status,2,c
  2508  000C14  EF0E  F006         	goto	u3471
  2509  000C18  EF10  F006         	goto	u3470
  2510  000C1C                     u3471:
  2511  000C1C  EF2B  F006         	goto	l3133
  2512  000C20                     u3470:
  2513  000C20  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2514  000C24  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2515  000C28  CFDE F003          	movff	postinc2,strncmp@_l
  2516  000C2C  CFDD F004          	movff	postdec2,strncmp@_l+1
  2517  000C30  0E2C               	movlw	low STR_10
  2518  000C32  6E05               	movwf	strncmp@_r^0,c
  2519  000C34  0E08               	movlw	high STR_10
  2520  000C36  6E06               	movwf	(strncmp@_r+1)^0,c
  2521  000C38  0E00               	movlw	0
  2522  000C3A  6E08               	movwf	(strncmp@n+1)^0,c
  2523  000C3C  0E03               	movlw	3
  2524  000C3E  6E07               	movwf	strncmp@n^0,c
  2525  000C40  EC34  F017         	call	_strncmp	;wreg free
  2526  000C44  5003               	movf	?_strncmp^0,w,c
  2527  000C46  1004               	iorwf	(?_strncmp+1)^0,w,c
  2528  000C48  A4D8               	btfss	status,2,c
  2529  000C4A  EF29  F006         	goto	u3481
  2530  000C4E  EF2B  F006         	goto	u3480
  2531  000C52                     u3481:
  2532  000C52  EF6C  F006         	goto	l3139
  2533  000C56                     u3480:
  2534  000C56                     l3133:
  2535                           
  2536                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 825: ;/opt/microchip/xc8/v2.3
      +                          1/pic/sources/c99/common/doprnt.c: 827:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2537  000C56  0E03               	movlw	3
  2538  000C58  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2539  000C5C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2540  000C60  26DE               	addwf	postinc2,f,c
  2541  000C62  0E00               	movlw	0
  2542  000C64  22DD               	addwfc	postdec2,f,c
  2543                           
  2544                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2545  000C66  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2546  000C6A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2547  000C6E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2548  000C72  0E02               	movlw	2
  2549  000C74  26DE               	addwf	postinc2,f,c
  2550  000C76  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2551  000C7A  0E00               	movlw	0
  2552  000C7C  22DD               	addwfc	postdec2,f,c
  2553  000C7E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2554  000C82  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2555  000C86  50DF               	movf	indf2,w,c
  2556  000C88  0100               	movlb	0	; () banked
  2557  000C8A  6FC1               	movwf	vfpfcnvrt@ll& (0+255),b
  2558  000C8C  0E00               	movlw	0
  2559  000C8E  BFC1               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  2560  000C90  0EFF               	movlw	-1
  2561  000C92  6FC2               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  2562  000C94  6FC3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2563  000C96  6FC4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2564  000C98  6FC5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2565  000C9A  6FC6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2566  000C9C  6FC7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2567  000C9E  6FC8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2568  000CA0                     l3135:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  2572  000CA0  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2573  000CA4  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2574  000CA8  C0C1  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2575  000CAC  C0C2  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2576  000CB0  C0C3  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2577  000CB4  C0C4  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2578  000CB8  C0C5  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2579  000CBC  C0C6  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2580  000CC0  C0C7  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2581  000CC4  C0C8  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2582  000CC8  EC51  F00D         	call	_dtoa	;wreg free
  2583  000CCC  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  2584  000CD0  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2585  000CD4  EF50  F00D         	goto	l1096
  2586  000CD8                     l3139:
  2587                           
  2588                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 836:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2589  000CD8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2590  000CDC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2591  000CE0  CFDE F003          	movff	postinc2,strncmp@_l
  2592  000CE4  CFDD F004          	movff	postdec2,strncmp@_l+1
  2593  000CE8  0E29               	movlw	low (STR_6+1)
  2594  000CEA  6E05               	movwf	strncmp@_r^0,c
  2595  000CEC  0E08               	movlw	high (STR_6+1)
  2596  000CEE  6E06               	movwf	(strncmp@_r+1)^0,c
  2597  000CF0  0E00               	movlw	0
  2598  000CF2  6E08               	movwf	(strncmp@n+1)^0,c
  2599  000CF4  0E02               	movlw	2
  2600  000CF6  6E07               	movwf	strncmp@n^0,c
  2601  000CF8  EC34  F017         	call	_strncmp	;wreg free
  2602  000CFC  5003               	movf	?_strncmp^0,w,c
  2603  000CFE  1004               	iorwf	(?_strncmp+1)^0,w,c
  2604  000D00  B4D8               	btfsc	status,2,c
  2605  000D02  EF85  F006         	goto	u3491
  2606  000D06  EF87  F006         	goto	u3490
  2607  000D0A                     u3491:
  2608  000D0A  EFA2  F006         	goto	l3143
  2609  000D0E                     u3490:
  2610  000D0E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2611  000D12  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2612  000D16  CFDE F003          	movff	postinc2,strncmp@_l
  2613  000D1A  CFDD F004          	movff	postdec2,strncmp@_l+1
  2614  000D1E  0E2D               	movlw	low (STR_10+1)
  2615  000D20  6E05               	movwf	strncmp@_r^0,c
  2616  000D22  0E08               	movlw	high (STR_10+1)
  2617  000D24  6E06               	movwf	(strncmp@_r+1)^0,c
  2618  000D26  0E00               	movlw	0
  2619  000D28  6E08               	movwf	(strncmp@n+1)^0,c
  2620  000D2A  0E02               	movlw	2
  2621  000D2C  6E07               	movwf	strncmp@n^0,c
  2622  000D2E  EC34  F017         	call	_strncmp	;wreg free
  2623  000D32  5003               	movf	?_strncmp^0,w,c
  2624  000D34  1004               	iorwf	(?_strncmp+1)^0,w,c
  2625  000D36  A4D8               	btfss	status,2,c
  2626  000D38  EFA0  F006         	goto	u3501
  2627  000D3C  EFA2  F006         	goto	u3500
  2628  000D40                     u3501:
  2629  000D40  EFCA  F006         	goto	l3149
  2630  000D44                     u3500:
  2631  000D44                     l3143:
  2632                           
  2633                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 837: ;/opt/microchip/xc8/v2.3
      +                          1/pic/sources/c99/common/doprnt.c: 839:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2634  000D44  0E02               	movlw	2
  2635  000D46  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2636  000D4A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2637  000D4E  26DE               	addwf	postinc2,f,c
  2638  000D50  0E00               	movlw	0
  2639  000D52  22DD               	addwfc	postdec2,f,c
  2640                           
  2641                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 840:             ll = (long l
      +                          ong)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2642  000D54  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2643  000D58  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2644  000D5C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2645  000D60  0E02               	movlw	2
  2646  000D62  26DE               	addwf	postinc2,f,c
  2647  000D64  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2648  000D68  0E00               	movlw	0
  2649  000D6A  22DD               	addwfc	postdec2,f,c
  2650  000D6C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2651  000D70  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2652  000D74  CFDE F0C1          	movff	postinc2,vfpfcnvrt@ll
  2653  000D78  CFDD F0C2          	movff	postdec2,vfpfcnvrt@ll+1
  2654  000D7C  0100               	movlb	0	; () banked
  2655  000D7E  0E00               	movlw	0
  2656  000D80  BFC2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2657  000D82  0EFF               	movlw	-1
  2658  000D84  6FC3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2659  000D86  6FC4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2660  000D88  6FC5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2661  000D8A  6FC6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2662  000D8C  6FC7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2663  000D8E  6FC8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2664  000D90  EF50  F006         	goto	l3135
  2665  000D94                     l3149:
  2666                           
  2667                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2668  000D94  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  000D98  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  000D9C  CFDE FFF6          	movff	postinc2,tblptrl
  2671  000DA0  CFDD FFF7          	movff	postdec2,tblptrh
  2672  000DA4                     	if	0	;tblptru may be non-zero
  2673  000DA4                     	endif
  2674  000DA4                     	if	0	;tblptru may be non-zero
  2675  000DA4                     	endif
  2676  000DA4  0008               	tblrd		*
  2677  000DA6  50F5               	movf	tablat,w,c
  2678  000DA8  0A64               	xorlw	100
  2679  000DAA  B4D8               	btfsc	status,2,c
  2680  000DAC  EFDA  F006         	goto	u3511
  2681  000DB0  EFDC  F006         	goto	u3510
  2682  000DB4                     u3511:
  2683  000DB4  EFEE  F006         	goto	l3153
  2684  000DB8                     u3510:
  2685  000DB8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2686  000DBC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2687  000DC0  CFDE FFF6          	movff	postinc2,tblptrl
  2688  000DC4  CFDD FFF7          	movff	postdec2,tblptrh
  2689  000DC8                     	if	0	;tblptru may be non-zero
  2690  000DC8                     	endif
  2691  000DC8                     	if	0	;tblptru may be non-zero
  2692  000DC8                     	endif
  2693  000DC8  0008               	tblrd		*
  2694  000DCA  50F5               	movf	tablat,w,c
  2695  000DCC  0A69               	xorlw	105
  2696  000DCE  A4D8               	btfss	status,2,c
  2697  000DD0  EFEC  F006         	goto	u3521
  2698  000DD4  EFEE  F006         	goto	u3520
  2699  000DD8                     u3521:
  2700  000DD8  EF15  F007         	goto	l3159
  2701  000DDC                     u3520:
  2702  000DDC                     l3153:
  2703                           
  2704                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  2705  000DDC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  000DE0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  000DE4  2ADE               	incf	postinc2,f,c
  2708  000DE6  0E00               	movlw	0
  2709  000DE8  22DD               	addwfc	postdec2,f,c
  2710                           
  2711                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2712  000DEA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2713  000DEE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2714  000DF2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2715  000DF6  0E02               	movlw	2
  2716  000DF8  26DE               	addwf	postinc2,f,c
  2717  000DFA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2718  000DFE  0E00               	movlw	0
  2719  000E00  22DD               	addwfc	postdec2,f,c
  2720  000E02  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2721  000E06  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2722  000E0A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@ll
  2723  000E0E  CFDD F0C2          	movff	postdec2,vfpfcnvrt@ll+1
  2724  000E12  0100               	movlb	0	; () banked
  2725  000E14  0E00               	movlw	0
  2726  000E16  BFC2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2727  000E18  0EFF               	movlw	-1
  2728  000E1A  6FC3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2729  000E1C  6FC4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2730  000E1E  6FC5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2731  000E20  6FC6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2732  000E22  6FC7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2733  000E24  6FC8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2734  000E26  EF50  F006         	goto	l3135
  2735  000E2A                     l3159:
  2736                           
  2737                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 905:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2738  000E2A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2739  000E2E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2740  000E32  CFDE F003          	movff	postinc2,strncmp@_l
  2741  000E36  CFDD F004          	movff	postdec2,strncmp@_l+1
  2742  000E3A  0E43               	movlw	low STR_24
  2743  000E3C  6E05               	movwf	strncmp@_r^0,c
  2744  000E3E  0E08               	movlw	high STR_24
  2745  000E40  6E06               	movwf	(strncmp@_r+1)^0,c
  2746  000E42  0E00               	movlw	0
  2747  000E44  6E08               	movwf	(strncmp@n+1)^0,c
  2748  000E46  0E02               	movlw	2
  2749  000E48  6E07               	movwf	strncmp@n^0,c
  2750  000E4A  EC34  F017         	call	_strncmp	;wreg free
  2751  000E4E  5003               	movf	?_strncmp^0,w,c
  2752  000E50  1004               	iorwf	(?_strncmp+1)^0,w,c
  2753  000E52  B4D8               	btfsc	status,2,c
  2754  000E54  EF2E  F007         	goto	u3531
  2755  000E58  EF30  F007         	goto	u3530
  2756  000E5C                     u3531:
  2757  000E5C  EF4B  F007         	goto	l3163
  2758  000E60                     u3530:
  2759  000E60  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2760  000E64  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2761  000E68  CFDE F003          	movff	postinc2,strncmp@_l
  2762  000E6C  CFDD F004          	movff	postdec2,strncmp@_l+1
  2763  000E70  0E46               	movlw	low STR_28
  2764  000E72  6E05               	movwf	strncmp@_r^0,c
  2765  000E74  0E08               	movlw	high STR_28
  2766  000E76  6E06               	movwf	(strncmp@_r+1)^0,c
  2767  000E78  0E00               	movlw	0
  2768  000E7A  6E08               	movwf	(strncmp@n+1)^0,c
  2769  000E7C  0E02               	movlw	2
  2770  000E7E  6E07               	movwf	strncmp@n^0,c
  2771  000E80  EC34  F017         	call	_strncmp	;wreg free
  2772  000E84  5003               	movf	?_strncmp^0,w,c
  2773  000E86  1004               	iorwf	(?_strncmp+1)^0,w,c
  2774  000E88  A4D8               	btfss	status,2,c
  2775  000E8A  EF49  F007         	goto	u3541
  2776  000E8E  EF4B  F007         	goto	u3540
  2777  000E92                     u3541:
  2778  000E92  EF74  F007         	goto	l3169
  2779  000E96                     u3540:
  2780  000E96                     l3163:
  2781                           
  2782                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 906: ;/opt/microchip/xc8/v2.3
      +                          1/pic/sources/c99/common/doprnt.c: 908:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2783  000E96  0E02               	movlw	2
  2784  000E98  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2785  000E9C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2786  000EA0  26DE               	addwf	postinc2,f,c
  2787  000EA2  0E00               	movlw	0
  2788  000EA4  22DD               	addwfc	postdec2,f,c
  2789                           
  2790                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 909:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2791  000EA6  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2792  000EAA  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2793  000EAE  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2794  000EB2  0E02               	movlw	2
  2795  000EB4  26DE               	addwf	postinc2,f,c
  2796  000EB6  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2797  000EBA  0E00               	movlw	0
  2798  000EBC  22DD               	addwfc	postdec2,f,c
  2799  000EBE  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2800  000EC2  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2801  000EC6  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2802  000ECA  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2803  000ECE  C04D  F0C1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2804  000ED2  C04E  F0C2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2805  000ED6  0100               	movlb	0	; () banked
  2806  000ED8  6BC3               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  2807  000EDA  6BC4               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  2808  000EDC  6BC5               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  2809  000EDE  6BC6               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  2810  000EE0  6BC7               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  2811  000EE2  6BC8               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  2812  000EE4  EF50  F006         	goto	l3135
  2813  000EE8                     l3169:
  2814                           
  2815                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 991:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2816  000EE8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2817  000EEC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2818  000EF0  CFDE F003          	movff	postinc2,strncmp@_l
  2819  000EF4  CFDD F004          	movff	postdec2,strncmp@_l+1
  2820  000EF8  0E34               	movlw	low STR_33
  2821  000EFA  6E05               	movwf	strncmp@_r^0,c
  2822  000EFC  0E08               	movlw	high STR_33
  2823  000EFE  6E06               	movwf	(strncmp@_r+1)^0,c
  2824  000F00  0E00               	movlw	0
  2825  000F02  6E08               	movwf	(strncmp@n+1)^0,c
  2826  000F04  0E03               	movlw	3
  2827  000F06  6E07               	movwf	strncmp@n^0,c
  2828  000F08  EC34  F017         	call	_strncmp	;wreg free
  2829  000F0C  5003               	movf	?_strncmp^0,w,c
  2830  000F0E  1004               	iorwf	(?_strncmp+1)^0,w,c
  2831  000F10  A4D8               	btfss	status,2,c
  2832  000F12  EF8D  F007         	goto	u3551
  2833  000F16  EF8F  F007         	goto	u3550
  2834  000F1A                     u3551:
  2835  000F1A  EFCF  F007         	goto	l3177
  2836  000F1E                     u3550:
  2837  000F1E                     
  2838                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 993:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2839  000F1E  0E03               	movlw	3
  2840  000F20  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  000F24  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  000F28  26DE               	addwf	postinc2,f,c
  2843  000F2A  0E00               	movlw	0
  2844  000F2C  22DD               	addwfc	postdec2,f,c
  2845                           
  2846                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 994:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2847  000F2E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2848  000F32  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2849  000F36  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2850  000F3A  0E02               	movlw	2
  2851  000F3C  26DE               	addwf	postinc2,f,c
  2852  000F3E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2853  000F42  0E00               	movlw	0
  2854  000F44  22DD               	addwfc	postdec2,f,c
  2855  000F46  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2856  000F4A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2857  000F4E  50DF               	movf	indf2,w,c
  2858  000F50  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2859  000F52  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  2860  000F54  0100               	movlb	0	; () banked
  2861  000F56  6FCC               	movwf	vfpfcnvrt@llu& (0+255),b
  2862  000F58  6BCD               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  2863  000F5A  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2864  000F5C  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2865  000F5E  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2866  000F60  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2867  000F62  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2868  000F64  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2869  000F66                     l3173:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 996:             return otoa(
      +                          fp, llu);
  2873  000F66  C045  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  2874  000F6A  C046  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2875  000F6E  C0CC  F020         	movff	vfpfcnvrt@llu,otoa@d
  2876  000F72  C0CD  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2877  000F76  C0CE  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2878  000F7A  C0CF  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2879  000F7E  C0D0  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2880  000F82  C0D1  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2881  000F86  C0D2  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2882  000F8A  C0D3  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2883  000F8E  EC4D  F013         	call	_otoa	;wreg free
  2884  000F92  C01E  F045         	movff	?_otoa,?_vfpfcnvrt
  2885  000F96  C01F  F046         	movff	?_otoa+1,?_vfpfcnvrt+1
  2886  000F9A  EF50  F00D         	goto	l1096
  2887  000F9E                     l3177:
  2888                           
  2889                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1002:         if (!strncmp(*f
      +                          mt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2890  000F9E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2891  000FA2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2892  000FA6  CFDE F003          	movff	postinc2,strncmp@_l
  2893  000FAA  CFDD F004          	movff	postdec2,strncmp@_l+1
  2894  000FAE  0E35               	movlw	low (STR_33+1)
  2895  000FB0  6E05               	movwf	strncmp@_r^0,c
  2896  000FB2  0E08               	movlw	high (STR_33+1)
  2897  000FB4  6E06               	movwf	(strncmp@_r+1)^0,c
  2898  000FB6  0E00               	movlw	0
  2899  000FB8  6E08               	movwf	(strncmp@n+1)^0,c
  2900  000FBA  0E02               	movlw	2
  2901  000FBC  6E07               	movwf	strncmp@n^0,c
  2902  000FBE  EC34  F017         	call	_strncmp	;wreg free
  2903  000FC2  5003               	movf	?_strncmp^0,w,c
  2904  000FC4  1004               	iorwf	(?_strncmp+1)^0,w,c
  2905  000FC6  A4D8               	btfss	status,2,c
  2906  000FC8  EFE8  F007         	goto	u3561
  2907  000FCC  EFEA  F007         	goto	u3560
  2908  000FD0                     u3561:
  2909  000FD0  EF13  F008         	goto	l3185
  2910  000FD4                     u3560:
  2911  000FD4                     
  2912                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1004:             *fmt += ((s
      +                          izeof("ho")/sizeof("ho"[0]))-1);
  2913  000FD4  0E02               	movlw	2
  2914  000FD6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  000FDA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  000FDE  26DE               	addwf	postinc2,f,c
  2917  000FE0  0E00               	movlw	0
  2918  000FE2  22DD               	addwfc	postdec2,f,c
  2919                           
  2920                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1005:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2921  000FE4  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2922  000FE8  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2923  000FEC  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2924  000FF0  0E02               	movlw	2
  2925  000FF2  26DE               	addwf	postinc2,f,c
  2926  000FF4  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2927  000FF8  0E00               	movlw	0
  2928  000FFA  22DD               	addwfc	postdec2,f,c
  2929  000FFC  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2930  001000  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2931  001004  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2932  001008  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2933  00100C  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2934  001010  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2935  001014  0100               	movlb	0	; () banked
  2936  001016  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2937  001018  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2938  00101A  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2939  00101C  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2940  00101E  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2941  001020  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2942  001022  EFB3  F007         	goto	l3173
  2943  001026                     l3185:
  2944                           
  2945                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1012:         if (*fmt[0] == 
      +                          'o') {
  2946  001026  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  00102A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  00102E  CFDE FFF6          	movff	postinc2,tblptrl
  2949  001032  CFDD FFF7          	movff	postdec2,tblptrh
  2950  001036                     	if	0	;tblptru may be non-zero
  2951  001036                     	endif
  2952  001036                     	if	0	;tblptru may be non-zero
  2953  001036                     	endif
  2954  001036  0008               	tblrd		*
  2955  001038  50F5               	movf	tablat,w,c
  2956  00103A  0A6F               	xorlw	111
  2957  00103C  A4D8               	btfss	status,2,c
  2958  00103E  EF23  F008         	goto	u3571
  2959  001042  EF25  F008         	goto	u3570
  2960  001046                     u3571:
  2961  001046  EF4D  F008         	goto	l3193
  2962  00104A                     u3570:
  2963  00104A                     
  2964                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1014:             ++*fmt;
  2965  00104A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2966  00104E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2967  001052  2ADE               	incf	postinc2,f,c
  2968  001054  0E00               	movlw	0
  2969  001056  22DD               	addwfc	postdec2,f,c
  2970                           
  2971                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1015:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  2972  001058  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2973  00105C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2974  001060  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2975  001064  0E02               	movlw	2
  2976  001066  26DE               	addwf	postinc2,f,c
  2977  001068  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2978  00106C  0E00               	movlw	0
  2979  00106E  22DD               	addwfc	postdec2,f,c
  2980  001070  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2981  001074  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2982  001078  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2983  00107C  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2984  001080  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2985  001084  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2986  001088  0100               	movlb	0	; () banked
  2987  00108A  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2988  00108C  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2989  00108E  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2990  001090  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2991  001092  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2992  001094  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2993  001096  EFB3  F007         	goto	l3173
  2994  00109A                     l3193:
  2995                           
  2996                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1066:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2997  00109A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2998  00109E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2999  0010A2  CFDE F003          	movff	postinc2,strncmp@_l
  3000  0010A6  CFDD F004          	movff	postdec2,strncmp@_l+1
  3001  0010AA  0E4C               	movlw	low STR_43
  3002  0010AC  6E05               	movwf	strncmp@_r^0,c
  3003  0010AE  0E08               	movlw	high STR_43
  3004  0010B0  6E06               	movwf	(strncmp@_r+1)^0,c
  3005  0010B2  0E00               	movlw	0
  3006  0010B4  6E08               	movwf	(strncmp@n+1)^0,c
  3007  0010B6  0E02               	movlw	2
  3008  0010B8  6E07               	movwf	strncmp@n^0,c
  3009  0010BA  EC34  F017         	call	_strncmp	;wreg free
  3010  0010BE  5003               	movf	?_strncmp^0,w,c
  3011  0010C0  1004               	iorwf	(?_strncmp+1)^0,w,c
  3012  0010C2  A4D8               	btfss	status,2,c
  3013  0010C4  EF66  F008         	goto	u3581
  3014  0010C8  EF68  F008         	goto	u3580
  3015  0010CC                     u3581:
  3016  0010CC  EF91  F008         	goto	l3201
  3017  0010D0                     u3580:
  3018  0010D0                     
  3019                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1068:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  3020  0010D0  0E02               	movlw	2
  3021  0010D2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3022  0010D6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3023  0010DA  26DE               	addwf	postinc2,f,c
  3024  0010DC  0E00               	movlw	0
  3025  0010DE  22DD               	addwfc	postdec2,f,c
  3026                           
  3027                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1069:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3028  0010E0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3029  0010E4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3030  0010E8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3031  0010EC  0E02               	movlw	2
  3032  0010EE  26DE               	addwf	postinc2,f,c
  3033  0010F0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3034  0010F4  0E00               	movlw	0
  3035  0010F6  22DD               	addwfc	postdec2,f,c
  3036  0010F8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3037  0010FC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3038  001100  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3039  001104  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3040  001108  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3041  00110C  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3042  001110  0100               	movlb	0	; () banked
  3043  001112  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3044  001114  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3045  001116  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3046  001118  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3047  00111A  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3048  00111C  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3049  00111E  EFB3  F007         	goto	l3173
  3050  001122                     l3201:
  3051                           
  3052                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1080:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3053  001122  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3054  001126  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3055  00112A  CFDE F003          	movff	postinc2,strncmp@_l
  3056  00112E  CFDD F004          	movff	postdec2,strncmp@_l+1
  3057  001132  0E30               	movlw	low STR_48
  3058  001134  6E05               	movwf	strncmp@_r^0,c
  3059  001136  0E08               	movlw	high STR_48
  3060  001138  6E06               	movwf	(strncmp@_r+1)^0,c
  3061  00113A  0E00               	movlw	0
  3062  00113C  6E08               	movwf	(strncmp@n+1)^0,c
  3063  00113E  0E03               	movlw	3
  3064  001140  6E07               	movwf	strncmp@n^0,c
  3065  001142  EC34  F017         	call	_strncmp	;wreg free
  3066  001146  5003               	movf	?_strncmp^0,w,c
  3067  001148  1004               	iorwf	(?_strncmp+1)^0,w,c
  3068  00114A  A4D8               	btfss	status,2,c
  3069  00114C  EFAA  F008         	goto	u3591
  3070  001150  EFAC  F008         	goto	u3590
  3071  001154                     u3591:
  3072  001154  EFD4  F008         	goto	l3211
  3073  001158                     u3590:
  3074  001158                     
  3075                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1082:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  3076  001158  0E03               	movlw	3
  3077  00115A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3078  00115E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3079  001162  26DE               	addwf	postinc2,f,c
  3080  001164  0E00               	movlw	0
  3081  001166  22DD               	addwfc	postdec2,f,c
  3082                           
  3083                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1083:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3084  001168  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3085  00116C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3086  001170  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3087  001174  0E02               	movlw	2
  3088  001176  26DE               	addwf	postinc2,f,c
  3089  001178  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3090  00117C  0E00               	movlw	0
  3091  00117E  22DD               	addwfc	postdec2,f,c
  3092  001180  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3093  001184  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3094  001188  CFDE F0C9          	movff	postinc2,vfpfcnvrt@vp
  3095  00118C  CFDD F0CA          	movff	postdec2,vfpfcnvrt@vp+1
  3096  001190                     
  3097                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1084:             *(char *)vp
      +                           = (char)nout;
  3098  001190  C0C9  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3099  001194  C0CA  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3100  001198  C060  FFDF         	movff	_nout,indf2
  3101  00119C                     l3207:
  3102                           
  3103                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1085:             return 0;
  3104  00119C  0E00               	movlw	0
  3105  00119E  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3106  0011A0  0E00               	movlw	0
  3107  0011A2  6E45               	movwf	?_vfpfcnvrt^0,c
  3108  0011A4  EF50  F00D         	goto	l1096
  3109  0011A8                     l3211:
  3110                           
  3111                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1090:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3112  0011A8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3113  0011AC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3114  0011B0  CFDE F003          	movff	postinc2,strncmp@_l
  3115  0011B4  CFDD F004          	movff	postdec2,strncmp@_l+1
  3116  0011B8  0E31               	movlw	low (STR_48+1)
  3117  0011BA  6E05               	movwf	strncmp@_r^0,c
  3118  0011BC  0E08               	movlw	high (STR_48+1)
  3119  0011BE  6E06               	movwf	(strncmp@_r+1)^0,c
  3120  0011C0  0E00               	movlw	0
  3121  0011C2  6E08               	movwf	(strncmp@n+1)^0,c
  3122  0011C4  0E02               	movlw	2
  3123  0011C6  6E07               	movwf	strncmp@n^0,c
  3124  0011C8  EC34  F017         	call	_strncmp	;wreg free
  3125  0011CC  5003               	movf	?_strncmp^0,w,c
  3126  0011CE  1004               	iorwf	(?_strncmp+1)^0,w,c
  3127  0011D0  A4D8               	btfss	status,2,c
  3128  0011D2  EFED  F008         	goto	u3601
  3129  0011D6  EFEF  F008         	goto	u3600
  3130  0011DA                     u3601:
  3131  0011DA  EF15  F009         	goto	l3221
  3132  0011DE                     u3600:
  3133  0011DE                     
  3134                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1092:             *fmt += ((s
      +                          izeof("hn")/sizeof("hn"[0]))-1);
  3135  0011DE  0E02               	movlw	2
  3136  0011E0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3137  0011E4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3138  0011E8  26DE               	addwf	postinc2,f,c
  3139  0011EA  0E00               	movlw	0
  3140  0011EC  22DD               	addwfc	postdec2,f,c
  3141                           
  3142                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1093:             vp = (void 
      +                          *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  3143  0011EE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3144  0011F2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3145  0011F6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3146  0011FA  0E02               	movlw	2
  3147  0011FC  26DE               	addwf	postinc2,f,c
  3148  0011FE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3149  001202  0E00               	movlw	0
  3150  001204  22DD               	addwfc	postdec2,f,c
  3151  001206  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3152  00120A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3153  00120E  CFDE F0C9          	movff	postinc2,vfpfcnvrt@vp
  3154  001212  CFDD F0CA          	movff	postdec2,vfpfcnvrt@vp+1
  3155  001216                     
  3156                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1094:             *(short *)v
      +                          p = (short)nout;
  3157  001216  C0C9  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3158  00121A  C0CA  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3159  00121E  C060  FFDE         	movff	_nout,postinc2
  3160  001222  C061  FFDD         	movff	_nout+1,postdec2
  3161  001226  EFCE  F008         	goto	l3207
  3162  00122A                     l3221:
  3163                           
  3164                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1099:         if (*fmt[0] == 
      +                          'n') {
  3165  00122A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3166  00122E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3167  001232  CFDE FFF6          	movff	postinc2,tblptrl
  3168  001236  CFDD FFF7          	movff	postdec2,tblptrh
  3169  00123A                     	if	0	;tblptru may be non-zero
  3170  00123A                     	endif
  3171  00123A                     	if	0	;tblptru may be non-zero
  3172  00123A                     	endif
  3173  00123A  0008               	tblrd		*
  3174  00123C  50F5               	movf	tablat,w,c
  3175  00123E  0A6E               	xorlw	110
  3176  001240  A4D8               	btfss	status,2,c
  3177  001242  EF25  F009         	goto	u3611
  3178  001246  EF27  F009         	goto	u3610
  3179  00124A                     u3611:
  3180  00124A  EF4C  F009         	goto	l3231
  3181  00124E                     u3610:
  3182  00124E                     
  3183                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1100:             ++*fmt;
  3184  00124E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3185  001252  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3186  001256  2ADE               	incf	postinc2,f,c
  3187  001258  0E00               	movlw	0
  3188  00125A  22DD               	addwfc	postdec2,f,c
  3189                           
  3190                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1101:             vp = (void 
      +                          *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3191  00125C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3192  001260  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3193  001264  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3194  001268  0E02               	movlw	2
  3195  00126A  26DE               	addwf	postinc2,f,c
  3196  00126C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3197  001270  0E00               	movlw	0
  3198  001272  22DD               	addwfc	postdec2,f,c
  3199  001274  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3200  001278  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3201  00127C  CFDE F0C9          	movff	postinc2,vfpfcnvrt@vp
  3202  001280  CFDD F0CA          	movff	postdec2,vfpfcnvrt@vp+1
  3203  001284                     
  3204                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1102:             *(int *)vp 
      +                          = nout;
  3205  001284  C0C9  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3206  001288  C0CA  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3207  00128C  C060  FFDE         	movff	_nout,postinc2
  3208  001290  C061  FFDD         	movff	_nout+1,postdec2
  3209  001294  EFCE  F008         	goto	l3207
  3210  001298                     l3231:
  3211                           
  3212                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1147:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3213  001298  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  00129C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  0012A0  CFDE F003          	movff	postinc2,strncmp@_l
  3216  0012A4  CFDD F004          	movff	postdec2,strncmp@_l+1
  3217  0012A8  0E49               	movlw	low STR_58
  3218  0012AA  6E05               	movwf	strncmp@_r^0,c
  3219  0012AC  0E08               	movlw	high STR_58
  3220  0012AE  6E06               	movwf	(strncmp@_r+1)^0,c
  3221  0012B0  0E00               	movlw	0
  3222  0012B2  6E08               	movwf	(strncmp@n+1)^0,c
  3223  0012B4  0E02               	movlw	2
  3224  0012B6  6E07               	movwf	strncmp@n^0,c
  3225  0012B8  EC34  F017         	call	_strncmp	;wreg free
  3226  0012BC  5003               	movf	?_strncmp^0,w,c
  3227  0012BE  1004               	iorwf	(?_strncmp+1)^0,w,c
  3228  0012C0  A4D8               	btfss	status,2,c
  3229  0012C2  EF65  F009         	goto	u3621
  3230  0012C6  EF67  F009         	goto	u3620
  3231  0012CA                     u3621:
  3232  0012CA  EF8D  F009         	goto	l3241
  3233  0012CE                     u3620:
  3234  0012CE                     
  3235                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1149:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3236  0012CE  0E02               	movlw	2
  3237  0012D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3238  0012D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3239  0012D8  26DE               	addwf	postinc2,f,c
  3240  0012DA  0E00               	movlw	0
  3241  0012DC  22DD               	addwfc	postdec2,f,c
  3242                           
  3243                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1150:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3244  0012DE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3245  0012E2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3246  0012E6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3247  0012EA  0E02               	movlw	2
  3248  0012EC  26DE               	addwf	postinc2,f,c
  3249  0012EE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3250  0012F2  0E00               	movlw	0
  3251  0012F4  22DD               	addwfc	postdec2,f,c
  3252  0012F6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3253  0012FA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3254  0012FE  CFDE F0C9          	movff	postinc2,vfpfcnvrt@vp
  3255  001302  CFDD F0CA          	movff	postdec2,vfpfcnvrt@vp+1
  3256  001306                     
  3257                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1151:             *(size_t *)
      +                          vp = (size_t)nout;
  3258  001306  C0C9  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3259  00130A  C0CA  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3260  00130E  C060  FFDE         	movff	_nout,postinc2
  3261  001312  C061  FFDD         	movff	_nout+1,postdec2
  3262  001316  EFCE  F008         	goto	l3207
  3263  00131A                     l3241:
  3264                           
  3265                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1160:         if (*fmt[0] == 
      +                          'p') {
  3266  00131A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3267  00131E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3268  001322  CFDE FFF6          	movff	postinc2,tblptrl
  3269  001326  CFDD FFF7          	movff	postdec2,tblptrh
  3270  00132A                     	if	0	;tblptru may be non-zero
  3271  00132A                     	endif
  3272  00132A                     	if	0	;tblptru may be non-zero
  3273  00132A                     	endif
  3274  00132A  0008               	tblrd		*
  3275  00132C  50F5               	movf	tablat,w,c
  3276  00132E  0A70               	xorlw	112
  3277  001330  A4D8               	btfss	status,2,c
  3278  001332  EF9D  F009         	goto	u3631
  3279  001336  EF9F  F009         	goto	u3630
  3280  00133A                     u3631:
  3281  00133A  EFE3  F009         	goto	l3249
  3282  00133E                     u3630:
  3283  00133E                     
  3284                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1162:             ++*fmt;
  3285  00133E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3286  001342  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3287  001346  2ADE               	incf	postinc2,f,c
  3288  001348  0E00               	movlw	0
  3289  00134A  22DD               	addwfc	postdec2,f,c
  3290                           
  3291                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1163:             llu = (unsi
      +                          gned long long)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3292  00134C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3293  001350  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3294  001354  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3295  001358  0E02               	movlw	2
  3296  00135A  26DE               	addwf	postinc2,f,c
  3297  00135C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3298  001360  0E00               	movlw	0
  3299  001362  22DD               	addwfc	postdec2,f,c
  3300  001364  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3301  001368  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3302  00136C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3303  001370  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3304  001374  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3305  001378  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3306  00137C  0100               	movlb	0	; () banked
  3307  00137E  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3308  001380  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3309  001382  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3310  001384  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3311  001386  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3312  001388  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3313  00138A                     
  3314                           ; BSR set to: 0
  3315                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1165:             return xtoa
      +                          (fp, llu, 'x');
  3316  00138A  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3317  00138E  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3318  001392  C0CC  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3319  001396  C0CD  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3320  00139A  C0CE  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3321  00139E  C0CF  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3322  0013A2  C0D0  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3323  0013A6  C0D1  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3324  0013AA  C0D2  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3325  0013AE  C0D3  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3326  0013B2  0E78               	movlw	120
  3327  0013B4  6E28               	movwf	xtoa@x^0,c
  3328  0013B6  ECC0  F00E         	call	_xtoa	;wreg free
  3329  0013BA  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3330  0013BE  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3331  0013C2  EF50  F00D         	goto	l1096
  3332  0013C6                     l3249:
  3333                           
  3334                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's') {
  3335  0013C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3336  0013CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3337  0013CE  CFDE FFF6          	movff	postinc2,tblptrl
  3338  0013D2  CFDD FFF7          	movff	postdec2,tblptrh
  3339  0013D6                     	if	0	;tblptru may be non-zero
  3340  0013D6                     	endif
  3341  0013D6                     	if	0	;tblptru may be non-zero
  3342  0013D6                     	endif
  3343  0013D6  0008               	tblrd		*
  3344  0013D8  50F5               	movf	tablat,w,c
  3345  0013DA  0A73               	xorlw	115
  3346  0013DC  A4D8               	btfss	status,2,c
  3347  0013DE  EFF3  F009         	goto	u3641
  3348  0013E2  EFF5  F009         	goto	u3640
  3349  0013E6                     u3641:
  3350  0013E6  EF20  F00A         	goto	l3257
  3351  0013EA                     u3640:
  3352  0013EA                     
  3353                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1173:             ++*fmt;
  3354  0013EA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3355  0013EE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3356  0013F2  2ADE               	incf	postinc2,f,c
  3357  0013F4  0E00               	movlw	0
  3358  0013F6  22DD               	addwfc	postdec2,f,c
  3359                           
  3360                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3361  0013F8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3362  0013FC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3363  001400  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3364  001404  0E02               	movlw	2
  3365  001406  26DE               	addwf	postinc2,f,c
  3366  001408  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3367  00140C  0E00               	movlw	0
  3368  00140E  22DD               	addwfc	postdec2,f,c
  3369  001410  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3370  001414  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3371  001418  CFDE F0B9          	movff	postinc2,vfpfcnvrt@cp
  3372  00141C  CFDD F0BA          	movff	postdec2,vfpfcnvrt@cp+1
  3373  001420                     
  3374                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3375  001420  C045  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  3376  001424  C046  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3377  001428  C0B9  F00E         	movff	vfpfcnvrt@cp,stoa@s
  3378  00142C  C0BA  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3379  001430  EC06  F015         	call	_stoa	;wreg free
  3380  001434  C00C  F045         	movff	?_stoa,?_vfpfcnvrt
  3381  001438  C00D  F046         	movff	?_stoa+1,?_vfpfcnvrt+1
  3382  00143C  EF50  F00D         	goto	l1096
  3383  001440                     l3257:
  3384                           
  3385                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1183:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3386  001440  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3387  001444  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3388  001448  CFDE F003          	movff	postinc2,strncmp@_l
  3389  00144C  CFDD F004          	movff	postdec2,strncmp@_l+1
  3390  001450  0E38               	movlw	low STR_63
  3391  001452  6E05               	movwf	strncmp@_r^0,c
  3392  001454  0E08               	movlw	high STR_63
  3393  001456  6E06               	movwf	(strncmp@_r+1)^0,c
  3394  001458  0E00               	movlw	0
  3395  00145A  6E08               	movwf	(strncmp@n+1)^0,c
  3396  00145C  0E03               	movlw	3
  3397  00145E  6E07               	movwf	strncmp@n^0,c
  3398  001460  EC34  F017         	call	_strncmp	;wreg free
  3399  001464  5003               	movf	?_strncmp^0,w,c
  3400  001466  1004               	iorwf	(?_strncmp+1)^0,w,c
  3401  001468  A4D8               	btfss	status,2,c
  3402  00146A  EF39  F00A         	goto	u3651
  3403  00146E  EF3B  F00A         	goto	u3650
  3404  001472                     u3651:
  3405  001472  EF7B  F00A         	goto	l3265
  3406  001476                     u3650:
  3407  001476                     
  3408                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1185:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3409  001476  0E03               	movlw	3
  3410  001478  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3411  00147C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3412  001480  26DE               	addwf	postinc2,f,c
  3413  001482  0E00               	movlw	0
  3414  001484  22DD               	addwfc	postdec2,f,c
  3415                           
  3416                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1186:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3417  001486  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3418  00148A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3419  00148E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3420  001492  0E02               	movlw	2
  3421  001494  26DE               	addwf	postinc2,f,c
  3422  001496  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3423  00149A  0E00               	movlw	0
  3424  00149C  22DD               	addwfc	postdec2,f,c
  3425  00149E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3426  0014A2  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3427  0014A6  50DF               	movf	indf2,w,c
  3428  0014A8  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  3429  0014AA  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3430  0014AC  0100               	movlb	0	; () banked
  3431  0014AE  6FCC               	movwf	vfpfcnvrt@llu& (0+255),b
  3432  0014B0  6BCD               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3433  0014B2  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3434  0014B4  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3435  0014B6  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3436  0014B8  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3437  0014BA  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3438  0014BC  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3439  0014BE                     l3261:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1188:             return utoa
      +                          (fp, llu);
  3443  0014BE  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  3444  0014C2  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3445  0014C6  C0CC  F020         	movff	vfpfcnvrt@llu,utoa@d
  3446  0014CA  C0CD  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3447  0014CE  C0CE  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3448  0014D2  C0CF  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3449  0014D6  C0D0  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3450  0014DA  C0D1  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3451  0014DE  C0D2  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3452  0014E2  C0D3  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3453  0014E6  EC51  F011         	call	_utoa	;wreg free
  3454  0014EA  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  3455  0014EE  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  3456  0014F2  EF50  F00D         	goto	l1096
  3457  0014F6                     l3265:
  3458                           
  3459                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1194:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3460  0014F6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3461  0014FA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3462  0014FE  CFDE F003          	movff	postinc2,strncmp@_l
  3463  001502  CFDD F004          	movff	postdec2,strncmp@_l+1
  3464  001506  0E39               	movlw	low (STR_63+1)
  3465  001508  6E05               	movwf	strncmp@_r^0,c
  3466  00150A  0E08               	movlw	high (STR_63+1)
  3467  00150C  6E06               	movwf	(strncmp@_r+1)^0,c
  3468  00150E  0E00               	movlw	0
  3469  001510  6E08               	movwf	(strncmp@n+1)^0,c
  3470  001512  0E02               	movlw	2
  3471  001514  6E07               	movwf	strncmp@n^0,c
  3472  001516  EC34  F017         	call	_strncmp	;wreg free
  3473  00151A  5003               	movf	?_strncmp^0,w,c
  3474  00151C  1004               	iorwf	(?_strncmp+1)^0,w,c
  3475  00151E  A4D8               	btfss	status,2,c
  3476  001520  EF94  F00A         	goto	u3661
  3477  001524  EF96  F00A         	goto	u3660
  3478  001528                     u3661:
  3479  001528  EFBF  F00A         	goto	l3273
  3480  00152C                     u3660:
  3481  00152C                     
  3482                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1196:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3483  00152C  0E02               	movlw	2
  3484  00152E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3485  001532  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3486  001536  26DE               	addwf	postinc2,f,c
  3487  001538  0E00               	movlw	0
  3488  00153A  22DD               	addwfc	postdec2,f,c
  3489                           
  3490                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1197:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3491  00153C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3492  001540  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3493  001544  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3494  001548  0E02               	movlw	2
  3495  00154A  26DE               	addwf	postinc2,f,c
  3496  00154C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3497  001550  0E00               	movlw	0
  3498  001552  22DD               	addwfc	postdec2,f,c
  3499  001554  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3500  001558  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3501  00155C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3502  001560  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3503  001564  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3504  001568  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3505  00156C  0100               	movlb	0	; () banked
  3506  00156E  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3507  001570  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3508  001572  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3509  001574  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3510  001576  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3511  001578  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3512  00157A  EF5F  F00A         	goto	l3261
  3513  00157E                     l3273:
  3514                           
  3515                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3516  00157E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3517  001582  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3518  001586  CFDE FFF6          	movff	postinc2,tblptrl
  3519  00158A  CFDD FFF7          	movff	postdec2,tblptrh
  3520  00158E                     	if	0	;tblptru may be non-zero
  3521  00158E                     	endif
  3522  00158E                     	if	0	;tblptru may be non-zero
  3523  00158E                     	endif
  3524  00158E  0008               	tblrd		*
  3525  001590  50F5               	movf	tablat,w,c
  3526  001592  0A75               	xorlw	117
  3527  001594  A4D8               	btfss	status,2,c
  3528  001596  EFCF  F00A         	goto	u3671
  3529  00159A  EFD1  F00A         	goto	u3670
  3530  00159E                     u3671:
  3531  00159E  EFF9  F00A         	goto	l3281
  3532  0015A2                     u3670:
  3533  0015A2                     
  3534                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3535  0015A2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3536  0015A6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3537  0015AA  2ADE               	incf	postinc2,f,c
  3538  0015AC  0E00               	movlw	0
  3539  0015AE  22DD               	addwfc	postdec2,f,c
  3540                           
  3541                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3542  0015B0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3543  0015B4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3544  0015B8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3545  0015BC  0E02               	movlw	2
  3546  0015BE  26DE               	addwf	postinc2,f,c
  3547  0015C0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3548  0015C4  0E00               	movlw	0
  3549  0015C6  22DD               	addwfc	postdec2,f,c
  3550  0015C8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3551  0015CC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3552  0015D0  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3553  0015D4  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3554  0015D8  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3555  0015DC  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3556  0015E0  0100               	movlb	0	; () banked
  3557  0015E2  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3558  0015E4  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3559  0015E6  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3560  0015E8  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3561  0015EA  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3562  0015EC  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3563  0015EE  EF5F  F00A         	goto	l3261
  3564  0015F2                     l3281:
  3565                           
  3566                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1258:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3567  0015F2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3568  0015F6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3569  0015FA  CFDE F003          	movff	postinc2,strncmp@_l
  3570  0015FE  CFDD F004          	movff	postdec2,strncmp@_l+1
  3571  001602  0E4F               	movlw	low STR_73
  3572  001604  6E05               	movwf	strncmp@_r^0,c
  3573  001606  0E08               	movlw	high STR_73
  3574  001608  6E06               	movwf	(strncmp@_r+1)^0,c
  3575  00160A  0E00               	movlw	0
  3576  00160C  6E08               	movwf	(strncmp@n+1)^0,c
  3577  00160E  0E02               	movlw	2
  3578  001610  6E07               	movwf	strncmp@n^0,c
  3579  001612  EC34  F017         	call	_strncmp	;wreg free
  3580  001616  5003               	movf	?_strncmp^0,w,c
  3581  001618  1004               	iorwf	(?_strncmp+1)^0,w,c
  3582  00161A  A4D8               	btfss	status,2,c
  3583  00161C  EF12  F00B         	goto	u3681
  3584  001620  EF14  F00B         	goto	u3680
  3585  001624                     u3681:
  3586  001624  EF3D  F00B         	goto	l3289
  3587  001628                     u3680:
  3588  001628                     
  3589                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1260:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3590  001628  0E02               	movlw	2
  3591  00162A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3592  00162E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3593  001632  26DE               	addwf	postinc2,f,c
  3594  001634  0E00               	movlw	0
  3595  001636  22DD               	addwfc	postdec2,f,c
  3596                           
  3597                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1261:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3598  001638  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3599  00163C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3600  001640  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3601  001644  0E02               	movlw	2
  3602  001646  26DE               	addwf	postinc2,f,c
  3603  001648  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3604  00164C  0E00               	movlw	0
  3605  00164E  22DD               	addwfc	postdec2,f,c
  3606  001650  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3607  001654  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3608  001658  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3609  00165C  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3610  001660  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3611  001664  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3612  001668  0100               	movlb	0	; () banked
  3613  00166A  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3614  00166C  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3615  00166E  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3616  001670  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3617  001672  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3618  001674  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3619  001676  EF5F  F00A         	goto	l3261
  3620  00167A                     l3289:
  3621                           
  3622                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1271:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3623  00167A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3624  00167E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3625  001682  CFDE F003          	movff	postinc2,strncmp@_l
  3626  001686  CFDD F004          	movff	postdec2,strncmp@_l+1
  3627  00168A  0E3C               	movlw	low STR_78
  3628  00168C  6E05               	movwf	strncmp@_r^0,c
  3629  00168E  0E08               	movlw	high STR_78
  3630  001690  6E06               	movwf	(strncmp@_r+1)^0,c
  3631  001692  0E00               	movlw	0
  3632  001694  6E08               	movwf	(strncmp@n+1)^0,c
  3633  001696  0E03               	movlw	3
  3634  001698  6E07               	movwf	strncmp@n^0,c
  3635  00169A  EC34  F017         	call	_strncmp	;wreg free
  3636  00169E  5003               	movf	?_strncmp^0,w,c
  3637  0016A0  1004               	iorwf	(?_strncmp+1)^0,w,c
  3638  0016A2  B4D8               	btfsc	status,2,c
  3639  0016A4  EF56  F00B         	goto	u3691
  3640  0016A8  EF58  F00B         	goto	u3690
  3641  0016AC                     u3691:
  3642  0016AC  EF73  F00B         	goto	l3293
  3643  0016B0                     u3690:
  3644  0016B0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3645  0016B4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3646  0016B8  CFDE F003          	movff	postinc2,strncmp@_l
  3647  0016BC  CFDD F004          	movff	postdec2,strncmp@_l+1
  3648  0016C0  0E24               	movlw	low STR_82
  3649  0016C2  6E05               	movwf	strncmp@_r^0,c
  3650  0016C4  0E08               	movlw	high STR_82
  3651  0016C6  6E06               	movwf	(strncmp@_r+1)^0,c
  3652  0016C8  0E00               	movlw	0
  3653  0016CA  6E08               	movwf	(strncmp@n+1)^0,c
  3654  0016CC  0E03               	movlw	3
  3655  0016CE  6E07               	movwf	strncmp@n^0,c
  3656  0016D0  EC34  F017         	call	_strncmp	;wreg free
  3657  0016D4  5003               	movf	?_strncmp^0,w,c
  3658  0016D6  1004               	iorwf	(?_strncmp+1)^0,w,c
  3659  0016D8  A4D8               	btfss	status,2,c
  3660  0016DA  EF71  F00B         	goto	u3701
  3661  0016DE  EF73  F00B         	goto	u3700
  3662  0016E2                     u3701:
  3663  0016E2  EFC8  F00B         	goto	l3303
  3664  0016E6                     u3700:
  3665  0016E6                     l3293:
  3666                           
  3667                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1272: ;/opt/microchip/xc8/v2.
      +                          31/pic/sources/c99/common/doprnt.c: 1274:             c = (*fmt)[2];
  3668  0016E6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3669  0016EA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3670  0016EE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3671  0016F2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3672  0016F6  0E02               	movlw	2
  3673  0016F8  264B               	addwf	??_vfpfcnvrt^0,f,c
  3674  0016FA  0E00               	movlw	0
  3675  0016FC  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3676  0016FE  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3677  001702  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3678  001706                     	if	0	;tblptru may be non-zero
  3679  001706                     	endif
  3680  001706                     	if	0	;tblptru may be non-zero
  3681  001706                     	endif
  3682  001706  0008               	tblrd		*
  3683  001708  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3684  00170C                     
  3685                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1275:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3686  00170C  0E03               	movlw	3
  3687  00170E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3688  001712  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3689  001716  26DE               	addwf	postinc2,f,c
  3690  001718  0E00               	movlw	0
  3691  00171A  22DD               	addwfc	postdec2,f,c
  3692  00171C                     
  3693                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1276:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3694  00171C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3695  001720  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3696  001724  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3697  001728  0E02               	movlw	2
  3698  00172A  26DE               	addwf	postinc2,f,c
  3699  00172C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3700  001730  0E00               	movlw	0
  3701  001732  22DD               	addwfc	postdec2,f,c
  3702  001734  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3703  001738  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3704  00173C  50DF               	movf	indf2,w,c
  3705  00173E  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  3706  001740  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3707  001742  0100               	movlb	0	; () banked
  3708  001744  6FCC               	movwf	vfpfcnvrt@llu& (0+255),b
  3709  001746  6BCD               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3710  001748  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3711  00174A  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3712  00174C  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3713  00174E  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3714  001750  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3715  001752  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3716  001754                     l3299:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1278:             return xtoa
      +                          (fp, llu, c);
  3720  001754  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3721  001758  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3722  00175C  C0CC  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3723  001760  C0CD  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3724  001764  C0CE  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3725  001768  C0CF  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3726  00176C  C0D0  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3727  001770  C0D1  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3728  001774  C0D2  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3729  001778  C0D3  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3730  00177C  C0CB  F028         	movff	vfpfcnvrt@c,xtoa@x
  3731  001780  ECC0  F00E         	call	_xtoa	;wreg free
  3732  001784  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3733  001788  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3734  00178C  EF50  F00D         	goto	l1096
  3735  001790                     l3303:
  3736                           
  3737                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1284:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3738  001790  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3739  001794  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3740  001798  CFDE F003          	movff	postinc2,strncmp@_l
  3741  00179C  CFDD F004          	movff	postdec2,strncmp@_l+1
  3742  0017A0  0E3D               	movlw	low (STR_78+1)
  3743  0017A2  6E05               	movwf	strncmp@_r^0,c
  3744  0017A4  0E08               	movlw	high (STR_78+1)
  3745  0017A6  6E06               	movwf	(strncmp@_r+1)^0,c
  3746  0017A8  0E00               	movlw	0
  3747  0017AA  6E08               	movwf	(strncmp@n+1)^0,c
  3748  0017AC  0E02               	movlw	2
  3749  0017AE  6E07               	movwf	strncmp@n^0,c
  3750  0017B0  EC34  F017         	call	_strncmp	;wreg free
  3751  0017B4  5003               	movf	?_strncmp^0,w,c
  3752  0017B6  1004               	iorwf	(?_strncmp+1)^0,w,c
  3753  0017B8  B4D8               	btfsc	status,2,c
  3754  0017BA  EFE1  F00B         	goto	u3711
  3755  0017BE  EFE3  F00B         	goto	u3710
  3756  0017C2                     u3711:
  3757  0017C2  EFFE  F00B         	goto	l3307
  3758  0017C6                     u3710:
  3759  0017C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3760  0017CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3761  0017CE  CFDE F003          	movff	postinc2,strncmp@_l
  3762  0017D2  CFDD F004          	movff	postdec2,strncmp@_l+1
  3763  0017D6  0E25               	movlw	low (STR_82+1)
  3764  0017D8  6E05               	movwf	strncmp@_r^0,c
  3765  0017DA  0E08               	movlw	high (STR_82+1)
  3766  0017DC  6E06               	movwf	(strncmp@_r+1)^0,c
  3767  0017DE  0E00               	movlw	0
  3768  0017E0  6E08               	movwf	(strncmp@n+1)^0,c
  3769  0017E2  0E02               	movlw	2
  3770  0017E4  6E07               	movwf	strncmp@n^0,c
  3771  0017E6  EC34  F017         	call	_strncmp	;wreg free
  3772  0017EA  5003               	movf	?_strncmp^0,w,c
  3773  0017EC  1004               	iorwf	(?_strncmp+1)^0,w,c
  3774  0017EE  A4D8               	btfss	status,2,c
  3775  0017F0  EFFC  F00B         	goto	u3721
  3776  0017F4  EFFE  F00B         	goto	u3720
  3777  0017F8                     u3721:
  3778  0017F8  EF3A  F00C         	goto	l3317
  3779  0017FC                     u3720:
  3780  0017FC                     l3307:
  3781                           
  3782                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1285: ;/opt/microchip/xc8/v2.
      +                          31/pic/sources/c99/common/doprnt.c: 1287:             c = (*fmt)[1];
  3783  0017FC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3784  001800  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3785  001804  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3786  001808  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3787  00180C  0E01               	movlw	1
  3788  00180E  264B               	addwf	??_vfpfcnvrt^0,f,c
  3789  001810  0E00               	movlw	0
  3790  001812  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3791  001814  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3792  001818  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3793  00181C                     	if	0	;tblptru may be non-zero
  3794  00181C                     	endif
  3795  00181C                     	if	0	;tblptru may be non-zero
  3796  00181C                     	endif
  3797  00181C  0008               	tblrd		*
  3798  00181E  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3799  001822                     
  3800                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1288:             *fmt += ((s
      +                          izeof("hx")/sizeof("hx"[0]))-1);
  3801  001822  0E02               	movlw	2
  3802  001824  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3803  001828  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3804  00182C  26DE               	addwf	postinc2,f,c
  3805  00182E  0E00               	movlw	0
  3806  001830  22DD               	addwfc	postdec2,f,c
  3807  001832                     
  3808                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1289:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3809  001832  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3810  001836  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3811  00183A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3812  00183E  0E02               	movlw	2
  3813  001840  26DE               	addwf	postinc2,f,c
  3814  001842  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3815  001846  0E00               	movlw	0
  3816  001848  22DD               	addwfc	postdec2,f,c
  3817  00184A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3818  00184E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3819  001852  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3820  001856  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3821  00185A  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3822  00185E  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3823  001862  0100               	movlb	0	; () banked
  3824  001864  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3825  001866  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3826  001868  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3827  00186A  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3828  00186C  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3829  00186E  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3830  001870  EFAA  F00B         	goto	l3299
  3831  001874                     l3317:
  3832                           
  3833                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1296:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3834  001874  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3835  001878  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3836  00187C  CFDE FFF6          	movff	postinc2,tblptrl
  3837  001880  CFDD FFF7          	movff	postdec2,tblptrh
  3838  001884                     	if	0	;tblptru may be non-zero
  3839  001884                     	endif
  3840  001884                     	if	0	;tblptru may be non-zero
  3841  001884                     	endif
  3842  001884  0008               	tblrd		*
  3843  001886  50F5               	movf	tablat,w,c
  3844  001888  0A78               	xorlw	120
  3845  00188A  B4D8               	btfsc	status,2,c
  3846  00188C  EF4A  F00C         	goto	u3731
  3847  001890  EF4C  F00C         	goto	u3730
  3848  001894                     u3731:
  3849  001894  EF5E  F00C         	goto	l3321
  3850  001898                     u3730:
  3851  001898  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3852  00189C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3853  0018A0  CFDE FFF6          	movff	postinc2,tblptrl
  3854  0018A4  CFDD FFF7          	movff	postdec2,tblptrh
  3855  0018A8                     	if	0	;tblptru may be non-zero
  3856  0018A8                     	endif
  3857  0018A8                     	if	0	;tblptru may be non-zero
  3858  0018A8                     	endif
  3859  0018A8  0008               	tblrd		*
  3860  0018AA  50F5               	movf	tablat,w,c
  3861  0018AC  0A58               	xorlw	88
  3862  0018AE  A4D8               	btfss	status,2,c
  3863  0018B0  EF5C  F00C         	goto	u3741
  3864  0018B4  EF5E  F00C         	goto	u3740
  3865  0018B8                     u3741:
  3866  0018B8  EF91  F00C         	goto	l3331
  3867  0018BC                     u3740:
  3868  0018BC                     l3321:
  3869                           
  3870                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1298:             c = (*fmt)[
      +                          0];
  3871  0018BC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3872  0018C0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3873  0018C4  CFDE FFF6          	movff	postinc2,tblptrl
  3874  0018C8  CFDD FFF7          	movff	postdec2,tblptrh
  3875  0018CC                     	if	0	;tblptru may be non-zero
  3876  0018CC                     	endif
  3877  0018CC                     	if	0	;tblptru may be non-zero
  3878  0018CC                     	endif
  3879  0018CC  0008               	tblrd		*
  3880  0018CE  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3881  0018D2                     
  3882                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1299:             ++*fmt;
  3883  0018D2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3884  0018D6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3885  0018DA  2ADE               	incf	postinc2,f,c
  3886  0018DC  0E00               	movlw	0
  3887  0018DE  22DD               	addwfc	postdec2,f,c
  3888  0018E0                     
  3889                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1300:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3890  0018E0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3891  0018E4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3892  0018E8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3893  0018EC  0E02               	movlw	2
  3894  0018EE  26DE               	addwf	postinc2,f,c
  3895  0018F0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3896  0018F4  0E00               	movlw	0
  3897  0018F6  22DD               	addwfc	postdec2,f,c
  3898  0018F8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3899  0018FC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3900  001900  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3901  001904  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3902  001908  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3903  00190C  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3904  001910  0100               	movlb	0	; () banked
  3905  001912  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3906  001914  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3907  001916  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3908  001918  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3909  00191A  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3910  00191C  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3911  00191E  EFAA  F00B         	goto	l3299
  3912  001922                     l3331:
  3913                           
  3914                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1359:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3915  001922  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3916  001926  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3917  00192A  CFDE F003          	movff	postinc2,strncmp@_l
  3918  00192E  CFDD F004          	movff	postdec2,strncmp@_l+1
  3919  001932  0E52               	movlw	low STR_96
  3920  001934  6E05               	movwf	strncmp@_r^0,c
  3921  001936  0E08               	movlw	high STR_96
  3922  001938  6E06               	movwf	(strncmp@_r+1)^0,c
  3923  00193A  0E00               	movlw	0
  3924  00193C  6E08               	movwf	(strncmp@n+1)^0,c
  3925  00193E  0E02               	movlw	2
  3926  001940  6E07               	movwf	strncmp@n^0,c
  3927  001942  EC34  F017         	call	_strncmp	;wreg free
  3928  001946  5003               	movf	?_strncmp^0,w,c
  3929  001948  1004               	iorwf	(?_strncmp+1)^0,w,c
  3930  00194A  B4D8               	btfsc	status,2,c
  3931  00194C  EFAA  F00C         	goto	u3751
  3932  001950  EFAC  F00C         	goto	u3750
  3933  001954                     u3751:
  3934  001954  EFC7  F00C         	goto	l3335
  3935  001958                     u3750:
  3936  001958  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3937  00195C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3938  001960  CFDE F003          	movff	postinc2,strncmp@_l
  3939  001964  CFDD F004          	movff	postdec2,strncmp@_l+1
  3940  001968  0E40               	movlw	low STR_100
  3941  00196A  6E05               	movwf	strncmp@_r^0,c
  3942  00196C  0E08               	movlw	high STR_100
  3943  00196E  6E06               	movwf	(strncmp@_r+1)^0,c
  3944  001970  0E00               	movlw	0
  3945  001972  6E08               	movwf	(strncmp@n+1)^0,c
  3946  001974  0E02               	movlw	2
  3947  001976  6E07               	movwf	strncmp@n^0,c
  3948  001978  EC34  F017         	call	_strncmp	;wreg free
  3949  00197C  5003               	movf	?_strncmp^0,w,c
  3950  00197E  1004               	iorwf	(?_strncmp+1)^0,w,c
  3951  001980  A4D8               	btfss	status,2,c
  3952  001982  EFC5  F00C         	goto	u3761
  3953  001986  EFC7  F00C         	goto	u3760
  3954  00198A                     u3761:
  3955  00198A  EF03  F00D         	goto	l3345
  3956  00198E                     u3760:
  3957  00198E                     l3335:
  3958                           
  3959                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1360: ;/opt/microchip/xc8/v2.
      +                          31/pic/sources/c99/common/doprnt.c: 1362:             c = (*fmt)[1];
  3960  00198E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3961  001992  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3962  001996  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  3963  00199A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  3964  00199E  0E01               	movlw	1
  3965  0019A0  264B               	addwf	??_vfpfcnvrt^0,f,c
  3966  0019A2  0E00               	movlw	0
  3967  0019A4  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3968  0019A6  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3969  0019AA  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3970  0019AE                     	if	0	;tblptru may be non-zero
  3971  0019AE                     	endif
  3972  0019AE                     	if	0	;tblptru may be non-zero
  3973  0019AE                     	endif
  3974  0019AE  0008               	tblrd		*
  3975  0019B0  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3976  0019B4                     
  3977                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1363:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3978  0019B4  0E02               	movlw	2
  3979  0019B6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3980  0019BA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3981  0019BE  26DE               	addwf	postinc2,f,c
  3982  0019C0  0E00               	movlw	0
  3983  0019C2  22DD               	addwfc	postdec2,f,c
  3984  0019C4                     
  3985                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1364:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3986  0019C4  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3987  0019C8  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3988  0019CC  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3989  0019D0  0E02               	movlw	2
  3990  0019D2  26DE               	addwf	postinc2,f,c
  3991  0019D4  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3992  0019D8  0E00               	movlw	0
  3993  0019DA  22DD               	addwfc	postdec2,f,c
  3994  0019DC  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3995  0019E0  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3996  0019E4  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3997  0019E8  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3998  0019EC  C04D  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3999  0019F0  C04E  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4000  0019F4  0100               	movlb	0	; () banked
  4001  0019F6  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4002  0019F8  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4003  0019FA  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4004  0019FC  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4005  0019FE  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4006  001A00  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4007  001A02  EFAA  F00B         	goto	l3299
  4008  001A06                     l3345:
  4009                           
  4010                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  4011  001A06  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4012  001A0A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4013  001A0E  CFDE FFF6          	movff	postinc2,tblptrl
  4014  001A12  CFDD FFF7          	movff	postdec2,tblptrh
  4015  001A16                     	if	0	;tblptru may be non-zero
  4016  001A16                     	endif
  4017  001A16                     	if	0	;tblptru may be non-zero
  4018  001A16                     	endif
  4019  001A16  0008               	tblrd		*
  4020  001A18  50F5               	movf	tablat,w,c
  4021  001A1A  0A25               	xorlw	37
  4022  001A1C  A4D8               	btfss	status,2,c
  4023  001A1E  EF13  F00D         	goto	u3771
  4024  001A22  EF15  F00D         	goto	u3770
  4025  001A26                     u3771:
  4026  001A26  EF2C  F00D         	goto	l3355
  4027  001A2A                     u3770:
  4028  001A2A                     
  4029                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  4030  001A2A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  001A2E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  001A32  2ADE               	incf	postinc2,f,c
  4033  001A34  0E00               	movlw	0
  4034  001A36  22DD               	addwfc	postdec2,f,c
  4035  001A38                     
  4036                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  4037  001A38  0E00               	movlw	0
  4038  001A3A  6E04               	movwf	(fputc@c+1)^0,c
  4039  001A3C  0E25               	movlw	37
  4040  001A3E  6E03               	movwf	fputc@c^0,c
  4041  001A40  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4042  001A44  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4043  001A48  EC0C  F019         	call	_fputc	;wreg free
  4044  001A4C                     l3351:
  4045                           
  4046                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  4047  001A4C  0E00               	movlw	0
  4048  001A4E  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  4049  001A50  0E01               	movlw	1
  4050  001A52  6E45               	movwf	?_vfpfcnvrt^0,c
  4051  001A54  EF50  F00D         	goto	l1096
  4052  001A58                     l3355:
  4053                           
  4054                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  4055  001A58  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4056  001A5C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4057  001A60  2ADE               	incf	postinc2,f,c
  4058  001A62  0E00               	movlw	0
  4059  001A64  22DD               	addwfc	postdec2,f,c
  4060  001A66  EFCE  F008         	goto	l3207
  4061  001A6A                     l3361:
  4062                           
  4063                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  4064  001A6A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4065  001A6E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4066  001A72  CFDE FFF6          	movff	postinc2,tblptrl
  4067  001A76  CFDD FFF7          	movff	postdec2,tblptrh
  4068  001A7A                     	if	0	;tblptru may be non-zero
  4069  001A7A                     	endif
  4070  001A7A                     	if	0	;tblptru may be non-zero
  4071  001A7A                     	endif
  4072  001A7A  0008               	tblrd		*
  4073  001A7C  50F5               	movf	tablat,w,c
  4074  001A7E  6E03               	movwf	fputc@c^0,c
  4075  001A80  6A04               	clrf	(fputc@c+1)^0,c
  4076  001A82  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4077  001A86  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4078  001A8A  EC0C  F019         	call	_fputc	;wreg free
  4079  001A8E                     
  4080                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4081  001A8E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4082  001A92  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4083  001A96  2ADE               	incf	postinc2,f,c
  4084  001A98  0E00               	movlw	0
  4085  001A9A  22DD               	addwfc	postdec2,f,c
  4086  001A9C  EF26  F00D         	goto	l3351
  4087  001AA0                     l1096:
  4088  001AA0  0012               	return		;funcret
  4089  001AA2                     __end_of_vfpfcnvrt:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _xtoa *****************
  4093 ;; Defined at:
  4094 ;;		line 645 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4097 ;;		 -> sprintf@f(6), 
  4098 ;;  d               8   31[COMRAM] unsigned long long 
  4099 ;;  x               1   39[COMRAM] unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  n               8   56[COMRAM] unsigned long long 
  4102 ;;  c               2   66[COMRAM] int 
  4103 ;;  i               2   64[COMRAM] int 
  4104 ;;  w               2   54[COMRAM] int 
  4105 ;;  p               2   52[COMRAM] int 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  2   29[COMRAM] int 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4115 ;;      Params:        11       0       0       0       0       0       0       0       0
  4116 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4117 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4118 ;;      Totals:        39       0       0       0       0       0       0       0       0
  4119 ;;Total ram usage:       39 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    5
  4122 ;; This function calls:
  4123 ;;		_isalpha
  4124 ;;		_isupper
  4125 ;;		_pad
  4126 ;;		_toupper
  4127 ;; This function is called by:
  4128 ;;		_vfpfcnvrt
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text7
  4133  001D80                     __ptext7:
  4134                           	callstack 0
  4135  001D80                     _xtoa:
  4136                           	callstack 21
  4137  001D80                     
  4138                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 645: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 646: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 647:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 648:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 651:     if (!(prec < 0))
      +                           {
  4139  001D80  0100               	movlb	0	; () banked
  4140  001D82  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4141  001D84  EFC6  F00E         	goto	u3091
  4142  001D88  EFC8  F00E         	goto	u3090
  4143  001D8C                     u3091:
  4144  001D8C  EFC9  F00E         	goto	l2961
  4145  001D90                     u3090:
  4146  001D90                     
  4147                           ; BSR set to: 0
  4148                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 652:         flags &= ~(1 << 
      +                          1);
  4149  001D90  925B               	bcf	_flags^0,1,c
  4150  001D92                     l2961:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 654:     p = (0 < prec) ? pre
      +                          c : 1;
  4154  001D92  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4155  001D94  EFD6  F00E         	goto	u3100
  4156  001D98  5165               	movf	(_prec+1)& (0+255),w,b
  4157  001D9A  E106               	bnz	u3101
  4158  001D9C  0564               	decf	_prec& (0+255),w,b
  4159  001D9E  B0D8               	btfsc	status,0,c
  4160  001DA0  EFD4  F00E         	goto	u3101
  4161  001DA4  EFD6  F00E         	goto	u3100
  4162  001DA8                     u3101:
  4163  001DA8  EFDC  F00E         	goto	l1034
  4164  001DAC                     u3100:
  4165  001DAC                     
  4166                           ; BSR set to: 0
  4167  001DAC  0E00               	movlw	0
  4168  001DAE  6E36               	movwf	(xtoa@p+1)^0,c
  4169  001DB0  0E01               	movlw	1
  4170  001DB2  6E35               	movwf	xtoa@p^0,c
  4171  001DB4  EFE0  F00E         	goto	l1036
  4172  001DB8                     l1034:
  4173                           
  4174                           ; BSR set to: 0
  4175  001DB8  C064  F035         	movff	_prec,xtoa@p
  4176  001DBC  C065  F036         	movff	_prec+1,xtoa@p+1
  4177  001DC0                     l1036:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 655:     w = width;
  4181  001DC0  C062  F037         	movff	_width,xtoa@w
  4182  001DC4  C063  F038         	movff	_width+1,xtoa@w+1
  4183                           
  4184                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4185  001DC8  A85B               	btfss	_flags^0,4,c
  4186  001DCA  EFE9  F00E         	goto	u3111
  4187  001DCE  EFEB  F00E         	goto	u3110
  4188  001DD2                     u3111:
  4189  001DD2  EFEF  F00E         	goto	l2967
  4190  001DD6                     u3110:
  4191  001DD6                     
  4192                           ; BSR set to: 0
  4193                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 657:         w -= 2;
  4194  001DD6  0EFE               	movlw	254
  4195  001DD8  2637               	addwf	xtoa@w^0,f,c
  4196  001DDA  0EFF               	movlw	255
  4197  001DDC  2238               	addwfc	(xtoa@w+1)^0,f,c
  4198  001DDE                     l2967:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 661:     n = d;
  4202  001DDE  C020  F039         	movff	xtoa@d,xtoa@n
  4203  001DE2  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  4204  001DE6  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  4205  001DEA  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  4206  001DEE  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  4207  001DF2  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  4208  001DF6  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  4209  001DFA  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  4210  001DFE                     
  4211                           ; BSR set to: 0
  4212                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 662:     i = sizeof(dbuf) - 1
      +                          ;
  4213  001DFE  0E00               	movlw	0
  4214  001E00  6E42               	movwf	(xtoa@i+1)^0,c
  4215  001E02  0E1F               	movlw	31
  4216  001E04  6E41               	movwf	xtoa@i^0,c
  4217  001E06                     
  4218                           ; BSR set to: 0
  4219                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 663:     dbuf[i] = '\0';
  4220  001E06  0E00               	movlw	0
  4221  001E08  6FB8               	movwf	(_dbuf+31)& (0+255),b
  4222                           
  4223                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 664:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4224  001E0A  EFBA  F00F         	goto	l3003
  4225  001E0E                     l2973:
  4226                           
  4227                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 665:         --i;
  4228  001E0E  0641               	decf	xtoa@i^0,f,c
  4229  001E10  A0D8               	btfss	status,0,c
  4230  001E12  0642               	decf	(xtoa@i+1)^0,f,c
  4231  001E14                     
  4232                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 666:         c = n & 0x0f;
  4233  001E14  0E0F               	movlw	15
  4234  001E16  1439               	andwf	xtoa@n^0,w,c
  4235  001E18  6E43               	movwf	xtoa@c^0,c
  4236  001E1A  6A44               	clrf	(xtoa@c+1)^0,c
  4237  001E1C                     
  4238                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 667:         c = (c < 10) ? (
      +                          int)'0' + c : (int)'a' + (c - 10);
  4239  001E1C  BE44               	btfsc	(xtoa@c+1)^0,7,c
  4240  001E1E  EF1A  F00F         	goto	u3121
  4241  001E22  5044               	movf	(xtoa@c+1)^0,w,c
  4242  001E24  E109               	bnz	u3120
  4243  001E26  0E0A               	movlw	10
  4244  001E28  5C43               	subwf	xtoa@c^0,w,c
  4245  001E2A  A0D8               	btfss	status,0,c
  4246  001E2C  EF1A  F00F         	goto	u3121
  4247  001E30  EF1C  F00F         	goto	u3120
  4248  001E34                     u3121:
  4249  001E34  EF24  F00F         	goto	l2981
  4250  001E38                     u3120:
  4251  001E38  0E57               	movlw	87
  4252  001E3A  2443               	addwf	xtoa@c^0,w,c
  4253  001E3C  6E43               	movwf	xtoa@c^0,c
  4254  001E3E  0E00               	movlw	0
  4255  001E40  2044               	addwfc	(xtoa@c+1)^0,w,c
  4256  001E42  6E44               	movwf	(xtoa@c+1)^0,c
  4257  001E44  EF2A  F00F         	goto	l1043
  4258  001E48                     l2981:
  4259  001E48  0E30               	movlw	48
  4260  001E4A  2443               	addwf	xtoa@c^0,w,c
  4261  001E4C  6E43               	movwf	xtoa@c^0,c
  4262  001E4E  0E00               	movlw	0
  4263  001E50  2044               	addwfc	(xtoa@c+1)^0,w,c
  4264  001E52  6E44               	movwf	(xtoa@c+1)^0,c
  4265  001E54                     l1043:
  4266  001E54  0EBF               	movlw	191
  4267  001E56  6E29               	movwf	??_xtoa^0,c
  4268  001E58  0EFF               	movlw	255
  4269  001E5A  6E2A               	movwf	(??_xtoa+1)^0,c
  4270  001E5C  5028               	movf	xtoa@x^0,w,c
  4271  001E5E  6E2B               	movwf	(??_xtoa+2)^0,c
  4272  001E60  6A2C               	clrf	(??_xtoa+3)^0,c
  4273  001E62  5029               	movf	??_xtoa^0,w,c
  4274  001E64  262B               	addwf	(??_xtoa+2)^0,f,c
  4275  001E66  502A               	movf	(??_xtoa+1)^0,w,c
  4276  001E68  222C               	addwfc	(??_xtoa+3)^0,f,c
  4277  001E6A  502C               	movf	(??_xtoa+3)^0,w,c
  4278  001E6C  E10A               	bnz	u3130
  4279  001E6E  0E1A               	movlw	26
  4280  001E70  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4281  001E72  A0D8               	btfss	status,0,c
  4282  001E74  EF3E  F00F         	goto	u3131
  4283  001E78  EF41  F00F         	goto	u3130
  4284  001E7C                     u3131:
  4285  001E7C  0E01               	movlw	1
  4286  001E7E  EF42  F00F         	goto	u3140
  4287  001E82                     u3130:
  4288  001E82  0E00               	movlw	0
  4289  001E84                     u3140:
  4290  001E84  6E31               	movwf	_xtoa$1093^0,c
  4291  001E86  6A32               	clrf	(_xtoa$1093+1)^0,c
  4292  001E88  5031               	movf	_xtoa$1093^0,w,c
  4293  001E8A  1032               	iorwf	(_xtoa$1093+1)^0,w,c
  4294  001E8C  B4D8               	btfsc	status,2,c
  4295  001E8E  EF4B  F00F         	goto	u3151
  4296  001E92  EF4D  F00F         	goto	u3150
  4297  001E96                     u3151:
  4298  001E96  EF7D  F00F         	goto	l2995
  4299  001E9A                     u3150:
  4300  001E9A  0E9F               	movlw	159
  4301  001E9C  6E29               	movwf	??_xtoa^0,c
  4302  001E9E  0EFF               	movlw	255
  4303  001EA0  6E2A               	movwf	(??_xtoa+1)^0,c
  4304  001EA2  0E20               	movlw	32
  4305  001EA4  1043               	iorwf	xtoa@c^0,w,c
  4306  001EA6  6E2B               	movwf	(??_xtoa+2)^0,c
  4307  001EA8  0E00               	movlw	0
  4308  001EAA  1044               	iorwf	(xtoa@c+1)^0,w,c
  4309  001EAC  6E2C               	movwf	(??_xtoa+3)^0,c
  4310  001EAE  5029               	movf	??_xtoa^0,w,c
  4311  001EB0  262B               	addwf	(??_xtoa+2)^0,f,c
  4312  001EB2  502A               	movf	(??_xtoa+1)^0,w,c
  4313  001EB4  222C               	addwfc	(??_xtoa+3)^0,f,c
  4314  001EB6  502C               	movf	(??_xtoa+3)^0,w,c
  4315  001EB8  E10A               	bnz	u3160
  4316  001EBA  0E1A               	movlw	26
  4317  001EBC  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4318  001EBE  A0D8               	btfss	status,0,c
  4319  001EC0  EF64  F00F         	goto	u3161
  4320  001EC4  EF67  F00F         	goto	u3160
  4321  001EC8                     u3161:
  4322  001EC8  0E01               	movlw	1
  4323  001ECA  EF68  F00F         	goto	u3170
  4324  001ECE                     u3160:
  4325  001ECE  0E00               	movlw	0
  4326  001ED0                     u3170:
  4327  001ED0  6E33               	movwf	_xtoa$1094^0,c
  4328  001ED2  6A34               	clrf	(_xtoa$1094+1)^0,c
  4329  001ED4  5033               	movf	_xtoa$1094^0,w,c
  4330  001ED6  1034               	iorwf	(_xtoa$1094+1)^0,w,c
  4331  001ED8  B4D8               	btfsc	status,2,c
  4332  001EDA  EF71  F00F         	goto	u3181
  4333  001EDE  EF73  F00F         	goto	u3180
  4334  001EE2                     u3181:
  4335  001EE2  EF7D  F00F         	goto	l2995
  4336  001EE6                     u3180:
  4337  001EE6                     
  4338                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 669:             c = toupper(
      +                          c);
  4339  001EE6  C043  F009         	movff	xtoa@c,toupper@c
  4340  001EEA  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  4341  001EEE  EC33  F01B         	call	_toupper	;wreg free
  4342  001EF2  C009  F043         	movff	?_toupper,xtoa@c
  4343  001EF6  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  4344  001EFA                     l2995:
  4345                           
  4346                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 671:         dbuf[i] = (char)
      +                          c;
  4347  001EFA  0E99               	movlw	low _dbuf
  4348  001EFC  2441               	addwf	xtoa@i^0,w,c
  4349  001EFE  6ED9               	movwf	fsr2l,c
  4350  001F00  0E00               	movlw	high _dbuf
  4351  001F02  2042               	addwfc	(xtoa@i+1)^0,w,c
  4352  001F04  6EDA               	movwf	fsr2h,c
  4353  001F06  C043  FFDF         	movff	xtoa@c,indf2
  4354  001F0A                     
  4355                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 672:         --p;
  4356  001F0A  0635               	decf	xtoa@p^0,f,c
  4357  001F0C  A0D8               	btfss	status,0,c
  4358  001F0E  0636               	decf	(xtoa@p+1)^0,f,c
  4359  001F10                     
  4360                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 673:         --w;
  4361  001F10  0637               	decf	xtoa@w^0,f,c
  4362  001F12  A0D8               	btfss	status,0,c
  4363  001F14  0638               	decf	(xtoa@w+1)^0,f,c
  4364  001F16                     
  4365                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 674:         n = n >> 4;
  4366  001F16  C039  F029         	movff	xtoa@n,??_xtoa
  4367  001F1A  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  4368  001F1E  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  4369  001F22  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  4370  001F26  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  4371  001F2A  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  4372  001F2E  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  4373  001F32  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  4374  001F36  0E05               	movlw	5
  4375  001F38  EFA7  F00F         	goto	u3190
  4376  001F3C                     u3195:
  4377  001F3C  90D8               	bcf	status,0,c
  4378  001F3E  3230               	rrcf	(??_xtoa+7)^0,f,c
  4379  001F40  322F               	rrcf	(??_xtoa+6)^0,f,c
  4380  001F42  322E               	rrcf	(??_xtoa+5)^0,f,c
  4381  001F44  322D               	rrcf	(??_xtoa+4)^0,f,c
  4382  001F46  322C               	rrcf	(??_xtoa+3)^0,f,c
  4383  001F48  322B               	rrcf	(??_xtoa+2)^0,f,c
  4384  001F4A  322A               	rrcf	(??_xtoa+1)^0,f,c
  4385  001F4C  3229               	rrcf	??_xtoa^0,f,c
  4386  001F4E                     u3190:
  4387  001F4E  2EE8               	decfsz	wreg,f,c
  4388  001F50  EF9E  F00F         	goto	u3195
  4389  001F54  C029  F039         	movff	??_xtoa,xtoa@n
  4390  001F58  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  4391  001F5C  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  4392  001F60  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  4393  001F64  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  4394  001F68  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  4395  001F6C  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  4396  001F70  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  4397  001F74                     l3003:
  4398                           
  4399                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 664:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4400  001F74  BE42               	btfsc	(xtoa@i+1)^0,7,c
  4401  001F76  EFC6  F00F         	goto	u3201
  4402  001F7A  5042               	movf	(xtoa@i+1)^0,w,c
  4403  001F7C  E109               	bnz	u3200
  4404  001F7E  0E02               	movlw	2
  4405  001F80  5C41               	subwf	xtoa@i^0,w,c
  4406  001F82  A0D8               	btfss	status,0,c
  4407  001F84  EFC6  F00F         	goto	u3201
  4408  001F88  EFC8  F00F         	goto	u3200
  4409  001F8C                     u3201:
  4410  001F8C  EFF8  F00F         	goto	l1057
  4411  001F90                     u3200:
  4412  001F90  5039               	movf	xtoa@n^0,w,c
  4413  001F92  103A               	iorwf	(xtoa@n+1)^0,w,c
  4414  001F94  103B               	iorwf	(xtoa@n+2)^0,w,c
  4415  001F96  103C               	iorwf	(xtoa@n+3)^0,w,c
  4416  001F98  103D               	iorwf	(xtoa@n+4)^0,w,c
  4417  001F9A  103E               	iorwf	(xtoa@n+5)^0,w,c
  4418  001F9C  103F               	iorwf	(xtoa@n+6)^0,w,c
  4419  001F9E  1040               	iorwf	(xtoa@n+7)^0,w,c
  4420  001FA0  A4D8               	btfss	status,2,c
  4421  001FA2  EFD5  F00F         	goto	u3211
  4422  001FA6  EFD7  F00F         	goto	u3210
  4423  001FAA                     u3211:
  4424  001FAA  EF07  F00F         	goto	l2973
  4425  001FAE                     u3210:
  4426  001FAE  BE36               	btfsc	(xtoa@p+1)^0,7,c
  4427  001FB0  EFE4  F00F         	goto	u3220
  4428  001FB4  5036               	movf	(xtoa@p+1)^0,w,c
  4429  001FB6  E106               	bnz	u3221
  4430  001FB8  0435               	decf	xtoa@p^0,w,c
  4431  001FBA  B0D8               	btfsc	status,0,c
  4432  001FBC  EFE2  F00F         	goto	u3221
  4433  001FC0  EFE4  F00F         	goto	u3220
  4434  001FC4                     u3221:
  4435  001FC4  EF07  F00F         	goto	l2973
  4436  001FC8                     u3220:
  4437  001FC8  BE38               	btfsc	(xtoa@w+1)^0,7,c
  4438  001FCA  EFEF  F00F         	goto	u3231
  4439  001FCE  5038               	movf	(xtoa@w+1)^0,w,c
  4440  001FD0  E108               	bnz	u3230
  4441  001FD2  0437               	decf	xtoa@w^0,w,c
  4442  001FD4  A0D8               	btfss	status,0,c
  4443  001FD6  EFEF  F00F         	goto	u3231
  4444  001FDA  EFF1  F00F         	goto	u3230
  4445  001FDE                     u3231:
  4446  001FDE  EFF8  F00F         	goto	l1057
  4447  001FE2                     u3230:
  4448  001FE2  B25B               	btfsc	_flags^0,1,c
  4449  001FE4  EFF6  F00F         	goto	u3241
  4450  001FE8  EFF8  F00F         	goto	u3240
  4451  001FEC                     u3241:
  4452  001FEC  EF07  F00F         	goto	l2973
  4453  001FF0                     u3240:
  4454  001FF0                     l1057:
  4455                           
  4456                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 678:     if (flags & (1 << 4)
      +                          ) {
  4457  001FF0  A85B               	btfss	_flags^0,4,c
  4458  001FF2  EFFD  F00F         	goto	u3251
  4459  001FF6  EFFF  F00F         	goto	u3250
  4460  001FFA                     u3251:
  4461  001FFA  EF15  F010         	goto	l3019
  4462  001FFE                     u3250:
  4463  001FFE                     
  4464                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 679:         --i;
  4465  001FFE  0641               	decf	xtoa@i^0,f,c
  4466  002000  A0D8               	btfss	status,0,c
  4467  002002  0642               	decf	(xtoa@i+1)^0,f,c
  4468  002004                     
  4469                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 680:         dbuf[i] = x;
  4470  002004  0E99               	movlw	low _dbuf
  4471  002006  2441               	addwf	xtoa@i^0,w,c
  4472  002008  6ED9               	movwf	fsr2l,c
  4473  00200A  0E00               	movlw	high _dbuf
  4474  00200C  2042               	addwfc	(xtoa@i+1)^0,w,c
  4475  00200E  6EDA               	movwf	fsr2h,c
  4476  002010  C028  FFDF         	movff	xtoa@x,indf2
  4477  002014                     
  4478                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 681:         --i;
  4479  002014  0641               	decf	xtoa@i^0,f,c
  4480  002016  A0D8               	btfss	status,0,c
  4481  002018  0642               	decf	(xtoa@i+1)^0,f,c
  4482                           
  4483                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 682:         dbuf[i] = '0';
  4484  00201A  0E99               	movlw	low _dbuf
  4485  00201C  2441               	addwf	xtoa@i^0,w,c
  4486  00201E  6ED9               	movwf	fsr2l,c
  4487  002020  0E00               	movlw	high _dbuf
  4488  002022  2042               	addwfc	(xtoa@i+1)^0,w,c
  4489  002024  6EDA               	movwf	fsr2h,c
  4490  002026  0E30               	movlw	48
  4491  002028  6EDF               	movwf	indf2,c
  4492  00202A                     l3019:
  4493                           
  4494                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 686:     return pad(fp, &dbuf
      +                          [i], w);
  4495  00202A  C01E  F013         	movff	xtoa@fp,pad@fp
  4496  00202E  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  4497  002032  0E99               	movlw	low _dbuf
  4498  002034  2441               	addwf	xtoa@i^0,w,c
  4499  002036  6E15               	movwf	pad@buf^0,c
  4500  002038  0E00               	movlw	high _dbuf
  4501  00203A  2042               	addwfc	(xtoa@i+1)^0,w,c
  4502  00203C  6E16               	movwf	(pad@buf+1)^0,c
  4503  00203E  C037  F017         	movff	xtoa@w,pad@p
  4504  002042  C038  F018         	movff	xtoa@w+1,pad@p+1
  4505  002046  EC71  F019         	call	_pad	;wreg free
  4506  00204A  C013  F01E         	movff	?_pad,?_xtoa
  4507  00204E  C014  F01F         	movff	?_pad+1,?_xtoa+1
  4508  002052  0012               	return		;funcret
  4509  002054                     __end_of_xtoa:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _toupper *****************
  4513 ;; Defined at:
  4514 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/toupper.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  c               2    8[COMRAM] int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  2    8[COMRAM] int 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4528 ;;      Params:         2       0       0       0       0       0       0       0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4531 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4532 ;;Total ram usage:        8 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    2
  4535 ;; This function calls:
  4536 ;;		_islower
  4537 ;; This function is called by:
  4538 ;;		_xtoa
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text8
  4543  003666                     __ptext8:
  4544                           	callstack 0
  4545  003666                     _toupper:
  4546                           	callstack 23
  4547  003666  0E9F               	movlw	159
  4548  003668  6E0B               	movwf	??_toupper^0,c
  4549  00366A  0EFF               	movlw	255
  4550  00366C  6E0C               	movwf	(??_toupper+1)^0,c
  4551  00366E  C009  F00D         	movff	toupper@c,??_toupper+2
  4552  003672  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  4553  003676  500B               	movf	??_toupper^0,w,c
  4554  003678  260D               	addwf	(??_toupper+2)^0,f,c
  4555  00367A  500C               	movf	(??_toupper+1)^0,w,c
  4556  00367C  220E               	addwfc	(??_toupper+3)^0,f,c
  4557  00367E  500E               	movf	(??_toupper+3)^0,w,c
  4558  003680  E10A               	bnz	u2480
  4559  003682  0E1A               	movlw	26
  4560  003684  5C0D               	subwf	(??_toupper+2)^0,w,c
  4561  003686  A0D8               	btfss	status,0,c
  4562  003688  EF48  F01B         	goto	u2481
  4563  00368C  EF4B  F01B         	goto	u2480
  4564  003690                     u2481:
  4565  003690  0E01               	movlw	1
  4566  003692  EF4C  F01B         	goto	u2490
  4567  003696                     u2480:
  4568  003696  0E00               	movlw	0
  4569  003698                     u2490:
  4570  003698  6E0F               	movwf	_toupper$1303^0,c
  4571  00369A  6A10               	clrf	(_toupper$1303+1)^0,c
  4572  00369C  500F               	movf	_toupper$1303^0,w,c
  4573  00369E  1010               	iorwf	(_toupper$1303+1)^0,w,c
  4574  0036A0  B4D8               	btfsc	status,2,c
  4575  0036A2  EF55  F01B         	goto	u2501
  4576  0036A6  EF57  F01B         	goto	u2500
  4577  0036AA                     u2501:
  4578  0036AA  EF5D  F01B         	goto	l1225
  4579  0036AE                     u2500:
  4580  0036AE  0E5F               	movlw	95
  4581  0036B0  1409               	andwf	toupper@c^0,w,c
  4582  0036B2  6E09               	movwf	?_toupper^0,c
  4583  0036B4  6A0A               	clrf	(?_toupper+1)^0,c
  4584  0036B6  EF61  F01B         	goto	l1230
  4585  0036BA                     l1225:
  4586  0036BA  C009  F009         	movff	toupper@c,?_toupper
  4587  0036BE  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  4588  0036C2                     l1230:
  4589  0036C2  0012               	return		;funcret
  4590  0036C4                     __end_of_toupper:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _islower *****************
  4594 ;; Defined at:
  4595 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/islower.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  c               2    2[COMRAM] int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  2    2[COMRAM] int 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4611 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4612 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4613 ;;Total ram usage:        6 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    1
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_toupper
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text9
  4624  0039D2                     __ptext9:
  4625                           	callstack 0
  4626  0039D2                     _islower:
  4627                           	callstack 23
  4628  0039D2  0E9F               	movlw	159
  4629  0039D4  6E05               	movwf	??_islower^0,c
  4630  0039D6  0EFF               	movlw	255
  4631  0039D8  6E06               	movwf	(??_islower+1)^0,c
  4632  0039DA  C003  F007         	movff	islower@c,??_islower+2
  4633  0039DE  C004  F008         	movff	islower@c+1,??_islower+3
  4634  0039E2  5005               	movf	??_islower^0,w,c
  4635  0039E4  2607               	addwf	(??_islower+2)^0,f,c
  4636  0039E6  5006               	movf	(??_islower+1)^0,w,c
  4637  0039E8  2208               	addwfc	(??_islower+3)^0,f,c
  4638  0039EA  5008               	movf	(??_islower+3)^0,w,c
  4639  0039EC  E10A               	bnz	u2130
  4640  0039EE  0E1A               	movlw	26
  4641  0039F0  5C07               	subwf	(??_islower+2)^0,w,c
  4642  0039F2  A0D8               	btfss	status,0,c
  4643  0039F4  EFFE  F01C         	goto	u2131
  4644  0039F8  EF01  F01D         	goto	u2130
  4645  0039FC                     u2131:
  4646  0039FC  0E01               	movlw	1
  4647  0039FE  EF02  F01D         	goto	u2140
  4648  003A02                     u2130:
  4649  003A02  0E00               	movlw	0
  4650  003A04                     u2140:
  4651  003A04  6E03               	movwf	?_islower^0,c
  4652  003A06  6A04               	clrf	(?_islower+1)^0,c
  4653  003A08  0012               	return		;funcret
  4654  003A0A                     __end_of_islower:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _isupper *****************
  4658 ;; Defined at:
  4659 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isupper.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  c               2    2[COMRAM] int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  2    2[COMRAM] int 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         2       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4675 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        6 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_xtoa
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text10
  4688  003A0A                     __ptext10:
  4689                           	callstack 0
  4690  003A0A                     _isupper:
  4691                           	callstack 24
  4692  003A0A  0EBF               	movlw	191
  4693  003A0C  6E05               	movwf	??_isupper^0,c
  4694  003A0E  0EFF               	movlw	255
  4695  003A10  6E06               	movwf	(??_isupper+1)^0,c
  4696  003A12  C003  F007         	movff	isupper@c,??_isupper+2
  4697  003A16  C004  F008         	movff	isupper@c+1,??_isupper+3
  4698  003A1A  5005               	movf	??_isupper^0,w,c
  4699  003A1C  2607               	addwf	(??_isupper+2)^0,f,c
  4700  003A1E  5006               	movf	(??_isupper+1)^0,w,c
  4701  003A20  2208               	addwfc	(??_isupper+3)^0,f,c
  4702  003A22  5008               	movf	(??_isupper+3)^0,w,c
  4703  003A24  E10A               	bnz	u2440
  4704  003A26  0E1A               	movlw	26
  4705  003A28  5C07               	subwf	(??_isupper+2)^0,w,c
  4706  003A2A  A0D8               	btfss	status,0,c
  4707  003A2C  EF1A  F01D         	goto	u2441
  4708  003A30  EF1D  F01D         	goto	u2440
  4709  003A34                     u2441:
  4710  003A34  0E01               	movlw	1
  4711  003A36  EF1E  F01D         	goto	u2450
  4712  003A3A                     u2440:
  4713  003A3A  0E00               	movlw	0
  4714  003A3C                     u2450:
  4715  003A3C  6E03               	movwf	?_isupper^0,c
  4716  003A3E  6A04               	clrf	(?_isupper+1)^0,c
  4717  003A40  0012               	return		;funcret
  4718  003A42                     __end_of_isupper:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _isalpha *****************
  4722 ;; Defined at:
  4723 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isalpha.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  c               2    2[COMRAM] int 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  2    2[COMRAM] int 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4737 ;;      Params:         2       0       0       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4739 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4740 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        6 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_xtoa
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text11
  4752  00395E                     __ptext11:
  4753                           	callstack 0
  4754  00395E                     _isalpha:
  4755                           	callstack 24
  4756  00395E  0E9F               	movlw	159
  4757  003960  6E05               	movwf	??_isalpha^0,c
  4758  003962  0EFF               	movlw	255
  4759  003964  6E06               	movwf	(??_isalpha+1)^0,c
  4760  003966  0E20               	movlw	32
  4761  003968  1003               	iorwf	isalpha@c^0,w,c
  4762  00396A  6E07               	movwf	(??_isalpha+2)^0,c
  4763  00396C  0E00               	movlw	0
  4764  00396E  1004               	iorwf	(isalpha@c+1)^0,w,c
  4765  003970  6E08               	movwf	(??_isalpha+3)^0,c
  4766  003972  5005               	movf	??_isalpha^0,w,c
  4767  003974  2607               	addwf	(??_isalpha+2)^0,f,c
  4768  003976  5006               	movf	(??_isalpha+1)^0,w,c
  4769  003978  2208               	addwfc	(??_isalpha+3)^0,f,c
  4770  00397A  5008               	movf	(??_isalpha+3)^0,w,c
  4771  00397C  E10A               	bnz	u2460
  4772  00397E  0E1A               	movlw	26
  4773  003980  5C07               	subwf	(??_isalpha+2)^0,w,c
  4774  003982  A0D8               	btfss	status,0,c
  4775  003984  EFC6  F01C         	goto	u2461
  4776  003988  EFC9  F01C         	goto	u2460
  4777  00398C                     u2461:
  4778  00398C  0E01               	movlw	1
  4779  00398E  EFCA  F01C         	goto	u2470
  4780  003992                     u2460:
  4781  003992  0E00               	movlw	0
  4782  003994                     u2470:
  4783  003994  6E03               	movwf	?_isalpha^0,c
  4784  003996  6A04               	clrf	(?_isalpha+1)^0,c
  4785  003998  0012               	return		;funcret
  4786  00399A                     __end_of_isalpha:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _utoa *****************
  4790 ;; Defined at:
  4791 ;;		line 615 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4794 ;;		 -> sprintf@f(6), 
  4795 ;;  d               8   31[COMRAM] unsigned long long 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  n               8   51[COMRAM] unsigned long long 
  4798 ;;  i               2   59[COMRAM] int 
  4799 ;;  w               2   49[COMRAM] int 
  4800 ;;  p               2   47[COMRAM] int 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2   29[COMRAM] int 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4810 ;;      Params:        10       0       0       0       0       0       0       0       0
  4811 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4812 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4813 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4814 ;;Total ram usage:       32 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    5
  4817 ;; This function calls:
  4818 ;;		___lodiv
  4819 ;;		___lomod
  4820 ;;		_pad
  4821 ;; This function is called by:
  4822 ;;		_vfpfcnvrt
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text12
  4827  0022A2                     __ptext12:
  4828                           	callstack 0
  4829  0022A2                     _utoa:
  4830                           	callstack 21
  4831  0022A2                     
  4832                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  4833  0022A2  0100               	movlb	0	; () banked
  4834  0022A4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4835  0022A6  EF57  F011         	goto	u3021
  4836  0022AA  EF59  F011         	goto	u3020
  4837  0022AE                     u3021:
  4838  0022AE  EF5A  F011         	goto	l2925
  4839  0022B2                     u3020:
  4840  0022B2                     
  4841                           ; BSR set to: 0
  4842                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  4843  0022B2  925B               	bcf	_flags^0,1,c
  4844  0022B4                     l2925:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  4848  0022B4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4849  0022B6  EF67  F011         	goto	u3030
  4850  0022BA  5165               	movf	(_prec+1)& (0+255),w,b
  4851  0022BC  E106               	bnz	u3031
  4852  0022BE  0564               	decf	_prec& (0+255),w,b
  4853  0022C0  B0D8               	btfsc	status,0,c
  4854  0022C2  EF65  F011         	goto	u3031
  4855  0022C6  EF67  F011         	goto	u3030
  4856  0022CA                     u3031:
  4857  0022CA  EF6D  F011         	goto	l1019
  4858  0022CE                     u3030:
  4859  0022CE                     
  4860                           ; BSR set to: 0
  4861  0022CE  0E00               	movlw	0
  4862  0022D0  6E31               	movwf	(utoa@p+1)^0,c
  4863  0022D2  0E01               	movlw	1
  4864  0022D4  6E30               	movwf	utoa@p^0,c
  4865  0022D6  EF71  F011         	goto	l1021
  4866  0022DA                     l1019:
  4867                           
  4868                           ; BSR set to: 0
  4869  0022DA  C064  F030         	movff	_prec,utoa@p
  4870  0022DE  C065  F031         	movff	_prec+1,utoa@p+1
  4871  0022E2                     l1021:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 625:     w = width;
  4875  0022E2  C062  F032         	movff	_width,utoa@w
  4876  0022E6  C063  F033         	movff	_width+1,utoa@w+1
  4877                           
  4878                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 628:     n = d;
  4879  0022EA  C020  F034         	movff	utoa@d,utoa@n
  4880  0022EE  C021  F035         	movff	utoa@d+1,utoa@n+1
  4881  0022F2  C022  F036         	movff	utoa@d+2,utoa@n+2
  4882  0022F6  C023  F037         	movff	utoa@d+3,utoa@n+3
  4883  0022FA  C024  F038         	movff	utoa@d+4,utoa@n+4
  4884  0022FE  C025  F039         	movff	utoa@d+5,utoa@n+5
  4885  002302  C026  F03A         	movff	utoa@d+6,utoa@n+6
  4886  002306  C027  F03B         	movff	utoa@d+7,utoa@n+7
  4887  00230A                     
  4888                           ; BSR set to: 0
  4889                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  4890  00230A  0E00               	movlw	0
  4891  00230C  6E3D               	movwf	(utoa@i+1)^0,c
  4892  00230E  0E1F               	movlw	31
  4893  002310  6E3C               	movwf	utoa@i^0,c
  4894  002312                     
  4895                           ; BSR set to: 0
  4896                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  4897  002312  0E00               	movlw	0
  4898  002314  6FB8               	movwf	(_dbuf+31)& (0+255),b
  4899                           
  4900                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4901  002316  EF03  F012         	goto	l2943
  4902  00231A                     l2933:
  4903                           
  4904                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 632:         --i;
  4905  00231A  063C               	decf	utoa@i^0,f,c
  4906  00231C  A0D8               	btfss	status,0,c
  4907  00231E  063D               	decf	(utoa@i+1)^0,f,c
  4908  002320                     
  4909                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  4910  002320  0E99               	movlw	low _dbuf
  4911  002322  243C               	addwf	utoa@i^0,w,c
  4912  002324  6ED9               	movwf	fsr2l,c
  4913  002326  0E00               	movlw	high _dbuf
  4914  002328  203D               	addwfc	(utoa@i+1)^0,w,c
  4915  00232A  6EDA               	movwf	fsr2h,c
  4916  00232C  C034  F003         	movff	utoa@n,___lomod@dividend
  4917  002330  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  4918  002334  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  4919  002338  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  4920  00233C  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  4921  002340  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  4922  002344  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  4923  002348  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  4924  00234C  0E0A               	movlw	10
  4925  00234E  6E0B               	movwf	___lomod@divisor^0,c
  4926  002350  0E00               	movlw	0
  4927  002352  6E0C               	movwf	(___lomod@divisor+1)^0,c
  4928  002354  0E00               	movlw	0
  4929  002356  6E0D               	movwf	(___lomod@divisor+2)^0,c
  4930  002358  0E00               	movlw	0
  4931  00235A  6E0E               	movwf	(___lomod@divisor+3)^0,c
  4932  00235C  0E00               	movlw	0
  4933  00235E  6E0F               	movwf	(___lomod@divisor+4)^0,c
  4934  002360  0E00               	movlw	0
  4935  002362  6E10               	movwf	(___lomod@divisor+5)^0,c
  4936  002364  0E00               	movlw	0
  4937  002366  6E11               	movwf	(___lomod@divisor+6)^0,c
  4938  002368  0E00               	movlw	0
  4939  00236A  6E12               	movwf	(___lomod@divisor+7)^0,c
  4940  00236C  ECA4  F018         	call	___lomod	;wreg free
  4941  002370  C003  F028         	movff	?___lomod,??_utoa
  4942  002374  C004  F029         	movff	?___lomod+1,??_utoa+1
  4943  002378  C005  F02A         	movff	?___lomod+2,??_utoa+2
  4944  00237C  C006  F02B         	movff	?___lomod+3,??_utoa+3
  4945  002380  C007  F02C         	movff	?___lomod+4,??_utoa+4
  4946  002384  C008  F02D         	movff	?___lomod+5,??_utoa+5
  4947  002388  C009  F02E         	movff	?___lomod+6,??_utoa+6
  4948  00238C  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  4949  002390  5028               	movf	??_utoa^0,w,c
  4950  002392  0F30               	addlw	48
  4951  002394  6EDF               	movwf	indf2,c
  4952  002396                     
  4953                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 634:         --p;
  4954  002396  0630               	decf	utoa@p^0,f,c
  4955  002398  A0D8               	btfss	status,0,c
  4956  00239A  0631               	decf	(utoa@p+1)^0,f,c
  4957  00239C                     
  4958                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 635:         --w;
  4959  00239C  0632               	decf	utoa@w^0,f,c
  4960  00239E  A0D8               	btfss	status,0,c
  4961  0023A0  0633               	decf	(utoa@w+1)^0,f,c
  4962  0023A2                     
  4963                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  4964  0023A2  C034  F003         	movff	utoa@n,___lodiv@dividend
  4965  0023A6  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  4966  0023AA  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  4967  0023AE  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  4968  0023B2  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  4969  0023B6  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  4970  0023BA  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  4971  0023BE  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  4972  0023C2  0E0A               	movlw	10
  4973  0023C4  6E0B               	movwf	___lodiv@divisor^0,c
  4974  0023C6  0E00               	movlw	0
  4975  0023C8  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  4976  0023CA  0E00               	movlw	0
  4977  0023CC  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  4978  0023CE  0E00               	movlw	0
  4979  0023D0  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  4980  0023D2  0E00               	movlw	0
  4981  0023D4  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  4982  0023D6  0E00               	movlw	0
  4983  0023D8  6E10               	movwf	(___lodiv@divisor+5)^0,c
  4984  0023DA  0E00               	movlw	0
  4985  0023DC  6E11               	movwf	(___lodiv@divisor+6)^0,c
  4986  0023DE  0E00               	movlw	0
  4987  0023E0  6E12               	movwf	(___lodiv@divisor+7)^0,c
  4988  0023E2  ECC1  F017         	call	___lodiv	;wreg free
  4989  0023E6  C003  F034         	movff	?___lodiv,utoa@n
  4990  0023EA  C004  F035         	movff	?___lodiv+1,utoa@n+1
  4991  0023EE  C005  F036         	movff	?___lodiv+2,utoa@n+2
  4992  0023F2  C006  F037         	movff	?___lodiv+3,utoa@n+3
  4993  0023F6  C007  F038         	movff	?___lodiv+4,utoa@n+4
  4994  0023FA  C008  F039         	movff	?___lodiv+5,utoa@n+5
  4995  0023FE  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  4996  002402  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  4997  002406                     l2943:
  4998                           
  4999                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5000  002406  503C               	movf	utoa@i^0,w,c
  5001  002408  103D               	iorwf	(utoa@i+1)^0,w,c
  5002  00240A  B4D8               	btfsc	status,2,c
  5003  00240C  EF0A  F012         	goto	u3041
  5004  002410  EF0C  F012         	goto	u3040
  5005  002414                     u3041:
  5006  002414  EF3C  F012         	goto	l2953
  5007  002418                     u3040:
  5008  002418  5034               	movf	utoa@n^0,w,c
  5009  00241A  1035               	iorwf	(utoa@n+1)^0,w,c
  5010  00241C  1036               	iorwf	(utoa@n+2)^0,w,c
  5011  00241E  1037               	iorwf	(utoa@n+3)^0,w,c
  5012  002420  1038               	iorwf	(utoa@n+4)^0,w,c
  5013  002422  1039               	iorwf	(utoa@n+5)^0,w,c
  5014  002424  103A               	iorwf	(utoa@n+6)^0,w,c
  5015  002426  103B               	iorwf	(utoa@n+7)^0,w,c
  5016  002428  A4D8               	btfss	status,2,c
  5017  00242A  EF19  F012         	goto	u3051
  5018  00242E  EF1B  F012         	goto	u3050
  5019  002432                     u3051:
  5020  002432  EF8D  F011         	goto	l2933
  5021  002436                     u3050:
  5022  002436  BE31               	btfsc	(utoa@p+1)^0,7,c
  5023  002438  EF28  F012         	goto	u3060
  5024  00243C  5031               	movf	(utoa@p+1)^0,w,c
  5025  00243E  E106               	bnz	u3061
  5026  002440  0430               	decf	utoa@p^0,w,c
  5027  002442  B0D8               	btfsc	status,0,c
  5028  002444  EF26  F012         	goto	u3061
  5029  002448  EF28  F012         	goto	u3060
  5030  00244C                     u3061:
  5031  00244C  EF8D  F011         	goto	l2933
  5032  002450                     u3060:
  5033  002450  BE33               	btfsc	(utoa@w+1)^0,7,c
  5034  002452  EF33  F012         	goto	u3071
  5035  002456  5033               	movf	(utoa@w+1)^0,w,c
  5036  002458  E108               	bnz	u3070
  5037  00245A  0432               	decf	utoa@w^0,w,c
  5038  00245C  A0D8               	btfss	status,0,c
  5039  00245E  EF33  F012         	goto	u3071
  5040  002462  EF35  F012         	goto	u3070
  5041  002466                     u3071:
  5042  002466  EF3C  F012         	goto	l2953
  5043  00246A                     u3070:
  5044  00246A  B25B               	btfsc	_flags^0,1,c
  5045  00246C  EF3A  F012         	goto	u3081
  5046  002470  EF3C  F012         	goto	u3080
  5047  002474                     u3081:
  5048  002474  EF8D  F011         	goto	l2933
  5049  002478                     u3080:
  5050  002478                     l2953:
  5051                           
  5052                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  5053  002478  C01E  F013         	movff	utoa@fp,pad@fp
  5054  00247C  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  5055  002480  0E99               	movlw	low _dbuf
  5056  002482  243C               	addwf	utoa@i^0,w,c
  5057  002484  6E15               	movwf	pad@buf^0,c
  5058  002486  0E00               	movlw	high _dbuf
  5059  002488  203D               	addwfc	(utoa@i+1)^0,w,c
  5060  00248A  6E16               	movwf	(pad@buf+1)^0,c
  5061  00248C  C032  F017         	movff	utoa@w,pad@p
  5062  002490  C033  F018         	movff	utoa@w+1,pad@p+1
  5063  002494  EC71  F019         	call	_pad	;wreg free
  5064  002498  C013  F01E         	movff	?_pad,?_utoa
  5065  00249C  C014  F01F         	movff	?_pad+1,?_utoa+1
  5066  0024A0  0012               	return		;funcret
  5067  0024A2                     __end_of_utoa:
  5068                           	callstack 0
  5069                           
  5070 ;; *************** function ___lomod *****************
  5071 ;; Defined at:
  5072 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lomod.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  dividend        8    2[COMRAM] unsigned long long 
  5075 ;;  divisor         8   10[COMRAM] unsigned long long 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  counter         1   18[COMRAM] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  8    2[COMRAM] unsigned long long 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5087 ;;      Params:        16       0       0       0       0       0       0       0       0
  5088 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5090 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5091 ;;Total ram usage:       17 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_utoa
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text13
  5102  003148                     __ptext13:
  5103                           	callstack 0
  5104  003148                     ___lomod:
  5105                           	callstack 24
  5106  003148  500B               	movf	___lomod@divisor^0,w,c
  5107  00314A  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  5108  00314C  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  5109  00314E  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  5110  003150  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  5111  003152  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  5112  003154  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  5113  003156  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  5114  003158  B4D8               	btfsc	status,2,c
  5115  00315A  EFB1  F018         	goto	u2321
  5116  00315E  EFB3  F018         	goto	u2320
  5117  003162                     u2321:
  5118  003162  EFFB  F018         	goto	l604
  5119  003166                     u2320:
  5120  003166  0E01               	movlw	1
  5121  003168  6E13               	movwf	___lomod@counter^0,c
  5122  00316A  EFC1  F018         	goto	l2629
  5123  00316E                     l2627:
  5124  00316E  90D8               	bcf	status,0,c
  5125  003170  360B               	rlcf	___lomod@divisor^0,f,c
  5126  003172  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  5127  003174  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  5128  003176  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  5129  003178  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  5130  00317A  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  5131  00317C  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  5132  00317E  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  5133  003180  2A13               	incf	___lomod@counter^0,f,c
  5134  003182                     l2629:
  5135  003182  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  5136  003184  EFC6  F018         	goto	u2331
  5137  003188  EFC8  F018         	goto	u2330
  5138  00318C                     u2331:
  5139  00318C  EFB7  F018         	goto	l2627
  5140  003190                     u2330:
  5141  003190                     l2631:
  5142  003190  500B               	movf	___lomod@divisor^0,w,c
  5143  003192  5C03               	subwf	___lomod@dividend^0,w,c
  5144  003194  500C               	movf	(___lomod@divisor+1)^0,w,c
  5145  003196  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  5146  003198  500D               	movf	(___lomod@divisor+2)^0,w,c
  5147  00319A  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  5148  00319C  500E               	movf	(___lomod@divisor+3)^0,w,c
  5149  00319E  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  5150  0031A0  500F               	movf	(___lomod@divisor+4)^0,w,c
  5151  0031A2  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  5152  0031A4  5010               	movf	(___lomod@divisor+5)^0,w,c
  5153  0031A6  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  5154  0031A8  5011               	movf	(___lomod@divisor+6)^0,w,c
  5155  0031AA  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  5156  0031AC  5012               	movf	(___lomod@divisor+7)^0,w,c
  5157  0031AE  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  5158  0031B0  A0D8               	btfss	status,0,c
  5159  0031B2  EFDD  F018         	goto	u2341
  5160  0031B6  EFDF  F018         	goto	u2340
  5161  0031BA                     u2341:
  5162  0031BA  EFEF  F018         	goto	l2635
  5163  0031BE                     u2340:
  5164  0031BE  500B               	movf	___lomod@divisor^0,w,c
  5165  0031C0  5E03               	subwf	___lomod@dividend^0,f,c
  5166  0031C2  500C               	movf	(___lomod@divisor+1)^0,w,c
  5167  0031C4  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  5168  0031C6  500D               	movf	(___lomod@divisor+2)^0,w,c
  5169  0031C8  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  5170  0031CA  500E               	movf	(___lomod@divisor+3)^0,w,c
  5171  0031CC  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  5172  0031CE  500F               	movf	(___lomod@divisor+4)^0,w,c
  5173  0031D0  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  5174  0031D2  5010               	movf	(___lomod@divisor+5)^0,w,c
  5175  0031D4  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  5176  0031D6  5011               	movf	(___lomod@divisor+6)^0,w,c
  5177  0031D8  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  5178  0031DA  5012               	movf	(___lomod@divisor+7)^0,w,c
  5179  0031DC  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  5180  0031DE                     l2635:
  5181  0031DE  90D8               	bcf	status,0,c
  5182  0031E0  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  5183  0031E2  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  5184  0031E4  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  5185  0031E6  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  5186  0031E8  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  5187  0031EA  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  5188  0031EC  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  5189  0031EE  320B               	rrcf	___lomod@divisor^0,f,c
  5190  0031F0  2E13               	decfsz	___lomod@counter^0,f,c
  5191  0031F2  EFC8  F018         	goto	l2631
  5192  0031F6                     l604:
  5193  0031F6  C003  F003         	movff	___lomod@dividend,?___lomod
  5194  0031FA  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  5195  0031FE  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  5196  003202  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  5197  003206  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  5198  00320A  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  5199  00320E  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  5200  003212  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  5201  003216  0012               	return		;funcret
  5202  003218                     __end_of___lomod:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function ___lodiv *****************
  5206 ;; Defined at:
  5207 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lodiv.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  dividend        8    2[COMRAM] unsigned long long 
  5210 ;;  divisor         8   10[COMRAM] unsigned long long 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  quotient        8   18[COMRAM] unsigned long long 
  5213 ;;  counter         1   26[COMRAM] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  8    2[COMRAM] unsigned long long 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5223 ;;      Params:        16       0       0       0       0       0       0       0       0
  5224 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5226 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5227 ;;Total ram usage:       25 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    1
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_utoa
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text14
  5238  002F82                     __ptext14:
  5239                           	callstack 0
  5240  002F82                     ___lodiv:
  5241                           	callstack 24
  5242  002F82  EE20  F013         	lfsr	2,___lodiv@quotient
  5243  002F86  0E07               	movlw	7
  5244  002F88                     u2281:
  5245  002F88  6ADE               	clrf	postinc2,c
  5246  002F8A  06E8               	decf	wreg,f,c
  5247  002F8C  E2FD               	bc	u2281
  5248  002F8E  500B               	movf	___lodiv@divisor^0,w,c
  5249  002F90  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  5250  002F92  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  5251  002F94  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  5252  002F96  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  5253  002F98  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  5254  002F9A  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  5255  002F9C  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  5256  002F9E  B4D8               	btfsc	status,2,c
  5257  002FA0  EFD4  F017         	goto	u2291
  5258  002FA4  EFD6  F017         	goto	u2290
  5259  002FA8                     u2291:
  5260  002FA8  EF28  F018         	goto	l594
  5261  002FAC                     u2290:
  5262  002FAC  0E01               	movlw	1
  5263  002FAE  6E1B               	movwf	___lodiv@counter^0,c
  5264  002FB0  EFE4  F017         	goto	l2609
  5265  002FB4                     l2607:
  5266  002FB4  90D8               	bcf	status,0,c
  5267  002FB6  360B               	rlcf	___lodiv@divisor^0,f,c
  5268  002FB8  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  5269  002FBA  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  5270  002FBC  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  5271  002FBE  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  5272  002FC0  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  5273  002FC2  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  5274  002FC4  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  5275  002FC6  2A1B               	incf	___lodiv@counter^0,f,c
  5276  002FC8                     l2609:
  5277  002FC8  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  5278  002FCA  EFE9  F017         	goto	u2301
  5279  002FCE  EFEB  F017         	goto	u2300
  5280  002FD2                     u2301:
  5281  002FD2  EFDA  F017         	goto	l2607
  5282  002FD6                     u2300:
  5283  002FD6                     l2611:
  5284  002FD6  90D8               	bcf	status,0,c
  5285  002FD8  3613               	rlcf	___lodiv@quotient^0,f,c
  5286  002FDA  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  5287  002FDC  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  5288  002FDE  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  5289  002FE0  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  5290  002FE2  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  5291  002FE4  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  5292  002FE6  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  5293  002FE8  500B               	movf	___lodiv@divisor^0,w,c
  5294  002FEA  5C03               	subwf	___lodiv@dividend^0,w,c
  5295  002FEC  500C               	movf	(___lodiv@divisor+1)^0,w,c
  5296  002FEE  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  5297  002FF0  500D               	movf	(___lodiv@divisor+2)^0,w,c
  5298  002FF2  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  5299  002FF4  500E               	movf	(___lodiv@divisor+3)^0,w,c
  5300  002FF6  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  5301  002FF8  500F               	movf	(___lodiv@divisor+4)^0,w,c
  5302  002FFA  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  5303  002FFC  5010               	movf	(___lodiv@divisor+5)^0,w,c
  5304  002FFE  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  5305  003000  5011               	movf	(___lodiv@divisor+6)^0,w,c
  5306  003002  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  5307  003004  5012               	movf	(___lodiv@divisor+7)^0,w,c
  5308  003006  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  5309  003008  A0D8               	btfss	status,0,c
  5310  00300A  EF09  F018         	goto	u2311
  5311  00300E  EF0B  F018         	goto	u2310
  5312  003012                     u2311:
  5313  003012  EF1C  F018         	goto	l2619
  5314  003016                     u2310:
  5315  003016  500B               	movf	___lodiv@divisor^0,w,c
  5316  003018  5E03               	subwf	___lodiv@dividend^0,f,c
  5317  00301A  500C               	movf	(___lodiv@divisor+1)^0,w,c
  5318  00301C  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  5319  00301E  500D               	movf	(___lodiv@divisor+2)^0,w,c
  5320  003020  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  5321  003022  500E               	movf	(___lodiv@divisor+3)^0,w,c
  5322  003024  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  5323  003026  500F               	movf	(___lodiv@divisor+4)^0,w,c
  5324  003028  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  5325  00302A  5010               	movf	(___lodiv@divisor+5)^0,w,c
  5326  00302C  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  5327  00302E  5011               	movf	(___lodiv@divisor+6)^0,w,c
  5328  003030  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  5329  003032  5012               	movf	(___lodiv@divisor+7)^0,w,c
  5330  003034  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  5331  003036  8013               	bsf	___lodiv@quotient^0,0,c
  5332  003038                     l2619:
  5333  003038  90D8               	bcf	status,0,c
  5334  00303A  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  5335  00303C  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  5336  00303E  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  5337  003040  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  5338  003042  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  5339  003044  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  5340  003046  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  5341  003048  320B               	rrcf	___lodiv@divisor^0,f,c
  5342  00304A  2E1B               	decfsz	___lodiv@counter^0,f,c
  5343  00304C  EFEB  F017         	goto	l2611
  5344  003050                     l594:
  5345  003050  C013  F003         	movff	___lodiv@quotient,?___lodiv
  5346  003054  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  5347  003058  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  5348  00305C  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  5349  003060  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  5350  003064  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  5351  003068  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  5352  00306C  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  5353  003070  0012               	return		;funcret
  5354  003072                     __end_of___lodiv:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _stoa *****************
  5358 ;; Defined at:
  5359 ;;		line 568 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5362 ;;		 -> sprintf@f(6), 
  5363 ;;  s               2   13[COMRAM] PTR unsigned char 
  5364 ;;		 -> ?_sprintf(2), 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  nuls            7   16[COMRAM] unsigned char [7]
  5367 ;;  l               2   31[COMRAM] int 
  5368 ;;  p               2   29[COMRAM] int 
  5369 ;;  cp              2   27[COMRAM] PTR unsigned char 
  5370 ;;		 -> stoa@nuls(7), ?_sprintf(2), 
  5371 ;;  w               2   25[COMRAM] int 
  5372 ;;  i               2   23[COMRAM] int 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  2   11[COMRAM] int 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5382 ;;      Params:         4       0       0       0       0       0       0       0       0
  5383 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5384 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5385 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5386 ;;Total ram usage:       22 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    3
  5389 ;; This function calls:
  5390 ;;		_fputc
  5391 ;;		_strlen
  5392 ;; This function is called by:
  5393 ;;		_vfpfcnvrt
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text15
  5398  002A0C                     __ptext15:
  5399                           	callstack 0
  5400  002A0C                     _stoa:
  5401                           	callstack 23
  5402  002A0C                     
  5403                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  5404  002A0C  EE20  F0F1         	lfsr	2,stoa@F1154
  5405  002A10  EE10  F011         	lfsr	1,stoa@nuls
  5406  002A14  0E06               	movlw	6
  5407  002A16                     u2931:
  5408  002A16  CFDB FFE3          	movff	plusw2,plusw1
  5409  002A1A  06E8               	decf	wreg,f,c
  5410  002A1C  E2FC               	bc	u2931
  5411  002A1E                     
  5412                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  5413  002A1E  C00E  F01C         	movff	stoa@s,stoa@cp
  5414  002A22  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  5415  002A26                     
  5416                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  5417  002A26  501C               	movf	stoa@cp^0,w,c
  5418  002A28  101D               	iorwf	(stoa@cp+1)^0,w,c
  5419  002A2A  A4D8               	btfss	status,2,c
  5420  002A2C  EF1A  F015         	goto	u2941
  5421  002A30  EF1C  F015         	goto	u2940
  5422  002A34                     u2941:
  5423  002A34  EF20  F015         	goto	l2887
  5424  002A38                     u2940:
  5425  002A38                     
  5426                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  5427  002A38  0E11               	movlw	low stoa@nuls
  5428  002A3A  6E1C               	movwf	stoa@cp^0,c
  5429  002A3C  0E00               	movlw	high stoa@nuls
  5430  002A3E  6E1D               	movwf	(stoa@cp+1)^0,c
  5431  002A40                     l2887:
  5432                           
  5433                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  5434  002A40  C01C  F003         	movff	stoa@cp,strlen@s
  5435  002A44  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  5436  002A48  ECB4  F01B         	call	_strlen	;wreg free
  5437  002A4C  C003  F020         	movff	?_strlen,stoa@l
  5438  002A50  C004  F021         	movff	?_strlen+1,stoa@l+1
  5439  002A54                     
  5440                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  5441  002A54  C064  F01E         	movff	_prec,stoa@p
  5442  002A58  C065  F01F         	movff	_prec+1,stoa@p+1
  5443  002A5C                     
  5444                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5445  002A5C  BE1F               	btfsc	(stoa@p+1)^0,7,c
  5446  002A5E  EF33  F015         	goto	u2951
  5447  002A62  EF35  F015         	goto	u2950
  5448  002A66                     u2951:
  5449  002A66  EF4A  F015         	goto	l1000
  5450  002A6A                     u2950:
  5451  002A6A  5020               	movf	stoa@l^0,w,c
  5452  002A6C  5C1E               	subwf	stoa@p^0,w,c
  5453  002A6E  501F               	movf	(stoa@p+1)^0,w,c
  5454  002A70  0A80               	xorlw	128
  5455  002A72  6E10               	movwf	??_stoa^0,c
  5456  002A74  5021               	movf	(stoa@l+1)^0,w,c
  5457  002A76  0A80               	xorlw	128
  5458  002A78  5810               	subwfb	??_stoa^0,w,c
  5459  002A7A  A0D8               	btfss	status,0,c
  5460  002A7C  EF42  F015         	goto	u2961
  5461  002A80  EF44  F015         	goto	u2960
  5462  002A84                     u2961:
  5463  002A84  EF46  F015         	goto	l998
  5464  002A88                     u2960:
  5465  002A88  EF4A  F015         	goto	l1000
  5466  002A8C                     l998:
  5467  002A8C  C01E  F020         	movff	stoa@p,stoa@l
  5468  002A90  C01F  F021         	movff	stoa@p+1,stoa@l+1
  5469  002A94                     l1000:
  5470                           
  5471                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 583:     p = l;
  5472  002A94  C020  F01E         	movff	stoa@l,stoa@p
  5473  002A98  C021  F01F         	movff	stoa@l+1,stoa@p+1
  5474                           
  5475                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 584:     w = width;
  5476  002A9C  C062  F01A         	movff	_width,stoa@w
  5477  002AA0  C063  F01B         	movff	_width+1,stoa@w+1
  5478                           
  5479                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  5480  002AA4  B05B               	btfsc	_flags^0,0,c
  5481  002AA6  EF57  F015         	goto	u2971
  5482  002AAA  EF59  F015         	goto	u2970
  5483  002AAE                     u2971:
  5484  002AAE  EF76  F015         	goto	l2903
  5485  002AB2                     u2970:
  5486  002AB2  EF67  F015         	goto	l2901
  5487  002AB6                     l2897:
  5488                           
  5489                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  5490  002AB6  0E00               	movlw	0
  5491  002AB8  6E04               	movwf	(fputc@c+1)^0,c
  5492  002ABA  0E20               	movlw	32
  5493  002ABC  6E03               	movwf	fputc@c^0,c
  5494  002ABE  C00C  F005         	movff	stoa@fp,fputc@fp
  5495  002AC2  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5496  002AC6  EC0C  F019         	call	_fputc	;wreg free
  5497  002ACA                     
  5498                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 590:             ++l;
  5499  002ACA  4A20               	infsnz	stoa@l^0,f,c
  5500  002ACC  2A21               	incf	(stoa@l+1)^0,f,c
  5501  002ACE                     l2901:
  5502                           
  5503                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  5504  002ACE  501A               	movf	stoa@w^0,w,c
  5505  002AD0  5C20               	subwf	stoa@l^0,w,c
  5506  002AD2  5021               	movf	(stoa@l+1)^0,w,c
  5507  002AD4  0A80               	xorlw	128
  5508  002AD6  6E10               	movwf	??_stoa^0,c
  5509  002AD8  501B               	movf	(stoa@w+1)^0,w,c
  5510  002ADA  0A80               	xorlw	128
  5511  002ADC  5810               	subwfb	??_stoa^0,w,c
  5512  002ADE  A0D8               	btfss	status,0,c
  5513  002AE0  EF74  F015         	goto	u2981
  5514  002AE4  EF76  F015         	goto	u2980
  5515  002AE8                     u2981:
  5516  002AE8  EF5B  F015         	goto	l2897
  5517  002AEC                     u2980:
  5518  002AEC                     l2903:
  5519                           
  5520                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  5521  002AEC  0E00               	movlw	0
  5522  002AEE  6E19               	movwf	(stoa@i+1)^0,c
  5523  002AF0  0E00               	movlw	0
  5524  002AF2  6E18               	movwf	stoa@i^0,c
  5525                           
  5526                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  5527  002AF4  EF8F  F015         	goto	l2911
  5528  002AF8                     l2905:
  5529                           
  5530                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  5531  002AF8  C01C  FFD9         	movff	stoa@cp,fsr2l
  5532  002AFC  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  5533  002B00  50DF               	movf	indf2,w,c
  5534  002B02  6E10               	movwf	??_stoa^0,c
  5535  002B04  5010               	movf	??_stoa^0,w,c
  5536  002B06  6E03               	movwf	fputc@c^0,c
  5537  002B08  6A04               	clrf	(fputc@c+1)^0,c
  5538  002B0A  C00C  F005         	movff	stoa@fp,fputc@fp
  5539  002B0E  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5540  002B12  EC0C  F019         	call	_fputc	;wreg free
  5541  002B16                     
  5542                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  5543  002B16  4A1C               	infsnz	stoa@cp^0,f,c
  5544  002B18  2A1D               	incf	(stoa@cp+1)^0,f,c
  5545  002B1A                     
  5546                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 599:         ++i;
  5547  002B1A  4A18               	infsnz	stoa@i^0,f,c
  5548  002B1C  2A19               	incf	(stoa@i+1)^0,f,c
  5549  002B1E                     l2911:
  5550                           
  5551                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  5552  002B1E  501E               	movf	stoa@p^0,w,c
  5553  002B20  5C18               	subwf	stoa@i^0,w,c
  5554  002B22  5019               	movf	(stoa@i+1)^0,w,c
  5555  002B24  0A80               	xorlw	128
  5556  002B26  6E10               	movwf	??_stoa^0,c
  5557  002B28  501F               	movf	(stoa@p+1)^0,w,c
  5558  002B2A  0A80               	xorlw	128
  5559  002B2C  5810               	subwfb	??_stoa^0,w,c
  5560  002B2E  A0D8               	btfss	status,0,c
  5561  002B30  EF9C  F015         	goto	u2991
  5562  002B34  EF9E  F015         	goto	u2990
  5563  002B38                     u2991:
  5564  002B38  EF7C  F015         	goto	l2905
  5565  002B3C                     u2990:
  5566  002B3C                     
  5567                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  5568  002B3C  A05B               	btfss	_flags^0,0,c
  5569  002B3E  EFA3  F015         	goto	u3001
  5570  002B42  EFA5  F015         	goto	u3000
  5571  002B46                     u3001:
  5572  002B46  EFC2  F015         	goto	l1010
  5573  002B4A                     u3000:
  5574  002B4A  EFB3  F015         	goto	l2919
  5575  002B4E                     l2915:
  5576                           
  5577                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  5578  002B4E  0E00               	movlw	0
  5579  002B50  6E04               	movwf	(fputc@c+1)^0,c
  5580  002B52  0E20               	movlw	32
  5581  002B54  6E03               	movwf	fputc@c^0,c
  5582  002B56  C00C  F005         	movff	stoa@fp,fputc@fp
  5583  002B5A  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5584  002B5E  EC0C  F019         	call	_fputc	;wreg free
  5585  002B62                     
  5586                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 606:             ++l;
  5587  002B62  4A20               	infsnz	stoa@l^0,f,c
  5588  002B64  2A21               	incf	(stoa@l+1)^0,f,c
  5589  002B66                     l2919:
  5590                           
  5591                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  5592  002B66  501A               	movf	stoa@w^0,w,c
  5593  002B68  5C20               	subwf	stoa@l^0,w,c
  5594  002B6A  5021               	movf	(stoa@l+1)^0,w,c
  5595  002B6C  0A80               	xorlw	128
  5596  002B6E  6E10               	movwf	??_stoa^0,c
  5597  002B70  501B               	movf	(stoa@w+1)^0,w,c
  5598  002B72  0A80               	xorlw	128
  5599  002B74  5810               	subwfb	??_stoa^0,w,c
  5600  002B76  A0D8               	btfss	status,0,c
  5601  002B78  EFC0  F015         	goto	u3011
  5602  002B7C  EFC2  F015         	goto	u3010
  5603  002B80                     u3011:
  5604  002B80  EFA7  F015         	goto	l2915
  5605  002B84                     u3010:
  5606  002B84                     l1010:
  5607                           
  5608                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 610:     return l;
  5609  002B84  C020  F00C         	movff	stoa@l,?_stoa
  5610  002B88  C021  F00D         	movff	stoa@l+1,?_stoa+1
  5611  002B8C  0012               	return		;funcret
  5612  002B8E                     __end_of_stoa:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _otoa *****************
  5616 ;; Defined at:
  5617 ;;		line 529 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5620 ;;		 -> sprintf@f(6), 
  5621 ;;  d               8   31[COMRAM] unsigned long long 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  n               8   53[COMRAM] unsigned long long 
  5624 ;;  i               2   61[COMRAM] int 
  5625 ;;  w               2   51[COMRAM] int 
  5626 ;;  t               2   49[COMRAM] int 
  5627 ;;  p               2   47[COMRAM] int 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  2   29[COMRAM] int 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5637 ;;      Params:        10       0       0       0       0       0       0       0       0
  5638 ;;      Locals:        16       0       0       0       0       0       0       0       0
  5639 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5640 ;;      Totals:        34       0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:       34 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    5
  5644 ;; This function calls:
  5645 ;;		_pad
  5646 ;; This function is called by:
  5647 ;;		_vfpfcnvrt
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text16
  5652  00269A                     __ptext16:
  5653                           	callstack 0
  5654  00269A                     _otoa:
  5655                           	callstack 21
  5656  00269A                     
  5657                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 529: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 530: {
      +                          ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 531:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 532:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 535:     if (!(prec < 0)) {
  5658  00269A  0100               	movlb	0	; () banked
  5659  00269C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  5660  00269E  EF53  F013         	goto	u2831
  5661  0026A2  EF55  F013         	goto	u2830
  5662  0026A6                     u2831:
  5663  0026A6  EF56  F013         	goto	l2835
  5664  0026AA                     u2830:
  5665  0026AA                     
  5666                           ; BSR set to: 0
  5667                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 536:         flags &= ~(1 << 
      +                          1);
  5668  0026AA  925B               	bcf	_flags^0,1,c
  5669  0026AC                     l2835:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 538:     p = (0 < prec) ? pre
      +                          c : 1;
  5673  0026AC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  5674  0026AE  EF63  F013         	goto	u2840
  5675  0026B2  5165               	movf	(_prec+1)& (0+255),w,b
  5676  0026B4  E106               	bnz	u2841
  5677  0026B6  0564               	decf	_prec& (0+255),w,b
  5678  0026B8  B0D8               	btfsc	status,0,c
  5679  0026BA  EF61  F013         	goto	u2841
  5680  0026BE  EF63  F013         	goto	u2840
  5681  0026C2                     u2841:
  5682  0026C2  EF69  F013         	goto	l980
  5683  0026C6                     u2840:
  5684  0026C6                     
  5685                           ; BSR set to: 0
  5686  0026C6  0E00               	movlw	0
  5687  0026C8  6E31               	movwf	(otoa@p+1)^0,c
  5688  0026CA  0E01               	movlw	1
  5689  0026CC  6E30               	movwf	otoa@p^0,c
  5690  0026CE  EF6D  F013         	goto	l982
  5691  0026D2                     l980:
  5692                           
  5693                           ; BSR set to: 0
  5694  0026D2  C064  F030         	movff	_prec,otoa@p
  5695  0026D6  C065  F031         	movff	_prec+1,otoa@p+1
  5696  0026DA                     l982:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 539:     w = width;
  5700  0026DA  C062  F034         	movff	_width,otoa@w
  5701  0026DE  C063  F035         	movff	_width+1,otoa@w+1
  5702                           
  5703                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 542:     n = d;
  5704  0026E2  C020  F036         	movff	otoa@d,otoa@n
  5705  0026E6  C021  F037         	movff	otoa@d+1,otoa@n+1
  5706  0026EA  C022  F038         	movff	otoa@d+2,otoa@n+2
  5707  0026EE  C023  F039         	movff	otoa@d+3,otoa@n+3
  5708  0026F2  C024  F03A         	movff	otoa@d+4,otoa@n+4
  5709  0026F6  C025  F03B         	movff	otoa@d+5,otoa@n+5
  5710  0026FA  C026  F03C         	movff	otoa@d+6,otoa@n+6
  5711  0026FE  C027  F03D         	movff	otoa@d+7,otoa@n+7
  5712  002702                     
  5713                           ; BSR set to: 0
  5714                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 543:     i = sizeof(dbuf) - 1
      +                          ;
  5715  002702  0E00               	movlw	0
  5716  002704  6E3F               	movwf	(otoa@i+1)^0,c
  5717  002706  0E1F               	movlw	31
  5718  002708  6E3E               	movwf	otoa@i^0,c
  5719  00270A                     
  5720                           ; BSR set to: 0
  5721                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 544:     dbuf[i] = '\0';
  5722  00270A  0E00               	movlw	0
  5723  00270C  6FB8               	movwf	(_dbuf+31)& (0+255),b
  5724  00270E                     
  5725                           ; BSR set to: 0
  5726                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 545:     t = 0;
  5727  00270E  0E00               	movlw	0
  5728  002710  6E33               	movwf	(otoa@t+1)^0,c
  5729  002712  0E00               	movlw	0
  5730  002714  6E32               	movwf	otoa@t^0,c
  5731                           
  5732                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 546:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5733  002716  EFD2  F013         	goto	l2857
  5734  00271A                     l2845:
  5735                           
  5736                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 547:         --i;
  5737  00271A  063E               	decf	otoa@i^0,f,c
  5738  00271C  A0D8               	btfss	status,0,c
  5739  00271E  063F               	decf	(otoa@i+1)^0,f,c
  5740  002720                     
  5741                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 548:         t = n & 07;
  5742  002720  0E07               	movlw	7
  5743  002722  1436               	andwf	otoa@n^0,w,c
  5744  002724  6E32               	movwf	otoa@t^0,c
  5745  002726  6A33               	clrf	(otoa@t+1)^0,c
  5746  002728                     
  5747                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 549:         dbuf[i] = (char)
      +                          ((int)'0' + t);
  5748  002728  0E99               	movlw	low _dbuf
  5749  00272A  243E               	addwf	otoa@i^0,w,c
  5750  00272C  6ED9               	movwf	fsr2l,c
  5751  00272E  0E00               	movlw	high _dbuf
  5752  002730  203F               	addwfc	(otoa@i+1)^0,w,c
  5753  002732  6EDA               	movwf	fsr2h,c
  5754  002734  5032               	movf	otoa@t^0,w,c
  5755  002736  0F30               	addlw	48
  5756  002738  6EDF               	movwf	indf2,c
  5757  00273A                     
  5758                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 550:         --p;
  5759  00273A  0630               	decf	otoa@p^0,f,c
  5760  00273C  A0D8               	btfss	status,0,c
  5761  00273E  0631               	decf	(otoa@p+1)^0,f,c
  5762  002740                     
  5763                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 551:         --w;
  5764  002740  0634               	decf	otoa@w^0,f,c
  5765  002742  A0D8               	btfss	status,0,c
  5766  002744  0635               	decf	(otoa@w+1)^0,f,c
  5767  002746                     
  5768                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 552:         n = n >> 3;
  5769  002746  C036  F028         	movff	otoa@n,??_otoa
  5770  00274A  C037  F029         	movff	otoa@n+1,??_otoa+1
  5771  00274E  C038  F02A         	movff	otoa@n+2,??_otoa+2
  5772  002752  C039  F02B         	movff	otoa@n+3,??_otoa+3
  5773  002756  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  5774  00275A  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  5775  00275E  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  5776  002762  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  5777  002766  0E04               	movlw	4
  5778  002768  EFBF  F013         	goto	u2850
  5779  00276C                     u2855:
  5780  00276C  90D8               	bcf	status,0,c
  5781  00276E  322F               	rrcf	(??_otoa+7)^0,f,c
  5782  002770  322E               	rrcf	(??_otoa+6)^0,f,c
  5783  002772  322D               	rrcf	(??_otoa+5)^0,f,c
  5784  002774  322C               	rrcf	(??_otoa+4)^0,f,c
  5785  002776  322B               	rrcf	(??_otoa+3)^0,f,c
  5786  002778  322A               	rrcf	(??_otoa+2)^0,f,c
  5787  00277A  3229               	rrcf	(??_otoa+1)^0,f,c
  5788  00277C  3228               	rrcf	??_otoa^0,f,c
  5789  00277E                     u2850:
  5790  00277E  2EE8               	decfsz	wreg,f,c
  5791  002780  EFB6  F013         	goto	u2855
  5792  002784  C028  F036         	movff	??_otoa,otoa@n
  5793  002788  C029  F037         	movff	??_otoa+1,otoa@n+1
  5794  00278C  C02A  F038         	movff	??_otoa+2,otoa@n+2
  5795  002790  C02B  F039         	movff	??_otoa+3,otoa@n+3
  5796  002794  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  5797  002798  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  5798  00279C  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  5799  0027A0  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  5800  0027A4                     l2857:
  5801                           
  5802                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 546:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5803  0027A4  BE3F               	btfsc	(otoa@i+1)^0,7,c
  5804  0027A6  EFDD  F013         	goto	u2861
  5805  0027AA  503F               	movf	(otoa@i+1)^0,w,c
  5806  0027AC  E108               	bnz	u2860
  5807  0027AE  043E               	decf	otoa@i^0,w,c
  5808  0027B0  A0D8               	btfss	status,0,c
  5809  0027B2  EFDD  F013         	goto	u2861
  5810  0027B6  EFDF  F013         	goto	u2860
  5811  0027BA                     u2861:
  5812  0027BA  EF0F  F014         	goto	l989
  5813  0027BE                     u2860:
  5814  0027BE  5036               	movf	otoa@n^0,w,c
  5815  0027C0  1037               	iorwf	(otoa@n+1)^0,w,c
  5816  0027C2  1038               	iorwf	(otoa@n+2)^0,w,c
  5817  0027C4  1039               	iorwf	(otoa@n+3)^0,w,c
  5818  0027C6  103A               	iorwf	(otoa@n+4)^0,w,c
  5819  0027C8  103B               	iorwf	(otoa@n+5)^0,w,c
  5820  0027CA  103C               	iorwf	(otoa@n+6)^0,w,c
  5821  0027CC  103D               	iorwf	(otoa@n+7)^0,w,c
  5822  0027CE  A4D8               	btfss	status,2,c
  5823  0027D0  EFEC  F013         	goto	u2871
  5824  0027D4  EFEE  F013         	goto	u2870
  5825  0027D8                     u2871:
  5826  0027D8  EF8D  F013         	goto	l2845
  5827  0027DC                     u2870:
  5828  0027DC  BE31               	btfsc	(otoa@p+1)^0,7,c
  5829  0027DE  EFFB  F013         	goto	u2880
  5830  0027E2  5031               	movf	(otoa@p+1)^0,w,c
  5831  0027E4  E106               	bnz	u2881
  5832  0027E6  0430               	decf	otoa@p^0,w,c
  5833  0027E8  B0D8               	btfsc	status,0,c
  5834  0027EA  EFF9  F013         	goto	u2881
  5835  0027EE  EFFB  F013         	goto	u2880
  5836  0027F2                     u2881:
  5837  0027F2  EF8D  F013         	goto	l2845
  5838  0027F6                     u2880:
  5839  0027F6  BE35               	btfsc	(otoa@w+1)^0,7,c
  5840  0027F8  EF06  F014         	goto	u2891
  5841  0027FC  5035               	movf	(otoa@w+1)^0,w,c
  5842  0027FE  E108               	bnz	u2890
  5843  002800  0434               	decf	otoa@w^0,w,c
  5844  002802  A0D8               	btfss	status,0,c
  5845  002804  EF06  F014         	goto	u2891
  5846  002808  EF08  F014         	goto	u2890
  5847  00280C                     u2891:
  5848  00280C  EF0F  F014         	goto	l989
  5849  002810                     u2890:
  5850  002810  B25B               	btfsc	_flags^0,1,c
  5851  002812  EF0D  F014         	goto	u2901
  5852  002816  EF0F  F014         	goto	u2900
  5853  00281A                     u2901:
  5854  00281A  EF8D  F013         	goto	l2845
  5855  00281E                     u2900:
  5856  00281E                     l989:
  5857                           
  5858                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 556:     if ((flags & (1 << 4
      +                          )) && t) {
  5859  00281E  A85B               	btfss	_flags^0,4,c
  5860  002820  EF14  F014         	goto	u2911
  5861  002824  EF16  F014         	goto	u2910
  5862  002828                     u2911:
  5863  002828  EF2D  F014         	goto	l2875
  5864  00282C                     u2910:
  5865  00282C  5032               	movf	otoa@t^0,w,c
  5866  00282E  1033               	iorwf	(otoa@t+1)^0,w,c
  5867  002830  B4D8               	btfsc	status,2,c
  5868  002832  EF1D  F014         	goto	u2921
  5869  002836  EF1F  F014         	goto	u2920
  5870  00283A                     u2921:
  5871  00283A  EF2D  F014         	goto	l2875
  5872  00283E                     u2920:
  5873  00283E                     
  5874                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 557:         --i;
  5875  00283E  063E               	decf	otoa@i^0,f,c
  5876  002840  A0D8               	btfss	status,0,c
  5877  002842  063F               	decf	(otoa@i+1)^0,f,c
  5878  002844                     
  5879                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 558:         dbuf[i] = '0';
  5880  002844  0E99               	movlw	low _dbuf
  5881  002846  243E               	addwf	otoa@i^0,w,c
  5882  002848  6ED9               	movwf	fsr2l,c
  5883  00284A  0E00               	movlw	high _dbuf
  5884  00284C  203F               	addwfc	(otoa@i+1)^0,w,c
  5885  00284E  6EDA               	movwf	fsr2h,c
  5886  002850  0E30               	movlw	48
  5887  002852  6EDF               	movwf	indf2,c
  5888  002854                     
  5889                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 559:         --w;
  5890  002854  0634               	decf	otoa@w^0,f,c
  5891  002856  A0D8               	btfss	status,0,c
  5892  002858  0635               	decf	(otoa@w+1)^0,f,c
  5893  00285A                     l2875:
  5894                           
  5895                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 563:     return pad(fp, &dbuf
      +                          [i], w);
  5896  00285A  C01E  F013         	movff	otoa@fp,pad@fp
  5897  00285E  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  5898  002862  0E99               	movlw	low _dbuf
  5899  002864  243E               	addwf	otoa@i^0,w,c
  5900  002866  6E15               	movwf	pad@buf^0,c
  5901  002868  0E00               	movlw	high _dbuf
  5902  00286A  203F               	addwfc	(otoa@i+1)^0,w,c
  5903  00286C  6E16               	movwf	(pad@buf+1)^0,c
  5904  00286E  C034  F017         	movff	otoa@w,pad@p
  5905  002872  C035  F018         	movff	otoa@w+1,pad@p+1
  5906  002876  EC71  F019         	call	_pad	;wreg free
  5907  00287A  C013  F01E         	movff	?_pad,?_otoa
  5908  00287E  C014  F01F         	movff	?_pad+1,?_otoa+1
  5909  002882  0012               	return		;funcret
  5910  002884                     __end_of_otoa:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _dtoa *****************
  5914 ;; Defined at:
  5915 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5918 ;;		 -> sprintf@f(6), 
  5919 ;;  d               8   31[COMRAM] long long 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  n               8   55[COMRAM] long long 
  5922 ;;  i               2   63[COMRAM] int 
  5923 ;;  s               2   53[COMRAM] int 
  5924 ;;  w               2   51[COMRAM] int 
  5925 ;;  p               2   49[COMRAM] int 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  2   29[COMRAM] int 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:        10       0       0       0       0       0       0       0       0
  5936 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5938 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:       36 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    5
  5942 ;; This function calls:
  5943 ;;		___aodiv
  5944 ;;		___aomod
  5945 ;;		_abs
  5946 ;;		_pad
  5947 ;; This function is called by:
  5948 ;;		_vfpfcnvrt
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text17
  5953  001AA2                     __ptext17:
  5954                           	callstack 0
  5955  001AA2                     _dtoa:
  5956                           	callstack 21
  5957  001AA2                     
  5958                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
  5959  001AA2  C020  F038         	movff	dtoa@d,dtoa@n
  5960  001AA6  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  5961  001AAA  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  5962  001AAE  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  5963  001AB2  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  5964  001AB6  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  5965  001ABA  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  5966  001ABE  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  5967  001AC2                     
  5968                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  5969  001AC2  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5970  001AC4  EF66  F00D         	goto	u2681
  5971  001AC8  EF69  F00D         	goto	u2680
  5972  001ACC                     u2681:
  5973  001ACC  0E01               	movlw	1
  5974  001ACE  EF6A  F00D         	goto	u2690
  5975  001AD2                     u2680:
  5976  001AD2  0E00               	movlw	0
  5977  001AD4                     u2690:
  5978  001AD4  6E36               	movwf	dtoa@s^0,c
  5979  001AD6  6A37               	clrf	(dtoa@s+1)^0,c
  5980                           
  5981                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  5982  001AD8  5036               	movf	dtoa@s^0,w,c
  5983  001ADA  1037               	iorwf	(dtoa@s+1)^0,w,c
  5984  001ADC  B4D8               	btfsc	status,2,c
  5985  001ADE  EF73  F00D         	goto	u2701
  5986  001AE2  EF75  F00D         	goto	u2700
  5987  001AE6                     u2701:
  5988  001AE6  EF85  F00D         	goto	l2775
  5989  001AEA                     u2700:
  5990  001AEA                     
  5991                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  5992  001AEA  1E3F               	comf	(dtoa@n+7)^0,f,c
  5993  001AEC  1E3E               	comf	(dtoa@n+6)^0,f,c
  5994  001AEE  1E3D               	comf	(dtoa@n+5)^0,f,c
  5995  001AF0  1E3C               	comf	(dtoa@n+4)^0,f,c
  5996  001AF2  1E3B               	comf	(dtoa@n+3)^0,f,c
  5997  001AF4  1E3A               	comf	(dtoa@n+2)^0,f,c
  5998  001AF6  1E39               	comf	(dtoa@n+1)^0,f,c
  5999  001AF8  6C38               	negf	dtoa@n^0,c
  6000  001AFA  0E00               	movlw	0
  6001  001AFC  2239               	addwfc	(dtoa@n+1)^0,f,c
  6002  001AFE  223A               	addwfc	(dtoa@n+2)^0,f,c
  6003  001B00  223B               	addwfc	(dtoa@n+3)^0,f,c
  6004  001B02  223C               	addwfc	(dtoa@n+4)^0,f,c
  6005  001B04  223D               	addwfc	(dtoa@n+5)^0,f,c
  6006  001B06  223E               	addwfc	(dtoa@n+6)^0,f,c
  6007  001B08  223F               	addwfc	(dtoa@n+7)^0,f,c
  6008  001B0A                     l2775:
  6009                           
  6010                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  6011  001B0A  0100               	movlb	0	; () banked
  6012  001B0C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  6013  001B0E  EF8B  F00D         	goto	u2711
  6014  001B12  EF8D  F00D         	goto	u2710
  6015  001B16                     u2711:
  6016  001B16  EF8E  F00D         	goto	l2779
  6017  001B1A                     u2710:
  6018  001B1A                     
  6019                           ; BSR set to: 0
  6020                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  6021  001B1A  925B               	bcf	_flags^0,1,c
  6022  001B1C                     l2779:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  6026  001B1C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  6027  001B1E  EF9B  F00D         	goto	u2720
  6028  001B22  5165               	movf	(_prec+1)& (0+255),w,b
  6029  001B24  E106               	bnz	u2721
  6030  001B26  0564               	decf	_prec& (0+255),w,b
  6031  001B28  B0D8               	btfsc	status,0,c
  6032  001B2A  EF99  F00D         	goto	u2721
  6033  001B2E  EF9B  F00D         	goto	u2720
  6034  001B32                     u2721:
  6035  001B32  EFA1  F00D         	goto	l955
  6036  001B36                     u2720:
  6037  001B36                     
  6038                           ; BSR set to: 0
  6039  001B36  0E00               	movlw	0
  6040  001B38  6E33               	movwf	(dtoa@p+1)^0,c
  6041  001B3A  0E01               	movlw	1
  6042  001B3C  6E32               	movwf	dtoa@p^0,c
  6043  001B3E  EFA5  F00D         	goto	l957
  6044  001B42                     l955:
  6045                           
  6046                           ; BSR set to: 0
  6047  001B42  C064  F032         	movff	_prec,dtoa@p
  6048  001B46  C065  F033         	movff	_prec+1,dtoa@p+1
  6049  001B4A                     l957:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
  6053  001B4A  C062  F034         	movff	_width,dtoa@w
  6054  001B4E  C063  F035         	movff	_width+1,dtoa@w+1
  6055  001B52                     
  6056                           ; BSR set to: 0
  6057                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  6058  001B52  5036               	movf	dtoa@s^0,w,c
  6059  001B54  1037               	iorwf	(dtoa@s+1)^0,w,c
  6060  001B56  A4D8               	btfss	status,2,c
  6061  001B58  EFB0  F00D         	goto	u2731
  6062  001B5C  EFB2  F00D         	goto	u2730
  6063  001B60                     u2731:
  6064  001B60  EFB9  F00D         	goto	l2787
  6065  001B64                     u2730:
  6066  001B64                     
  6067                           ; BSR set to: 0
  6068  001B64  A45B               	btfss	_flags^0,2,c
  6069  001B66  EFB7  F00D         	goto	u2741
  6070  001B6A  EFB9  F00D         	goto	u2740
  6071  001B6E                     u2741:
  6072  001B6E  EFBC  F00D         	goto	l2789
  6073  001B72                     u2740:
  6074  001B72                     l2787:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
  6078  001B72  0634               	decf	dtoa@w^0,f,c
  6079  001B74  A0D8               	btfss	status,0,c
  6080  001B76  0635               	decf	(dtoa@w+1)^0,f,c
  6081  001B78                     l2789:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  6085  001B78  0E00               	movlw	0
  6086  001B7A  6E41               	movwf	(dtoa@i+1)^0,c
  6087  001B7C  0E1F               	movlw	31
  6088  001B7E  6E40               	movwf	dtoa@i^0,c
  6089  001B80                     
  6090                           ; BSR set to: 0
  6091                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  6092  001B80  0E00               	movlw	0
  6093  001B82  6FB8               	movwf	(_dbuf+31)& (0+255),b
  6094                           
  6095                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6096  001B84  EF40  F00E         	goto	l2803
  6097  001B88                     l2793:
  6098                           
  6099                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
  6100  001B88  0640               	decf	dtoa@i^0,f,c
  6101  001B8A  A0D8               	btfss	status,0,c
  6102  001B8C  0641               	decf	(dtoa@i+1)^0,f,c
  6103  001B8E                     
  6104                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  6105  001B8E  0E99               	movlw	low _dbuf
  6106  001B90  2440               	addwf	dtoa@i^0,w,c
  6107  001B92  6ED9               	movwf	fsr2l,c
  6108  001B94  0E00               	movlw	high _dbuf
  6109  001B96  2041               	addwfc	(dtoa@i+1)^0,w,c
  6110  001B98  6EDA               	movwf	fsr2h,c
  6111  001B9A  C038  F003         	movff	dtoa@n,___aomod@dividend
  6112  001B9E  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  6113  001BA2  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  6114  001BA6  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  6115  001BAA  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  6116  001BAE  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  6117  001BB2  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  6118  001BB6  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  6119  001BBA  0E0A               	movlw	10
  6120  001BBC  6E0B               	movwf	___aomod@divisor^0,c
  6121  001BBE  0E00               	movlw	0
  6122  001BC0  6E0C               	movwf	(___aomod@divisor+1)^0,c
  6123  001BC2  0E00               	movlw	0
  6124  001BC4  6E0D               	movwf	(___aomod@divisor+2)^0,c
  6125  001BC6  0E00               	movlw	0
  6126  001BC8  6E0E               	movwf	(___aomod@divisor+3)^0,c
  6127  001BCA  0E00               	movlw	0
  6128  001BCC  6E0F               	movwf	(___aomod@divisor+4)^0,c
  6129  001BCE  0E00               	movlw	0
  6130  001BD0  6E10               	movwf	(___aomod@divisor+5)^0,c
  6131  001BD2  0E00               	movlw	0
  6132  001BD4  6E11               	movwf	(___aomod@divisor+6)^0,c
  6133  001BD6  0E00               	movlw	0
  6134  001BD8  6E12               	movwf	(___aomod@divisor+7)^0,c
  6135  001BDA  EC82  F016         	call	___aomod	;wreg free
  6136  001BDE  C003  F028         	movff	?___aomod,??_dtoa
  6137  001BE2  C004  F029         	movff	?___aomod+1,??_dtoa+1
  6138  001BE6  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  6139  001BEA  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  6140  001BEE  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  6141  001BF2  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  6142  001BF6  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  6143  001BFA  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  6144  001BFE  C028  F015         	movff	??_dtoa,abs@a
  6145  001C02  C02A  F016         	movff	??_dtoa+2,abs@a+1
  6146  001C06  EC8F  F01C         	call	_abs	;wreg free
  6147  001C0A  5015               	movf	?_abs^0,w,c
  6148  001C0C  0F30               	addlw	48
  6149  001C0E  6EDF               	movwf	indf2,c
  6150  001C10                     
  6151                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
  6152  001C10  0632               	decf	dtoa@p^0,f,c
  6153  001C12  A0D8               	btfss	status,0,c
  6154  001C14  0633               	decf	(dtoa@p+1)^0,f,c
  6155  001C16                     
  6156                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
  6157  001C16  0634               	decf	dtoa@w^0,f,c
  6158  001C18  A0D8               	btfss	status,0,c
  6159  001C1A  0635               	decf	(dtoa@w+1)^0,f,c
  6160  001C1C                     
  6161                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  6162  001C1C  C038  F003         	movff	dtoa@n,___aodiv@dividend
  6163  001C20  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  6164  001C24  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  6165  001C28  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  6166  001C2C  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  6167  001C30  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  6168  001C34  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  6169  001C38  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  6170  001C3C  0E0A               	movlw	10
  6171  001C3E  6E0B               	movwf	___aodiv@divisor^0,c
  6172  001C40  0E00               	movlw	0
  6173  001C42  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  6174  001C44  0E00               	movlw	0
  6175  001C46  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  6176  001C48  0E00               	movlw	0
  6177  001C4A  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  6178  001C4C  0E00               	movlw	0
  6179  001C4E  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  6180  001C50  0E00               	movlw	0
  6181  001C52  6E10               	movwf	(___aodiv@divisor+5)^0,c
  6182  001C54  0E00               	movlw	0
  6183  001C56  6E11               	movwf	(___aodiv@divisor+6)^0,c
  6184  001C58  0E00               	movlw	0
  6185  001C5A  6E12               	movwf	(___aodiv@divisor+7)^0,c
  6186  001C5C  EC42  F014         	call	___aodiv	;wreg free
  6187  001C60  C003  F038         	movff	?___aodiv,dtoa@n
  6188  001C64  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  6189  001C68  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  6190  001C6C  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  6191  001C70  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  6192  001C74  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  6193  001C78  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  6194  001C7C  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  6195  001C80                     l2803:
  6196                           
  6197                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6198  001C80  BE41               	btfsc	(dtoa@i+1)^0,7,c
  6199  001C82  EF4B  F00E         	goto	u2751
  6200  001C86  5041               	movf	(dtoa@i+1)^0,w,c
  6201  001C88  E108               	bnz	u2750
  6202  001C8A  0440               	decf	dtoa@i^0,w,c
  6203  001C8C  A0D8               	btfss	status,0,c
  6204  001C8E  EF4B  F00E         	goto	u2751
  6205  001C92  EF4D  F00E         	goto	u2750
  6206  001C96                     u2751:
  6207  001C96  EF7D  F00E         	goto	l2813
  6208  001C9A                     u2750:
  6209  001C9A  5038               	movf	dtoa@n^0,w,c
  6210  001C9C  1039               	iorwf	(dtoa@n+1)^0,w,c
  6211  001C9E  103A               	iorwf	(dtoa@n+2)^0,w,c
  6212  001CA0  103B               	iorwf	(dtoa@n+3)^0,w,c
  6213  001CA2  103C               	iorwf	(dtoa@n+4)^0,w,c
  6214  001CA4  103D               	iorwf	(dtoa@n+5)^0,w,c
  6215  001CA6  103E               	iorwf	(dtoa@n+6)^0,w,c
  6216  001CA8  103F               	iorwf	(dtoa@n+7)^0,w,c
  6217  001CAA  A4D8               	btfss	status,2,c
  6218  001CAC  EF5A  F00E         	goto	u2761
  6219  001CB0  EF5C  F00E         	goto	u2760
  6220  001CB4                     u2761:
  6221  001CB4  EFC4  F00D         	goto	l2793
  6222  001CB8                     u2760:
  6223  001CB8  BE33               	btfsc	(dtoa@p+1)^0,7,c
  6224  001CBA  EF69  F00E         	goto	u2770
  6225  001CBE  5033               	movf	(dtoa@p+1)^0,w,c
  6226  001CC0  E106               	bnz	u2771
  6227  001CC2  0432               	decf	dtoa@p^0,w,c
  6228  001CC4  B0D8               	btfsc	status,0,c
  6229  001CC6  EF67  F00E         	goto	u2771
  6230  001CCA  EF69  F00E         	goto	u2770
  6231  001CCE                     u2771:
  6232  001CCE  EFC4  F00D         	goto	l2793
  6233  001CD2                     u2770:
  6234  001CD2  BE35               	btfsc	(dtoa@w+1)^0,7,c
  6235  001CD4  EF74  F00E         	goto	u2781
  6236  001CD8  5035               	movf	(dtoa@w+1)^0,w,c
  6237  001CDA  E108               	bnz	u2780
  6238  001CDC  0434               	decf	dtoa@w^0,w,c
  6239  001CDE  A0D8               	btfss	status,0,c
  6240  001CE0  EF74  F00E         	goto	u2781
  6241  001CE4  EF76  F00E         	goto	u2780
  6242  001CE8                     u2781:
  6243  001CE8  EF7D  F00E         	goto	l2813
  6244  001CEC                     u2780:
  6245  001CEC  B25B               	btfsc	_flags^0,1,c
  6246  001CEE  EF7B  F00E         	goto	u2791
  6247  001CF2  EF7D  F00E         	goto	u2790
  6248  001CF6                     u2791:
  6249  001CF6  EFC4  F00D         	goto	l2793
  6250  001CFA                     u2790:
  6251  001CFA                     l2813:
  6252                           
  6253                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  6254  001CFA  5036               	movf	dtoa@s^0,w,c
  6255  001CFC  1037               	iorwf	(dtoa@s+1)^0,w,c
  6256  001CFE  A4D8               	btfss	status,2,c
  6257  001D00  EF84  F00E         	goto	u2801
  6258  001D04  EF86  F00E         	goto	u2800
  6259  001D08                     u2801:
  6260  001D08  EF8D  F00E         	goto	l2817
  6261  001D0C                     u2800:
  6262  001D0C  A45B               	btfss	_flags^0,2,c
  6263  001D0E  EF8B  F00E         	goto	u2811
  6264  001D12  EF8D  F00E         	goto	u2810
  6265  001D16                     u2811:
  6266  001D16  EFAB  F00E         	goto	l2827
  6267  001D1A                     u2810:
  6268  001D1A                     l2817:
  6269                           
  6270                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
  6271  001D1A  0640               	decf	dtoa@i^0,f,c
  6272  001D1C  A0D8               	btfss	status,0,c
  6273  001D1E  0641               	decf	(dtoa@i+1)^0,f,c
  6274  001D20                     
  6275                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  6276  001D20  5036               	movf	dtoa@s^0,w,c
  6277  001D22  1037               	iorwf	(dtoa@s+1)^0,w,c
  6278  001D24  A4D8               	btfss	status,2,c
  6279  001D26  EF97  F00E         	goto	u2821
  6280  001D2A  EF99  F00E         	goto	u2820
  6281  001D2E                     u2821:
  6282  001D2E  EF9F  F00E         	goto	l2823
  6283  001D32                     u2820:
  6284  001D32  0E00               	movlw	0
  6285  001D34  6E31               	movwf	(_dtoa$1057+1)^0,c
  6286  001D36  0E2B               	movlw	43
  6287  001D38  6E30               	movwf	_dtoa$1057^0,c
  6288  001D3A  EFA3  F00E         	goto	l2825
  6289  001D3E                     l2823:
  6290  001D3E  0E00               	movlw	0
  6291  001D40  6E31               	movwf	(_dtoa$1057+1)^0,c
  6292  001D42  0E2D               	movlw	45
  6293  001D44  6E30               	movwf	_dtoa$1057^0,c
  6294  001D46                     l2825:
  6295  001D46  0E99               	movlw	low _dbuf
  6296  001D48  2440               	addwf	dtoa@i^0,w,c
  6297  001D4A  6ED9               	movwf	fsr2l,c
  6298  001D4C  0E00               	movlw	high _dbuf
  6299  001D4E  2041               	addwfc	(dtoa@i+1)^0,w,c
  6300  001D50  6EDA               	movwf	fsr2h,c
  6301  001D52  C030  FFDF         	movff	_dtoa$1057,indf2
  6302  001D56                     l2827:
  6303                           
  6304                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  6305  001D56  C01E  F013         	movff	dtoa@fp,pad@fp
  6306  001D5A  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  6307  001D5E  0E99               	movlw	low _dbuf
  6308  001D60  2440               	addwf	dtoa@i^0,w,c
  6309  001D62  6E15               	movwf	pad@buf^0,c
  6310  001D64  0E00               	movlw	high _dbuf
  6311  001D66  2041               	addwfc	(dtoa@i+1)^0,w,c
  6312  001D68  6E16               	movwf	(pad@buf+1)^0,c
  6313  001D6A  C034  F017         	movff	dtoa@w,pad@p
  6314  001D6E  C035  F018         	movff	dtoa@w+1,pad@p+1
  6315  001D72  EC71  F019         	call	_pad	;wreg free
  6316  001D76  C013  F01E         	movff	?_pad,?_dtoa
  6317  001D7A  C014  F01F         	movff	?_pad+1,?_dtoa+1
  6318  001D7E  0012               	return		;funcret
  6319  001D80                     __end_of_dtoa:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _pad *****************
  6323 ;; Defined at:
  6324 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6327 ;;		 -> sprintf@f(6), 
  6328 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6329 ;;		 -> dbuf(32), 
  6330 ;;  p               2   22[COMRAM] int 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  w               2   27[COMRAM] int 
  6333 ;;  i               2   25[COMRAM] int 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  2   18[COMRAM] int 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6343 ;;      Params:         6       0       0       0       0       0       0       0       0
  6344 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6345 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6346 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6347 ;;Total ram usage:       11 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    4
  6350 ;; This function calls:
  6351 ;;		_fputc
  6352 ;;		_fputs
  6353 ;;		_strlen
  6354 ;; This function is called by:
  6355 ;;		_dtoa
  6356 ;;		_otoa
  6357 ;;		_utoa
  6358 ;;		_xtoa
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text18
  6363  0032E2                     __ptext18:
  6364                           	callstack 0
  6365  0032E2                     _pad:
  6366                           	callstack 21
  6367  0032E2                     
  6368                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6369  0032E2  A05B               	btfss	_flags^0,0,c
  6370  0032E4  EF76  F019         	goto	u2391
  6371  0032E8  EF78  F019         	goto	u2390
  6372  0032EC                     u2391:
  6373  0032EC  EF82  F019         	goto	l2659
  6374  0032F0                     u2390:
  6375  0032F0                     
  6376                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6377  0032F0  C015  F00C         	movff	pad@buf,fputs@s
  6378  0032F4  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6379  0032F8  C013  F00E         	movff	pad@fp,fputs@fp
  6380  0032FC  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6381  003300  EC6D  F01C         	call	_fputs	;wreg free
  6382  003304                     l2659:
  6383                           
  6384                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6385  003304  BE18               	btfsc	(pad@p+1)^0,7,c
  6386  003306  EF87  F019         	goto	u2401
  6387  00330A  EF89  F019         	goto	u2400
  6388  00330E                     u2401:
  6389  00330E  EF8F  F019         	goto	l2663
  6390  003312                     u2400:
  6391  003312  C017  F01C         	movff	pad@p,pad@w
  6392  003316  C018  F01D         	movff	pad@p+1,pad@w+1
  6393  00331A  EF93  F019         	goto	l928
  6394  00331E                     l2663:
  6395  00331E  0E00               	movlw	0
  6396  003320  6E1D               	movwf	(pad@w+1)^0,c
  6397  003322  0E00               	movlw	0
  6398  003324  6E1C               	movwf	pad@w^0,c
  6399  003326                     l928:
  6400                           
  6401                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6402  003326  0E00               	movlw	0
  6403  003328  6E1B               	movwf	(pad@i+1)^0,c
  6404  00332A  0E00               	movlw	0
  6405  00332C  6E1A               	movwf	pad@i^0,c
  6406                           
  6407                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6408  00332E  EFA5  F019         	goto	l2669
  6409  003332                     l2665:
  6410                           
  6411                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6412  003332  0E00               	movlw	0
  6413  003334  6E04               	movwf	(fputc@c+1)^0,c
  6414  003336  0E20               	movlw	32
  6415  003338  6E03               	movwf	fputc@c^0,c
  6416  00333A  C013  F005         	movff	pad@fp,fputc@fp
  6417  00333E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6418  003342  EC0C  F019         	call	_fputc	;wreg free
  6419  003346                     
  6420                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6421  003346  4A1A               	infsnz	pad@i^0,f,c
  6422  003348  2A1B               	incf	(pad@i+1)^0,f,c
  6423  00334A                     l2669:
  6424                           
  6425                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6426  00334A  501C               	movf	pad@w^0,w,c
  6427  00334C  5C1A               	subwf	pad@i^0,w,c
  6428  00334E  501B               	movf	(pad@i+1)^0,w,c
  6429  003350  0A80               	xorlw	128
  6430  003352  6E19               	movwf	??_pad^0,c
  6431  003354  501D               	movf	(pad@w+1)^0,w,c
  6432  003356  0A80               	xorlw	128
  6433  003358  5819               	subwfb	??_pad^0,w,c
  6434  00335A  A0D8               	btfss	status,0,c
  6435  00335C  EFB2  F019         	goto	u2411
  6436  003360  EFB4  F019         	goto	u2410
  6437  003364                     u2411:
  6438  003364  EF99  F019         	goto	l2665
  6439  003368                     u2410:
  6440  003368                     
  6441                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6442  003368  B05B               	btfsc	_flags^0,0,c
  6443  00336A  EFB9  F019         	goto	u2421
  6444  00336E  EFBB  F019         	goto	u2420
  6445  003372                     u2421:
  6446  003372  EFC5  F019         	goto	l2673
  6447  003376                     u2420:
  6448  003376                     
  6449                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6450  003376  C015  F00C         	movff	pad@buf,fputs@s
  6451  00337A  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6452  00337E  C013  F00E         	movff	pad@fp,fputs@fp
  6453  003382  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6454  003386  EC6D  F01C         	call	_fputs	;wreg free
  6455  00338A                     l2673:
  6456                           
  6457                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6458  00338A  C015  F003         	movff	pad@buf,strlen@s
  6459  00338E  C016  F004         	movff	pad@buf+1,strlen@s+1
  6460  003392  ECB4  F01B         	call	_strlen	;wreg free
  6461  003396  501C               	movf	pad@w^0,w,c
  6462  003398  2403               	addwf	?_strlen^0,w,c
  6463  00339A  6E13               	movwf	?_pad^0,c
  6464  00339C  501D               	movf	(pad@w+1)^0,w,c
  6465  00339E  2004               	addwfc	(?_strlen+1)^0,w,c
  6466  0033A0  6E14               	movwf	(?_pad+1)^0,c
  6467  0033A2  0012               	return		;funcret
  6468  0033A4                     __end_of_pad:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _fputs *****************
  6472 ;; Defined at:
  6473 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6476 ;;		 -> dbuf(32), 
  6477 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6478 ;;		 -> sprintf@f(6), 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  i               2   16[COMRAM] int 
  6481 ;;  c               1   15[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2   11[COMRAM] int 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6491 ;;      Params:         4       0       0       0       0       0       0       0       0
  6492 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6494 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6495 ;;Total ram usage:        7 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    3
  6498 ;; This function calls:
  6499 ;;		_fputc
  6500 ;; This function is called by:
  6501 ;;		_pad
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text19
  6506  0038DA                     __ptext19:
  6507                           	callstack 0
  6508  0038DA                     _fputs:
  6509                           	callstack 21
  6510  0038DA  0E00               	movlw	0
  6511  0038DC  6E12               	movwf	(fputs@i+1)^0,c
  6512  0038DE  0E00               	movlw	0
  6513  0038E0  6E11               	movwf	fputs@i^0,c
  6514  0038E2  EF7E  F01C         	goto	l2509
  6515  0038E6                     l2505:
  6516  0038E6  C010  F003         	movff	fputs@c,fputc@c
  6517  0038EA  6A04               	clrf	(fputc@c+1)^0,c
  6518  0038EC  C00E  F005         	movff	fputs@fp,fputc@fp
  6519  0038F0  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6520  0038F4  EC0C  F019         	call	_fputc	;wreg free
  6521  0038F8  4A11               	infsnz	fputs@i^0,f,c
  6522  0038FA  2A12               	incf	(fputs@i+1)^0,f,c
  6523  0038FC                     l2509:
  6524  0038FC  5011               	movf	fputs@i^0,w,c
  6525  0038FE  240C               	addwf	fputs@s^0,w,c
  6526  003900  6ED9               	movwf	fsr2l,c
  6527  003902  5012               	movf	(fputs@i+1)^0,w,c
  6528  003904  200D               	addwfc	(fputs@s+1)^0,w,c
  6529  003906  6EDA               	movwf	fsr2h,c
  6530  003908  50DF               	movf	indf2,w,c
  6531  00390A  6E10               	movwf	fputs@c^0,c
  6532  00390C  5010               	movf	fputs@c^0,w,c
  6533  00390E  A4D8               	btfss	status,2,c
  6534  003910  EF8C  F01C         	goto	u2121
  6535  003914  EF8E  F01C         	goto	u2120
  6536  003918                     u2121:
  6537  003918  EF73  F01C         	goto	l2505
  6538  00391C                     u2120:
  6539  00391C  0012               	return		;funcret
  6540  00391E                     __end_of_fputs:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _abs *****************
  6544 ;; Defined at:
  6545 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  a               2   20[COMRAM] int 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  2   20[COMRAM] int 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6559 ;;      Params:         2       0       0       0       0       0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6561 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6562 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6563 ;;Total ram usage:        4 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_dtoa
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text20
  6574  00391E                     __ptext20:
  6575                           	callstack 0
  6576  00391E                     _abs:
  6577                           	callstack 24
  6578  00391E  BE16               	btfsc	(abs@a+1)^0,7,c
  6579  003920  EF9C  F01C         	goto	u2430
  6580  003924  5016               	movf	(abs@a+1)^0,w,c
  6581  003926  E106               	bnz	u2431
  6582  003928  0415               	decf	abs@a^0,w,c
  6583  00392A  B0D8               	btfsc	status,0,c
  6584  00392C  EF9A  F01C         	goto	u2431
  6585  003930  EF9C  F01C         	goto	u2430
  6586  003934                     u2431:
  6587  003934  EFAA  F01C         	goto	l1145
  6588  003938                     u2430:
  6589  003938  C015  F017         	movff	abs@a,??_abs
  6590  00393C  C016  F018         	movff	abs@a+1,??_abs+1
  6591  003940  1E17               	comf	??_abs^0,f,c
  6592  003942  1E18               	comf	(??_abs+1)^0,f,c
  6593  003944  4A17               	infsnz	??_abs^0,f,c
  6594  003946  2A18               	incf	(??_abs+1)^0,f,c
  6595  003948  C017  F015         	movff	??_abs,?_abs
  6596  00394C  C018  F016         	movff	??_abs+1,?_abs+1
  6597  003950  EFAE  F01C         	goto	l1148
  6598  003954                     l1145:
  6599  003954  C015  F015         	movff	abs@a,?_abs
  6600  003958  C016  F016         	movff	abs@a+1,?_abs+1
  6601  00395C                     l1148:
  6602  00395C  0012               	return		;funcret
  6603  00395E                     __end_of_abs:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function ___aomod *****************
  6607 ;; Defined at:
  6608 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dividend        8    2[COMRAM] long long 
  6611 ;;  divisor         8   10[COMRAM] long long 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  sign            1   19[COMRAM] unsigned char 
  6614 ;;  counter         1   18[COMRAM] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  8    2[COMRAM] long long 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6624 ;;      Params:        16       0       0       0       0       0       0       0       0
  6625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6627 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6628 ;;Total ram usage:       18 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_dtoa
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text21
  6639  002D04                     __ptext21:
  6640                           	callstack 0
  6641  002D04                     ___aomod:
  6642                           	callstack 24
  6643  002D04  0E00               	movlw	0
  6644  002D06  6E14               	movwf	___aomod@sign^0,c
  6645  002D08  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  6646  002D0A  EF8B  F016         	goto	u2220
  6647  002D0E  EF89  F016         	goto	u2221
  6648  002D12                     u2221:
  6649  002D12  EF9D  F016         	goto	l2573
  6650  002D16                     u2220:
  6651  002D16  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6652  002D18  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6653  002D1A  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6654  002D1C  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6655  002D1E  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6656  002D20  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6657  002D22  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6658  002D24  6C03               	negf	___aomod@dividend^0,c
  6659  002D26  0E00               	movlw	0
  6660  002D28  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6661  002D2A  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6662  002D2C  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6663  002D2E  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6664  002D30  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6665  002D32  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6666  002D34  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6667  002D36  0E01               	movlw	1
  6668  002D38  6E14               	movwf	___aomod@sign^0,c
  6669  002D3A                     l2573:
  6670  002D3A  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  6671  002D3C  EFA4  F016         	goto	u2230
  6672  002D40  EFA2  F016         	goto	u2231
  6673  002D44                     u2231:
  6674  002D44  EFB4  F016         	goto	l2577
  6675  002D48                     u2230:
  6676  002D48  1E12               	comf	(___aomod@divisor+7)^0,f,c
  6677  002D4A  1E11               	comf	(___aomod@divisor+6)^0,f,c
  6678  002D4C  1E10               	comf	(___aomod@divisor+5)^0,f,c
  6679  002D4E  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  6680  002D50  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  6681  002D52  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  6682  002D54  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  6683  002D56  6C0B               	negf	___aomod@divisor^0,c
  6684  002D58  0E00               	movlw	0
  6685  002D5A  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  6686  002D5C  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  6687  002D5E  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  6688  002D60  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  6689  002D62  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  6690  002D64  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  6691  002D66  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  6692  002D68                     l2577:
  6693  002D68  500B               	movf	___aomod@divisor^0,w,c
  6694  002D6A  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  6695  002D6C  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  6696  002D6E  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  6697  002D70  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  6698  002D72  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  6699  002D74  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  6700  002D76  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  6701  002D78  B4D8               	btfsc	status,2,c
  6702  002D7A  EFC1  F016         	goto	u2241
  6703  002D7E  EFC3  F016         	goto	u2240
  6704  002D82                     u2241:
  6705  002D82  EF0B  F017         	goto	l2593
  6706  002D86                     u2240:
  6707  002D86  0E01               	movlw	1
  6708  002D88  6E13               	movwf	___aomod@counter^0,c
  6709  002D8A  EFD1  F016         	goto	l2583
  6710  002D8E                     l2581:
  6711  002D8E  90D8               	bcf	status,0,c
  6712  002D90  360B               	rlcf	___aomod@divisor^0,f,c
  6713  002D92  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  6714  002D94  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  6715  002D96  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  6716  002D98  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  6717  002D9A  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  6718  002D9C  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  6719  002D9E  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  6720  002DA0  2A13               	incf	___aomod@counter^0,f,c
  6721  002DA2                     l2583:
  6722  002DA2  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  6723  002DA4  EFD6  F016         	goto	u2251
  6724  002DA8  EFD8  F016         	goto	u2250
  6725  002DAC                     u2251:
  6726  002DAC  EFC7  F016         	goto	l2581
  6727  002DB0                     u2250:
  6728  002DB0                     l2585:
  6729  002DB0  500B               	movf	___aomod@divisor^0,w,c
  6730  002DB2  5C03               	subwf	___aomod@dividend^0,w,c
  6731  002DB4  500C               	movf	(___aomod@divisor+1)^0,w,c
  6732  002DB6  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  6733  002DB8  500D               	movf	(___aomod@divisor+2)^0,w,c
  6734  002DBA  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  6735  002DBC  500E               	movf	(___aomod@divisor+3)^0,w,c
  6736  002DBE  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  6737  002DC0  500F               	movf	(___aomod@divisor+4)^0,w,c
  6738  002DC2  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  6739  002DC4  5010               	movf	(___aomod@divisor+5)^0,w,c
  6740  002DC6  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  6741  002DC8  5011               	movf	(___aomod@divisor+6)^0,w,c
  6742  002DCA  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  6743  002DCC  5012               	movf	(___aomod@divisor+7)^0,w,c
  6744  002DCE  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  6745  002DD0  A0D8               	btfss	status,0,c
  6746  002DD2  EFED  F016         	goto	u2261
  6747  002DD6  EFEF  F016         	goto	u2260
  6748  002DDA                     u2261:
  6749  002DDA  EFFF  F016         	goto	l2589
  6750  002DDE                     u2260:
  6751  002DDE  500B               	movf	___aomod@divisor^0,w,c
  6752  002DE0  5E03               	subwf	___aomod@dividend^0,f,c
  6753  002DE2  500C               	movf	(___aomod@divisor+1)^0,w,c
  6754  002DE4  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  6755  002DE6  500D               	movf	(___aomod@divisor+2)^0,w,c
  6756  002DE8  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  6757  002DEA  500E               	movf	(___aomod@divisor+3)^0,w,c
  6758  002DEC  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  6759  002DEE  500F               	movf	(___aomod@divisor+4)^0,w,c
  6760  002DF0  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  6761  002DF2  5010               	movf	(___aomod@divisor+5)^0,w,c
  6762  002DF4  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  6763  002DF6  5011               	movf	(___aomod@divisor+6)^0,w,c
  6764  002DF8  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  6765  002DFA  5012               	movf	(___aomod@divisor+7)^0,w,c
  6766  002DFC  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  6767  002DFE                     l2589:
  6768  002DFE  90D8               	bcf	status,0,c
  6769  002E00  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  6770  002E02  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  6771  002E04  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  6772  002E06  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  6773  002E08  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  6774  002E0A  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  6775  002E0C  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  6776  002E0E  320B               	rrcf	___aomod@divisor^0,f,c
  6777  002E10  2E13               	decfsz	___aomod@counter^0,f,c
  6778  002E12  EFD8  F016         	goto	l2585
  6779  002E16                     l2593:
  6780  002E16  5014               	movf	___aomod@sign^0,w,c
  6781  002E18  B4D8               	btfsc	status,2,c
  6782  002E1A  EF11  F017         	goto	u2271
  6783  002E1E  EF13  F017         	goto	u2270
  6784  002E22                     u2271:
  6785  002E22  EF23  F017         	goto	l2597
  6786  002E26                     u2270:
  6787  002E26  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6788  002E28  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6789  002E2A  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6790  002E2C  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6791  002E2E  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6792  002E30  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6793  002E32  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6794  002E34  6C03               	negf	___aomod@dividend^0,c
  6795  002E36  0E00               	movlw	0
  6796  002E38  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6797  002E3A  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6798  002E3C  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6799  002E3E  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6800  002E40  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6801  002E42  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6802  002E44  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6803  002E46                     l2597:
  6804  002E46  C003  F003         	movff	___aomod@dividend,?___aomod
  6805  002E4A  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  6806  002E4E  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  6807  002E52  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  6808  002E56  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  6809  002E5A  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  6810  002E5E  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  6811  002E62  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  6812  002E66  0012               	return		;funcret
  6813  002E68                     __end_of___aomod:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function ___aodiv *****************
  6817 ;; Defined at:
  6818 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  dividend        8    2[COMRAM] long long 
  6821 ;;  divisor         8   10[COMRAM] long long 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  quotient        8   20[COMRAM] long long 
  6824 ;;  sign            1   19[COMRAM] unsigned char 
  6825 ;;  counter         1   18[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  8    2[COMRAM] long long 
  6828 ;; Registers used:
  6829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6835 ;;      Params:        16       0       0       0       0       0       0       0       0
  6836 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6838 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6839 ;;Total ram usage:       26 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    1
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_dtoa
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text22
  6850  002884                     __ptext22:
  6851                           	callstack 0
  6852  002884                     ___aodiv:
  6853                           	callstack 24
  6854  002884  0E00               	movlw	0
  6855  002886  6E14               	movwf	___aodiv@sign^0,c
  6856  002888  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  6857  00288A  EF4B  F014         	goto	u2150
  6858  00288E  EF49  F014         	goto	u2151
  6859  002892                     u2151:
  6860  002892  EF5D  F014         	goto	l2529
  6861  002896                     u2150:
  6862  002896  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  6863  002898  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  6864  00289A  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  6865  00289C  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  6866  00289E  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  6867  0028A0  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  6868  0028A2  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  6869  0028A4  6C0B               	negf	___aodiv@divisor^0,c
  6870  0028A6  0E00               	movlw	0
  6871  0028A8  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  6872  0028AA  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  6873  0028AC  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  6874  0028AE  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  6875  0028B0  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  6876  0028B2  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  6877  0028B4  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  6878  0028B6  0E01               	movlw	1
  6879  0028B8  6E14               	movwf	___aodiv@sign^0,c
  6880  0028BA                     l2529:
  6881  0028BA  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  6882  0028BC  EF64  F014         	goto	u2160
  6883  0028C0  EF62  F014         	goto	u2161
  6884  0028C4                     u2161:
  6885  0028C4  EF76  F014         	goto	l2535
  6886  0028C8                     u2160:
  6887  0028C8  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  6888  0028CA  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  6889  0028CC  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  6890  0028CE  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  6891  0028D0  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  6892  0028D2  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  6893  0028D4  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  6894  0028D6  6C03               	negf	___aodiv@dividend^0,c
  6895  0028D8  0E00               	movlw	0
  6896  0028DA  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  6897  0028DC  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  6898  0028DE  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  6899  0028E0  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  6900  0028E2  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  6901  0028E4  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  6902  0028E6  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  6903  0028E8  0E01               	movlw	1
  6904  0028EA  1A14               	xorwf	___aodiv@sign^0,f,c
  6905  0028EC                     l2535:
  6906  0028EC  EE20  F015         	lfsr	2,___aodiv@quotient
  6907  0028F0  0E07               	movlw	7
  6908  0028F2                     u2171:
  6909  0028F2  6ADE               	clrf	postinc2,c
  6910  0028F4  06E8               	decf	wreg,f,c
  6911  0028F6  E2FD               	bc	u2171
  6912  0028F8  500B               	movf	___aodiv@divisor^0,w,c
  6913  0028FA  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  6914  0028FC  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  6915  0028FE  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  6916  002900  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  6917  002902  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  6918  002904  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  6919  002906  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  6920  002908  B4D8               	btfsc	status,2,c
  6921  00290A  EF89  F014         	goto	u2181
  6922  00290E  EF8B  F014         	goto	u2180
  6923  002912                     u2181:
  6924  002912  EFDD  F014         	goto	l2557
  6925  002916                     u2180:
  6926  002916  0E01               	movlw	1
  6927  002918  6E13               	movwf	___aodiv@counter^0,c
  6928  00291A  EF99  F014         	goto	l2543
  6929  00291E                     l2541:
  6930  00291E  90D8               	bcf	status,0,c
  6931  002920  360B               	rlcf	___aodiv@divisor^0,f,c
  6932  002922  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  6933  002924  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  6934  002926  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  6935  002928  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  6936  00292A  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  6937  00292C  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  6938  00292E  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  6939  002930  2A13               	incf	___aodiv@counter^0,f,c
  6940  002932                     l2543:
  6941  002932  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  6942  002934  EF9E  F014         	goto	u2191
  6943  002938  EFA0  F014         	goto	u2190
  6944  00293C                     u2191:
  6945  00293C  EF8F  F014         	goto	l2541
  6946  002940                     u2190:
  6947  002940                     l2545:
  6948  002940  90D8               	bcf	status,0,c
  6949  002942  3615               	rlcf	___aodiv@quotient^0,f,c
  6950  002944  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  6951  002946  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  6952  002948  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  6953  00294A  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  6954  00294C  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  6955  00294E  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  6956  002950  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  6957  002952  500B               	movf	___aodiv@divisor^0,w,c
  6958  002954  5C03               	subwf	___aodiv@dividend^0,w,c
  6959  002956  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6960  002958  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  6961  00295A  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6962  00295C  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  6963  00295E  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6964  002960  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  6965  002962  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6966  002964  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  6967  002966  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6968  002968  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  6969  00296A  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6970  00296C  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  6971  00296E  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6972  002970  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  6973  002972  A0D8               	btfss	status,0,c
  6974  002974  EFBE  F014         	goto	u2201
  6975  002978  EFC0  F014         	goto	u2200
  6976  00297C                     u2201:
  6977  00297C  EFD1  F014         	goto	l2553
  6978  002980                     u2200:
  6979  002980  500B               	movf	___aodiv@divisor^0,w,c
  6980  002982  5E03               	subwf	___aodiv@dividend^0,f,c
  6981  002984  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6982  002986  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  6983  002988  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6984  00298A  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  6985  00298C  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6986  00298E  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  6987  002990  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6988  002992  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  6989  002994  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6990  002996  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  6991  002998  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6992  00299A  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  6993  00299C  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6994  00299E  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  6995  0029A0  8015               	bsf	___aodiv@quotient^0,0,c
  6996  0029A2                     l2553:
  6997  0029A2  90D8               	bcf	status,0,c
  6998  0029A4  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  6999  0029A6  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  7000  0029A8  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  7001  0029AA  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  7002  0029AC  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  7003  0029AE  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  7004  0029B0  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  7005  0029B2  320B               	rrcf	___aodiv@divisor^0,f,c
  7006  0029B4  2E13               	decfsz	___aodiv@counter^0,f,c
  7007  0029B6  EFA0  F014         	goto	l2545
  7008  0029BA                     l2557:
  7009  0029BA  5014               	movf	___aodiv@sign^0,w,c
  7010  0029BC  B4D8               	btfsc	status,2,c
  7011  0029BE  EFE3  F014         	goto	u2211
  7012  0029C2  EFE5  F014         	goto	u2210
  7013  0029C6                     u2211:
  7014  0029C6  EFF5  F014         	goto	l2561
  7015  0029CA                     u2210:
  7016  0029CA  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  7017  0029CC  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  7018  0029CE  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  7019  0029D0  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  7020  0029D2  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  7021  0029D4  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  7022  0029D6  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  7023  0029D8  6C15               	negf	___aodiv@quotient^0,c
  7024  0029DA  0E00               	movlw	0
  7025  0029DC  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  7026  0029DE  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  7027  0029E0  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  7028  0029E2  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  7029  0029E4  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  7030  0029E6  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  7031  0029E8  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  7032  0029EA                     l2561:
  7033  0029EA  C015  F003         	movff	___aodiv@quotient,?___aodiv
  7034  0029EE  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  7035  0029F2  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  7036  0029F6  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  7037  0029FA  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  7038  0029FE  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  7039  002A02  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  7040  002A06  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  7041  002A0A  0012               	return		;funcret
  7042  002A0C                     __end_of___aodiv:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _ctoa *****************
  7046 ;; Defined at:
  7047 ;;		line 259 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7050 ;;		 -> sprintf@f(6), 
  7051 ;;  c               1   13[COMRAM] unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  w               2   17[COMRAM] int 
  7054 ;;  l               2   15[COMRAM] int 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  2   11[COMRAM] int 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7064 ;;      Params:         3       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7067 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:        8 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		_fputc
  7073 ;; This function is called by:
  7074 ;;		_vfpfcnvrt
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text23
  7079  003072                     __ptext23:
  7080                           	callstack 0
  7081  003072                     _ctoa:
  7082                           	callstack 23
  7083  003072                     
  7084                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.31
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  7085  003072  0100               	movlb	0	; () banked
  7086  003074  5162               	movf	_width& (0+255),w,b
  7087  003076  1163               	iorwf	(_width+1)& (0+255),w,b
  7088  003078  A4D8               	btfss	status,2,c
  7089  00307A  EF41  F018         	goto	u2631
  7090  00307E  EF43  F018         	goto	u2630
  7091  003082                     u2631:
  7092  003082  EF49  F018         	goto	l2745
  7093  003086                     u2630:
  7094  003086                     
  7095                           ; BSR set to: 0
  7096  003086  C062  F012         	movff	_width,ctoa@w
  7097  00308A  C063  F013         	movff	_width+1,ctoa@w+1
  7098  00308E  EF4F  F018         	goto	l2747
  7099  003092                     l2745:
  7100                           
  7101                           ; BSR set to: 0
  7102  003092  0EFF               	movlw	255
  7103  003094  2562               	addwf	_width& (0+255),w,b
  7104  003096  6E12               	movwf	ctoa@w^0,c
  7105  003098  0EFF               	movlw	255
  7106  00309A  2163               	addwfc	(_width+1)& (0+255),w,b
  7107  00309C  6E13               	movwf	(ctoa@w+1)^0,c
  7108  00309E                     l2747:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 267:     if (flags & (1 << 0)
      +                          ) {
  7112  00309E  A05B               	btfss	_flags^0,0,c
  7113  0030A0  EF54  F018         	goto	u2641
  7114  0030A4  EF56  F018         	goto	u2640
  7115  0030A8                     u2641:
  7116  0030A8  EF5F  F018         	goto	l2751
  7117  0030AC                     u2640:
  7118  0030AC                     
  7119                           ; BSR set to: 0
  7120                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 268:         fputc(c, fp);
  7121  0030AC  C00E  F003         	movff	ctoa@c,fputc@c
  7122  0030B0  6A04               	clrf	(fputc@c+1)^0,c
  7123  0030B2  C00C  F005         	movff	ctoa@fp,fputc@fp
  7124  0030B6  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  7125  0030BA  EC0C  F019         	call	_fputc	;wreg free
  7126  0030BE                     l2751:
  7127                           
  7128                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0) ? 0 : w;
  7129  0030BE  BE13               	btfsc	(ctoa@w+1)^0,7,c
  7130  0030C0  EF64  F018         	goto	u2651
  7131  0030C4  EF66  F018         	goto	u2650
  7132  0030C8                     u2651:
  7133  0030C8  EF68  F018         	goto	l2755
  7134  0030CC                     u2650:
  7135  0030CC  EF6C  F018         	goto	l944
  7136  0030D0                     l2755:
  7137  0030D0  0E00               	movlw	0
  7138  0030D2  6E13               	movwf	(ctoa@w+1)^0,c
  7139  0030D4  0E00               	movlw	0
  7140  0030D6  6E12               	movwf	ctoa@w^0,c
  7141  0030D8                     l944:
  7142                           
  7143                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 272:     l = 0;
  7144  0030D8  0E00               	movlw	0
  7145  0030DA  6E11               	movwf	(ctoa@l+1)^0,c
  7146  0030DC  0E00               	movlw	0
  7147  0030DE  6E10               	movwf	ctoa@l^0,c
  7148                           
  7149                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < w) {
  7150  0030E0  EF7E  F018         	goto	l2761
  7151  0030E4                     l2757:
  7152                           
  7153                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 274:         fputc(' ', fp);
  7154  0030E4  0E00               	movlw	0
  7155  0030E6  6E04               	movwf	(fputc@c+1)^0,c
  7156  0030E8  0E20               	movlw	32
  7157  0030EA  6E03               	movwf	fputc@c^0,c
  7158  0030EC  C00C  F005         	movff	ctoa@fp,fputc@fp
  7159  0030F0  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  7160  0030F4  EC0C  F019         	call	_fputc	;wreg free
  7161  0030F8                     
  7162                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 275:         ++l;
  7163  0030F8  4A10               	infsnz	ctoa@l^0,f,c
  7164  0030FA  2A11               	incf	(ctoa@l+1)^0,f,c
  7165  0030FC                     l2761:
  7166                           
  7167                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 273:     while (l < w) {
  7168  0030FC  5012               	movf	ctoa@w^0,w,c
  7169  0030FE  5C10               	subwf	ctoa@l^0,w,c
  7170  003100  5011               	movf	(ctoa@l+1)^0,w,c
  7171  003102  0A80               	xorlw	128
  7172  003104  6E0F               	movwf	??_ctoa^0,c
  7173  003106  5013               	movf	(ctoa@w+1)^0,w,c
  7174  003108  0A80               	xorlw	128
  7175  00310A  580F               	subwfb	??_ctoa^0,w,c
  7176  00310C  A0D8               	btfss	status,0,c
  7177  00310E  EF8B  F018         	goto	u2661
  7178  003112  EF8D  F018         	goto	u2660
  7179  003116                     u2661:
  7180  003116  EF72  F018         	goto	l2757
  7181  00311A                     u2660:
  7182  00311A                     
  7183                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 278:     if (!(flags & (1 << 
      +                          0))) {
  7184  00311A  B05B               	btfsc	_flags^0,0,c
  7185  00311C  EF92  F018         	goto	u2671
  7186  003120  EF94  F018         	goto	u2670
  7187  003124                     u2671:
  7188  003124  EF9D  F018         	goto	l2765
  7189  003128                     u2670:
  7190  003128                     
  7191                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 279:         fputc(c, fp);
  7192  003128  C00E  F003         	movff	ctoa@c,fputc@c
  7193  00312C  6A04               	clrf	(fputc@c+1)^0,c
  7194  00312E  C00C  F005         	movff	ctoa@fp,fputc@fp
  7195  003132  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  7196  003136  EC0C  F019         	call	_fputc	;wreg free
  7197  00313A                     l2765:
  7198                           
  7199                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 282:     return l+1;
  7200  00313A  0E01               	movlw	1
  7201  00313C  2410               	addwf	ctoa@l^0,w,c
  7202  00313E  6E0C               	movwf	?_ctoa^0,c
  7203  003140  0E00               	movlw	0
  7204  003142  2011               	addwfc	(ctoa@l+1)^0,w,c
  7205  003144  6E0D               	movwf	(?_ctoa+1)^0,c
  7206  003146  0012               	return		;funcret
  7207  003148                     __end_of_ctoa:
  7208                           	callstack 0
  7209                           
  7210 ;; *************** function _fputc *****************
  7211 ;; Defined at:
  7212 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  c               2    2[COMRAM] int 
  7215 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  7216 ;;		 -> sprintf@f(6), 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2    2[COMRAM] int 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7228 ;;      Params:         4       0       0       0       0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7230 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7231 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7232 ;;Total ram usage:        9 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    2
  7235 ;; This function calls:
  7236 ;;		_putch
  7237 ;; This function is called by:
  7238 ;;		_pad
  7239 ;;		_ctoa
  7240 ;;		_stoa
  7241 ;;		_vfpfcnvrt
  7242 ;;		_fputs
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text24
  7247  003218                     __ptext24:
  7248                           	callstack 0
  7249  003218                     _fputc:
  7250                           	callstack 21
  7251  003218  5005               	movf	fputc@fp^0,w,c
  7252  00321A  1006               	iorwf	(fputc@fp+1)^0,w,c
  7253  00321C  B4D8               	btfsc	status,2,c
  7254  00321E  EF13  F019         	goto	u2061
  7255  003222  EF15  F019         	goto	u2060
  7256  003226                     u2061:
  7257  003226  EF1E  F019         	goto	l2483
  7258  00322A                     u2060:
  7259  00322A  5005               	movf	fputc@fp^0,w,c
  7260  00322C  1006               	iorwf	(fputc@fp+1)^0,w,c
  7261  00322E  A4D8               	btfss	status,2,c
  7262  003230  EF1C  F019         	goto	u2071
  7263  003234  EF1E  F019         	goto	u2070
  7264  003238                     u2071:
  7265  003238  EF23  F019         	goto	l2485
  7266  00323C                     u2070:
  7267  00323C                     l2483:
  7268  00323C  5003               	movf	fputc@c^0,w,c
  7269  00323E  EC8C  F01D         	call	_putch
  7270  003242  EF70  F019         	goto	l1172
  7271  003246                     l2485:
  7272  003246  EE20 F004          	lfsr	2,4
  7273  00324A  5005               	movf	fputc@fp^0,w,c
  7274  00324C  26D9               	addwf	fsr2l,f,c
  7275  00324E  5006               	movf	(fputc@fp+1)^0,w,c
  7276  003250  22DA               	addwfc	fsr2h,f,c
  7277  003252  50DE               	movf	postinc2,w,c
  7278  003254  10DE               	iorwf	postinc2,w,c
  7279  003256  B4D8               	btfsc	status,2,c
  7280  003258  EF30  F019         	goto	u2081
  7281  00325C  EF32  F019         	goto	u2080
  7282  003260                     u2081:
  7283  003260  EF4D  F019         	goto	l2489
  7284  003264                     u2080:
  7285  003264  EE20 F004          	lfsr	2,4
  7286  003268  5005               	movf	fputc@fp^0,w,c
  7287  00326A  26D9               	addwf	fsr2l,f,c
  7288  00326C  5006               	movf	(fputc@fp+1)^0,w,c
  7289  00326E  22DA               	addwfc	fsr2h,f,c
  7290  003270  EE10 F002          	lfsr	1,2
  7291  003274  5005               	movf	fputc@fp^0,w,c
  7292  003276  26E1               	addwf	fsr1l,f,c
  7293  003278  5006               	movf	(fputc@fp+1)^0,w,c
  7294  00327A  22E2               	addwfc	fsr1h,f,c
  7295  00327C  50DE               	movf	postinc2,w,c
  7296  00327E  5CE6               	subwf	postinc1,w,c
  7297  003280  50E6               	movf	postinc1,w,c
  7298  003282  0A80               	xorlw	128
  7299  003284  6E0B               	movwf	(??_fputc+4)^0,c
  7300  003286  50DE               	movf	postinc2,w,c
  7301  003288  0A80               	xorlw	128
  7302  00328A  580B               	subwfb	(??_fputc+4)^0,w,c
  7303  00328C  B0D8               	btfsc	status,0,c
  7304  00328E  EF4B  F019         	goto	u2091
  7305  003292  EF4D  F019         	goto	u2090
  7306  003296                     u2091:
  7307  003296  EF70  F019         	goto	l1172
  7308  00329A                     u2090:
  7309  00329A                     l2489:
  7310  00329A  EE20 F002          	lfsr	2,2
  7311  00329E  5005               	movf	fputc@fp^0,w,c
  7312  0032A0  26D9               	addwf	fsr2l,f,c
  7313  0032A2  5006               	movf	(fputc@fp+1)^0,w,c
  7314  0032A4  22DA               	addwfc	fsr2h,f,c
  7315  0032A6  CFDE F007          	movff	postinc2,??_fputc
  7316  0032AA  CFDD F008          	movff	postdec2,??_fputc+1
  7317  0032AE  C005  FFD9         	movff	fputc@fp,fsr2l
  7318  0032B2  C006  FFDA         	movff	fputc@fp+1,fsr2h
  7319  0032B6  CFDE F009          	movff	postinc2,??_fputc+2
  7320  0032BA  CFDD F00A          	movff	postdec2,??_fputc+3
  7321  0032BE  5007               	movf	??_fputc^0,w,c
  7322  0032C0  2409               	addwf	(??_fputc+2)^0,w,c
  7323  0032C2  6ED9               	movwf	fsr2l,c
  7324  0032C4  5008               	movf	(??_fputc+1)^0,w,c
  7325  0032C6  200A               	addwfc	(??_fputc+3)^0,w,c
  7326  0032C8  6EDA               	movwf	fsr2h,c
  7327  0032CA  C003  FFDF         	movff	fputc@c,indf2
  7328  0032CE  EE20 F002          	lfsr	2,2
  7329  0032D2  5005               	movf	fputc@fp^0,w,c
  7330  0032D4  26D9               	addwf	fsr2l,f,c
  7331  0032D6  5006               	movf	(fputc@fp+1)^0,w,c
  7332  0032D8  22DA               	addwfc	fsr2h,f,c
  7333  0032DA  2ADE               	incf	postinc2,f,c
  7334  0032DC  0E00               	movlw	0
  7335  0032DE  22DD               	addwfc	postdec2,f,c
  7336  0032E0                     l1172:
  7337  0032E0  0012               	return		;funcret
  7338  0032E2                     __end_of_fputc:
  7339                           	callstack 0
  7340                           
  7341 ;; *************** function _putch *****************
  7342 ;; Defined at:
  7343 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  c               1    wreg     unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  c               1    0[COMRAM] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  1    wreg      void 
  7350 ;; Registers used:
  7351 ;;		wreg
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7357 ;;      Params:         0       0       0       0       0       0       0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7361 ;;Total ram usage:        0 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_fputc
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text25
  7372  003B18                     __ptext25:
  7373                           	callstack 0
  7374  003B18                     _putch:
  7375                           	callstack 21
  7376  003B18  0012               	return		;funcret
  7377  003B1A                     __end_of_putch:
  7378                           	callstack 0
  7379                           
  7380 ;; *************** function _atoi *****************
  7381 ;; Defined at:
  7382 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7385 ;;		 -> NULL(0), data_in(512), STR_2(13), STR_1(14), 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  n               2   22[COMRAM] int 
  7388 ;;  neg             2   15[COMRAM] int 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  2    9[COMRAM] int 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         2       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7401 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:       15 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    2
  7405 ;; This function calls:
  7406 ;;		___wmul
  7407 ;;		_isdigit
  7408 ;;		_isspace
  7409 ;; This function is called by:
  7410 ;;		_get_action
  7411 ;;		_vfpfcnvrt
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text26
  7416  0024A2                     __ptext26:
  7417                           	callstack 0
  7418  0024A2                     _atoi:
  7419                           	callstack 27
  7420  0024A2  0E00               	movlw	0
  7421  0024A4  6E18               	movwf	(atoi@n+1)^0,c
  7422  0024A6  0E00               	movlw	0
  7423  0024A8  6E17               	movwf	atoi@n^0,c
  7424  0024AA  0E00               	movlw	0
  7425  0024AC  6E11               	movwf	(atoi@neg+1)^0,c
  7426  0024AE  0E00               	movlw	0
  7427  0024B0  6E10               	movwf	atoi@neg^0,c
  7428  0024B2  EF5D  F012         	goto	l2703
  7429  0024B6                     l2701:
  7430  0024B6  4A0A               	infsnz	atoi@s^0,f,c
  7431  0024B8  2A0B               	incf	(atoi@s+1)^0,f,c
  7432  0024BA                     l2703:
  7433  0024BA  0E01               	movlw	1
  7434  0024BC  6E16               	movwf	_atoi$931^0,c
  7435  0024BE  C00A  FFF6         	movff	atoi@s,tblptrl
  7436  0024C2  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7437  0024C6  6AF8               	clrf	tblptru,c
  7438  0024C8  0E07               	movlw	(high __ramtop+-1)
  7439  0024CA  64F7               	cpfsgt	tblptrh,c
  7440  0024CC  D003               	bra	u2517
  7441  0024CE  0008               	tblrd		*
  7442  0024D0  50F5               	movf	tablat,w,c
  7443  0024D2  D005               	bra	u2510
  7444  0024D4                     u2517:
  7445  0024D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7446  0024D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7447  0024DC  50E7               	movf	indf1,w,c
  7448  0024DE                     u2510:
  7449  0024DE  0A20               	xorlw	32
  7450  0024E0  B4D8               	btfsc	status,2,c
  7451  0024E2  EF75  F012         	goto	u2521
  7452  0024E6  EF77  F012         	goto	u2520
  7453  0024EA                     u2521:
  7454  0024EA  EF9E  F012         	goto	l2711
  7455  0024EE                     u2520:
  7456  0024EE  0EF7               	movlw	247
  7457  0024F0  6E0C               	movwf	??_atoi^0,c
  7458  0024F2  0EFF               	movlw	255
  7459  0024F4  6E0D               	movwf	(??_atoi+1)^0,c
  7460  0024F6  C00A  FFF6         	movff	atoi@s,tblptrl
  7461  0024FA  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7462  0024FE  6AF8               	clrf	tblptru,c
  7463  002500  0E07               	movlw	(high __ramtop+-1)
  7464  002502  64F7               	cpfsgt	tblptrh,c
  7465  002504  D003               	bra	u2537
  7466  002506  0008               	tblrd		*
  7467  002508  50F5               	movf	tablat,w,c
  7468  00250A  D005               	bra	u2530
  7469  00250C                     u2537:
  7470  00250C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7471  002510  CFF7 FFE2          	movff	tblptrh,fsr1h
  7472  002514  50E7               	movf	indf1,w,c
  7473  002516                     u2530:
  7474  002516  6E0E               	movwf	(??_atoi+2)^0,c
  7475  002518  6A0F               	clrf	(??_atoi+3)^0,c
  7476  00251A  500C               	movf	??_atoi^0,w,c
  7477  00251C  260E               	addwf	(??_atoi+2)^0,f,c
  7478  00251E  500D               	movf	(??_atoi+1)^0,w,c
  7479  002520  220F               	addwfc	(??_atoi+3)^0,f,c
  7480  002522  500F               	movf	(??_atoi+3)^0,w,c
  7481  002524  E109               	bnz	u2540
  7482  002526  0E05               	movlw	5
  7483  002528  5C0E               	subwf	(??_atoi+2)^0,w,c
  7484  00252A  A0D8               	btfss	status,0,c
  7485  00252C  EF9A  F012         	goto	u2541
  7486  002530  EF9C  F012         	goto	u2540
  7487  002534                     u2541:
  7488  002534  EF9E  F012         	goto	l2711
  7489  002538                     u2540:
  7490  002538  0E00               	movlw	0
  7491  00253A  6E16               	movwf	_atoi$931^0,c
  7492  00253C                     l2711:
  7493  00253C  C016  F012         	movff	_atoi$931,_atoi$930
  7494  002540  6A13               	clrf	(_atoi$930+1)^0,c
  7495  002542  5012               	movf	_atoi$930^0,w,c
  7496  002544  1013               	iorwf	(_atoi$930+1)^0,w,c
  7497  002546  A4D8               	btfss	status,2,c
  7498  002548  EFA8  F012         	goto	u2551
  7499  00254C  EFAA  F012         	goto	u2550
  7500  002550                     u2551:
  7501  002550  EF5B  F012         	goto	l2701
  7502  002554                     u2550:
  7503  002554  EFB4  F012         	goto	l2721
  7504  002558                     l2717:
  7505  002558  0E00               	movlw	0
  7506  00255A  6E11               	movwf	(atoi@neg+1)^0,c
  7507  00255C  0E01               	movlw	1
  7508  00255E  6E10               	movwf	atoi@neg^0,c
  7509  002560                     l2719:
  7510  002560  4A0A               	infsnz	atoi@s^0,f,c
  7511  002562  2A0B               	incf	(atoi@s+1)^0,f,c
  7512  002564  EFFF  F012         	goto	l2727
  7513  002568                     l2721:
  7514  002568  C00A  FFF6         	movff	atoi@s,tblptrl
  7515  00256C  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7516  002570  6AF8               	clrf	tblptru,c
  7517  002572  0E07               	movlw	(high __ramtop+-1)
  7518  002574  64F7               	cpfsgt	tblptrh,c
  7519  002576  D003               	bra	u2567
  7520  002578  0008               	tblrd		*
  7521  00257A  50F5               	movf	tablat,w,c
  7522  00257C  D005               	bra	u2560
  7523  00257E                     u2567:
  7524  00257E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7525  002582  CFF7 FFE2          	movff	tblptrh,fsr1h
  7526  002586  50E7               	movf	indf1,w,c
  7527  002588                     u2560:
  7528  002588  6E0C               	movwf	??_atoi^0,c
  7529  00258A  6A0D               	clrf	(??_atoi+1)^0,c
  7530                           
  7531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7532                           ; Switch size 1, requested type "simple"
  7533                           ; Number of cases is 1, Range of values is 0 to 0
  7534                           ; switch strategies available:
  7535                           ; Name         Instructions Cycles
  7536                           ; simple_byte            4     3 (average)
  7537                           ;	Chosen strategy is simple_byte
  7538  00258C  500D               	movf	(??_atoi+1)^0,w,c
  7539  00258E  0A00               	xorlw	0	; case 0
  7540  002590  B4D8               	btfsc	status,2,c
  7541  002592  EFCD  F012         	goto	l3885
  7542  002596  EFFF  F012         	goto	l2727
  7543  00259A                     l3885:
  7544                           
  7545                           ; Switch size 1, requested type "simple"
  7546                           ; Number of cases is 2, Range of values is 43 to 45
  7547                           ; switch strategies available:
  7548                           ; Name         Instructions Cycles
  7549                           ; simple_byte            7     4 (average)
  7550                           ;	Chosen strategy is simple_byte
  7551  00259A  500C               	movf	??_atoi^0,w,c
  7552  00259C  0A2B               	xorlw	43	; case 43
  7553  00259E  B4D8               	btfsc	status,2,c
  7554  0025A0  EFB0  F012         	goto	l2719
  7555  0025A4  0A06               	xorlw	6	; case 45
  7556  0025A6  B4D8               	btfsc	status,2,c
  7557  0025A8  EFAC  F012         	goto	l2717
  7558  0025AC  EFFF  F012         	goto	l2727
  7559  0025B0                     l2723:
  7560  0025B0  C017  F003         	movff	atoi@n,___wmul@multiplier
  7561  0025B4  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
  7562  0025B8  0E00               	movlw	0
  7563  0025BA  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  7564  0025BC  0E0A               	movlw	10
  7565  0025BE  6E05               	movwf	___wmul@multiplicand^0,c
  7566  0025C0  EC59  F01D         	call	___wmul	;wreg free
  7567  0025C4  C00A  FFF6         	movff	atoi@s,tblptrl
  7568  0025C8  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7569  0025CC  6AF8               	clrf	tblptru,c
  7570  0025CE  0E07               	movlw	(high __ramtop+-1)
  7571  0025D0  64F7               	cpfsgt	tblptrh,c
  7572  0025D2  D003               	bra	u2577
  7573  0025D4  0008               	tblrd		*
  7574  0025D6  50F5               	movf	tablat,w,c
  7575  0025D8  D005               	bra	u2570
  7576  0025DA                     u2577:
  7577  0025DA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7578  0025DE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7579  0025E2  50E7               	movf	indf1,w,c
  7580  0025E4                     u2570:
  7581  0025E4  6E0C               	movwf	??_atoi^0,c
  7582  0025E6  500C               	movf	??_atoi^0,w,c
  7583  0025E8  5E03               	subwf	?___wmul^0,f,c
  7584  0025EA  0E00               	movlw	0
  7585  0025EC  5A04               	subwfb	(?___wmul+1)^0,f,c
  7586  0025EE  0E30               	movlw	48
  7587  0025F0  2403               	addwf	?___wmul^0,w,c
  7588  0025F2  6E17               	movwf	atoi@n^0,c
  7589  0025F4  0E00               	movlw	0
  7590  0025F6  2004               	addwfc	(?___wmul+1)^0,w,c
  7591  0025F8  6E18               	movwf	(atoi@n+1)^0,c
  7592  0025FA  EFB0  F012         	goto	l2719
  7593  0025FE                     l2727:
  7594  0025FE  0ED0               	movlw	208
  7595  002600  6E0C               	movwf	??_atoi^0,c
  7596  002602  0EFF               	movlw	255
  7597  002604  6E0D               	movwf	(??_atoi+1)^0,c
  7598  002606  C00A  FFF6         	movff	atoi@s,tblptrl
  7599  00260A  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7600  00260E  6AF8               	clrf	tblptru,c
  7601  002610  0E07               	movlw	(high __ramtop+-1)
  7602  002612  64F7               	cpfsgt	tblptrh,c
  7603  002614  D003               	bra	u2587
  7604  002616  0008               	tblrd		*
  7605  002618  50F5               	movf	tablat,w,c
  7606  00261A  D005               	bra	u2580
  7607  00261C                     u2587:
  7608  00261C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7609  002620  CFF7 FFE2          	movff	tblptrh,fsr1h
  7610  002624  50E7               	movf	indf1,w,c
  7611  002626                     u2580:
  7612  002626  6E0E               	movwf	(??_atoi+2)^0,c
  7613  002628  6A0F               	clrf	(??_atoi+3)^0,c
  7614  00262A  500C               	movf	??_atoi^0,w,c
  7615  00262C  260E               	addwf	(??_atoi+2)^0,f,c
  7616  00262E  500D               	movf	(??_atoi+1)^0,w,c
  7617  002630  220F               	addwfc	(??_atoi+3)^0,f,c
  7618  002632  500F               	movf	(??_atoi+3)^0,w,c
  7619  002634  E10A               	bnz	u2590
  7620  002636  0E0A               	movlw	10
  7621  002638  5C0E               	subwf	(??_atoi+2)^0,w,c
  7622  00263A  A0D8               	btfss	status,0,c
  7623  00263C  EF22  F013         	goto	u2591
  7624  002640  EF25  F013         	goto	u2590
  7625  002644                     u2591:
  7626  002644  0E01               	movlw	1
  7627  002646  EF26  F013         	goto	u2600
  7628  00264A                     u2590:
  7629  00264A  0E00               	movlw	0
  7630  00264C                     u2600:
  7631  00264C  6E14               	movwf	_atoi$932^0,c
  7632  00264E  6A15               	clrf	(_atoi$932+1)^0,c
  7633  002650  5014               	movf	_atoi$932^0,w,c
  7634  002652  1015               	iorwf	(_atoi$932+1)^0,w,c
  7635  002654  A4D8               	btfss	status,2,c
  7636  002656  EF2F  F013         	goto	u2611
  7637  00265A  EF31  F013         	goto	u2610
  7638  00265E                     u2611:
  7639  00265E  EFD8  F012         	goto	l2723
  7640  002662                     u2610:
  7641  002662  5010               	movf	atoi@neg^0,w,c
  7642  002664  1011               	iorwf	(atoi@neg+1)^0,w,c
  7643  002666  A4D8               	btfss	status,2,c
  7644  002668  EF38  F013         	goto	u2621
  7645  00266C  EF3A  F013         	goto	u2620
  7646  002670                     u2621:
  7647  002670  EF48  F013         	goto	l855
  7648  002674                     u2620:
  7649  002674  C017  F00C         	movff	atoi@n,??_atoi
  7650  002678  C018  F00D         	movff	atoi@n+1,??_atoi+1
  7651  00267C  1E0C               	comf	??_atoi^0,f,c
  7652  00267E  1E0D               	comf	(??_atoi+1)^0,f,c
  7653  002680  4A0C               	infsnz	??_atoi^0,f,c
  7654  002682  2A0D               	incf	(??_atoi+1)^0,f,c
  7655  002684  C00C  F00A         	movff	??_atoi,?_atoi
  7656  002688  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  7657  00268C  EF4C  F013         	goto	l858
  7658  002690                     l855:
  7659  002690  C017  F00A         	movff	atoi@n,?_atoi
  7660  002694  C018  F00B         	movff	atoi@n+1,?_atoi+1
  7661  002698                     l858:
  7662  002698  0012               	return		;funcret
  7663  00269A                     __end_of_atoi:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _isspace *****************
  7667 ;; Defined at:
  7668 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  c               2    2[COMRAM] int 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  2    2[COMRAM] int 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7682 ;;      Params:         2       0       0       0       0       0       0       0       0
  7683 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7684 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7685 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7686 ;;Total ram usage:        7 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    1
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_atoi
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text27
  7697  003716                     __ptext27:
  7698                           	callstack 0
  7699  003716                     _isspace:
  7700                           	callstack 27
  7701  003716  0E01               	movlw	1
  7702  003718  6E09               	movwf	_isspace$948^0,c
  7703  00371A  0E20               	movlw	32
  7704  00371C  1803               	xorwf	isspace@c^0,w,c
  7705  00371E  1004               	iorwf	(isspace@c+1)^0,w,c
  7706  003720  B4D8               	btfsc	status,2,c
  7707  003722  EF95  F01B         	goto	u2351
  7708  003726  EF97  F01B         	goto	u2350
  7709  00372A                     u2351:
  7710  00372A  EFB0  F01B         	goto	l2647
  7711  00372E                     u2350:
  7712  00372E  0EF7               	movlw	247
  7713  003730  6E05               	movwf	??_isspace^0,c
  7714  003732  0EFF               	movlw	255
  7715  003734  6E06               	movwf	(??_isspace+1)^0,c
  7716  003736  C003  F007         	movff	isspace@c,??_isspace+2
  7717  00373A  C004  F008         	movff	isspace@c+1,??_isspace+3
  7718  00373E  5005               	movf	??_isspace^0,w,c
  7719  003740  2607               	addwf	(??_isspace+2)^0,f,c
  7720  003742  5006               	movf	(??_isspace+1)^0,w,c
  7721  003744  2208               	addwfc	(??_isspace+3)^0,f,c
  7722  003746  5008               	movf	(??_isspace+3)^0,w,c
  7723  003748  E109               	bnz	u2360
  7724  00374A  0E05               	movlw	5
  7725  00374C  5C07               	subwf	(??_isspace+2)^0,w,c
  7726  00374E  A0D8               	btfss	status,0,c
  7727  003750  EFAC  F01B         	goto	u2361
  7728  003754  EFAE  F01B         	goto	u2360
  7729  003758                     u2361:
  7730  003758  EFB0  F01B         	goto	l2647
  7731  00375C                     u2360:
  7732  00375C  0E00               	movlw	0
  7733  00375E  6E09               	movwf	_isspace$948^0,c
  7734  003760                     l2647:
  7735  003760  C009  F003         	movff	_isspace$948,?_isspace
  7736  003764  6A04               	clrf	(?_isspace+1)^0,c
  7737  003766  0012               	return		;funcret
  7738  003768                     __end_of_isspace:
  7739                           	callstack 0
  7740                           
  7741 ;; *************** function _isdigit *****************
  7742 ;; Defined at:
  7743 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  c               2    2[COMRAM] int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  2    2[COMRAM] int 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7757 ;;      Params:         2       0       0       0       0       0       0       0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7759 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7760 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7761 ;;Total ram usage:        6 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_atoi
  7768 ;;		_vfpfcnvrt
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text28
  7773  003A42                     __ptext28:
  7774                           	callstack 0
  7775  003A42                     _isdigit:
  7776                           	callstack 27
  7777  003A42  0ED0               	movlw	208
  7778  003A44  6E05               	movwf	??_isdigit^0,c
  7779  003A46  0EFF               	movlw	255
  7780  003A48  6E06               	movwf	(??_isdigit+1)^0,c
  7781  003A4A  C003  F007         	movff	isdigit@c,??_isdigit+2
  7782  003A4E  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  7783  003A52  5005               	movf	??_isdigit^0,w,c
  7784  003A54  2607               	addwf	(??_isdigit+2)^0,f,c
  7785  003A56  5006               	movf	(??_isdigit+1)^0,w,c
  7786  003A58  2208               	addwfc	(??_isdigit+3)^0,f,c
  7787  003A5A  5008               	movf	(??_isdigit+3)^0,w,c
  7788  003A5C  E10A               	bnz	u2370
  7789  003A5E  0E0A               	movlw	10
  7790  003A60  5C07               	subwf	(??_isdigit+2)^0,w,c
  7791  003A62  A0D8               	btfss	status,0,c
  7792  003A64  EF36  F01D         	goto	u2371
  7793  003A68  EF39  F01D         	goto	u2370
  7794  003A6C                     u2371:
  7795  003A6C  0E01               	movlw	1
  7796  003A6E  EF3A  F01D         	goto	u2380
  7797  003A72                     u2370:
  7798  003A72  0E00               	movlw	0
  7799  003A74                     u2380:
  7800  003A74  6E03               	movwf	?_isdigit^0,c
  7801  003A76  6A04               	clrf	(?_isdigit+1)^0,c
  7802  003A78  0012               	return		;funcret
  7803  003A7A                     __end_of_isdigit:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function ___wmul *****************
  7807 ;; Defined at:
  7808 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;  multiplier      2    2[COMRAM] unsigned int 
  7811 ;;  multiplicand    2    4[COMRAM] unsigned int 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  product         2    6[COMRAM] unsigned int 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  2    2[COMRAM] unsigned int 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, prodl, prodh
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7823 ;;      Params:         4       0       0       0       0       0       0       0       0
  7824 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7826 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7827 ;;Total ram usage:        6 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    1
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_atoi
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text29
  7838  003AB2                     __ptext29:
  7839                           	callstack 0
  7840  003AB2                     ___wmul:
  7841                           	callstack 27
  7842  003AB2  5003               	movf	___wmul@multiplier^0,w,c
  7843  003AB4  0205               	mulwf	___wmul@multiplicand^0,c
  7844  003AB6  CFF3 F007          	movff	prodl,___wmul@product
  7845  003ABA  CFF4 F008          	movff	prodh,___wmul@product+1
  7846  003ABE  5003               	movf	___wmul@multiplier^0,w,c
  7847  003AC0  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  7848  003AC2  50F3               	movf	243,w,c
  7849  003AC4  2608               	addwf	(___wmul@product+1)^0,f,c
  7850  003AC6  5004               	movf	(___wmul@multiplier+1)^0,w,c
  7851  003AC8  0205               	mulwf	___wmul@multiplicand^0,c
  7852  003ACA  50F3               	movf	243,w,c
  7853  003ACC  2608               	addwf	(___wmul@product+1)^0,f,c
  7854  003ACE  C007  F003         	movff	___wmul@product,?___wmul
  7855  003AD2  C008  F004         	movff	___wmul@product+1,?___wmul+1
  7856  003AD6  0012               	return		;funcret
  7857  003AD8                     __end_of___wmul:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _memset *****************
  7861 ;; Defined at:
  7862 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memset.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  dest            2    2[COMRAM] PTR void 
  7865 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  7866 ;;  c               2    4[COMRAM] int 
  7867 ;;  n               2    6[COMRAM] unsigned int 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  s               2   12[COMRAM] PTR unsigned char 
  7870 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  7871 ;;  k               2   10[COMRAM] unsigned int 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  2    2[COMRAM] PTR void 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         6       0       0       0       0       0       0       0       0
  7882 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7884 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:       12 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:    1
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_main
  7892 ;;		_dht_read
  7893 ;;		_get_action
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text30
  7898  002B8E                     __ptext30:
  7899                           	callstack 0
  7900  002B8E                     _memset:
  7901                           	callstack 29
  7902  002B8E  C003  F00D         	movff	memset@dest,memset@s
  7903  002B92  C004  F00E         	movff	memset@dest+1,memset@s+1
  7904  002B96  5007               	movf	memset@n^0,w,c
  7905  002B98  1008               	iorwf	(memset@n+1)^0,w,c
  7906  002B9A  A4D8               	btfss	status,2,c
  7907  002B9C  EFD2  F015         	goto	u3861
  7908  002BA0  EFD4  F015         	goto	u3860
  7909  002BA4                     u3861:
  7910  002BA4  EFD6  F015         	goto	l3427
  7911  002BA8                     u3860:
  7912  002BA8  EF81  F016         	goto	l876
  7913  002BAC                     l3427:
  7914  002BAC  C00D  FFD9         	movff	memset@s,fsr2l
  7915  002BB0  C00E  FFDA         	movff	memset@s+1,fsr2h
  7916  002BB4  C005  FFDF         	movff	memset@c,indf2
  7917  002BB8  5007               	movf	memset@n^0,w,c
  7918  002BBA  240D               	addwf	memset@s^0,w,c
  7919  002BBC  6E09               	movwf	??_memset^0,c
  7920  002BBE  5008               	movf	(memset@n+1)^0,w,c
  7921  002BC0  200E               	addwfc	(memset@s+1)^0,w,c
  7922  002BC2  6E0A               	movwf	(??_memset+1)^0,c
  7923  002BC4  0EFF               	movlw	255
  7924  002BC6  2409               	addwf	??_memset^0,w,c
  7925  002BC8  6ED9               	movwf	fsr2l,c
  7926  002BCA  0EFF               	movlw	255
  7927  002BCC  200A               	addwfc	(??_memset+1)^0,w,c
  7928  002BCE  6EDA               	movwf	fsr2h,c
  7929  002BD0  C005  FFDF         	movff	memset@c,indf2
  7930  002BD4  5008               	movf	(memset@n+1)^0,w,c
  7931  002BD6  E107               	bnz	u3871
  7932  002BD8  0E03               	movlw	3
  7933  002BDA  5C07               	subwf	memset@n^0,w,c
  7934  002BDC  B0D8               	btfsc	status,0,c
  7935  002BDE  EFF3  F015         	goto	u3871
  7936  002BE2  EFF5  F015         	goto	u3870
  7937  002BE6                     u3871:
  7938  002BE6  EFF7  F015         	goto	l3433
  7939  002BEA                     u3870:
  7940  002BEA  EF81  F016         	goto	l876
  7941  002BEE                     l3433:
  7942  002BEE  EE20 F001          	lfsr	2,1
  7943  002BF2  500D               	movf	memset@s^0,w,c
  7944  002BF4  26D9               	addwf	fsr2l,f,c
  7945  002BF6  500E               	movf	(memset@s+1)^0,w,c
  7946  002BF8  22DA               	addwfc	fsr2h,f,c
  7947  002BFA  C005  FFDF         	movff	memset@c,indf2
  7948  002BFE  EE20 F002          	lfsr	2,2
  7949  002C02  500D               	movf	memset@s^0,w,c
  7950  002C04  26D9               	addwf	fsr2l,f,c
  7951  002C06  500E               	movf	(memset@s+1)^0,w,c
  7952  002C08  22DA               	addwfc	fsr2h,f,c
  7953  002C0A  C005  FFDF         	movff	memset@c,indf2
  7954  002C0E  5007               	movf	memset@n^0,w,c
  7955  002C10  240D               	addwf	memset@s^0,w,c
  7956  002C12  6E09               	movwf	??_memset^0,c
  7957  002C14  5008               	movf	(memset@n+1)^0,w,c
  7958  002C16  200E               	addwfc	(memset@s+1)^0,w,c
  7959  002C18  6E0A               	movwf	(??_memset+1)^0,c
  7960  002C1A  0EFE               	movlw	254
  7961  002C1C  2409               	addwf	??_memset^0,w,c
  7962  002C1E  6ED9               	movwf	fsr2l,c
  7963  002C20  0EFF               	movlw	255
  7964  002C22  200A               	addwfc	(??_memset+1)^0,w,c
  7965  002C24  6EDA               	movwf	fsr2h,c
  7966  002C26  C005  FFDF         	movff	memset@c,indf2
  7967  002C2A  5007               	movf	memset@n^0,w,c
  7968  002C2C  240D               	addwf	memset@s^0,w,c
  7969  002C2E  6E09               	movwf	??_memset^0,c
  7970  002C30  5008               	movf	(memset@n+1)^0,w,c
  7971  002C32  200E               	addwfc	(memset@s+1)^0,w,c
  7972  002C34  6E0A               	movwf	(??_memset+1)^0,c
  7973  002C36  0EFD               	movlw	253
  7974  002C38  2409               	addwf	??_memset^0,w,c
  7975  002C3A  6ED9               	movwf	fsr2l,c
  7976  002C3C  0EFF               	movlw	255
  7977  002C3E  200A               	addwfc	(??_memset+1)^0,w,c
  7978  002C40  6EDA               	movwf	fsr2h,c
  7979  002C42  C005  FFDF         	movff	memset@c,indf2
  7980  002C46  5008               	movf	(memset@n+1)^0,w,c
  7981  002C48  E107               	bnz	u3881
  7982  002C4A  0E07               	movlw	7
  7983  002C4C  5C07               	subwf	memset@n^0,w,c
  7984  002C4E  B0D8               	btfsc	status,0,c
  7985  002C50  EF2C  F016         	goto	u3881
  7986  002C54  EF2E  F016         	goto	u3880
  7987  002C58                     u3881:
  7988  002C58  EF30  F016         	goto	l3439
  7989  002C5C                     u3880:
  7990  002C5C  EF81  F016         	goto	l876
  7991  002C60                     l3439:
  7992  002C60  EE20 F003          	lfsr	2,3
  7993  002C64  500D               	movf	memset@s^0,w,c
  7994  002C66  26D9               	addwf	fsr2l,f,c
  7995  002C68  500E               	movf	(memset@s+1)^0,w,c
  7996  002C6A  22DA               	addwfc	fsr2h,f,c
  7997  002C6C  C005  FFDF         	movff	memset@c,indf2
  7998  002C70  5007               	movf	memset@n^0,w,c
  7999  002C72  240D               	addwf	memset@s^0,w,c
  8000  002C74  6E09               	movwf	??_memset^0,c
  8001  002C76  5008               	movf	(memset@n+1)^0,w,c
  8002  002C78  200E               	addwfc	(memset@s+1)^0,w,c
  8003  002C7A  6E0A               	movwf	(??_memset+1)^0,c
  8004  002C7C  0EFC               	movlw	252
  8005  002C7E  2409               	addwf	??_memset^0,w,c
  8006  002C80  6ED9               	movwf	fsr2l,c
  8007  002C82  0EFF               	movlw	255
  8008  002C84  200A               	addwfc	(??_memset+1)^0,w,c
  8009  002C86  6EDA               	movwf	fsr2h,c
  8010  002C88  C005  FFDF         	movff	memset@c,indf2
  8011  002C8C  5008               	movf	(memset@n+1)^0,w,c
  8012  002C8E  E107               	bnz	u3891
  8013  002C90  0E09               	movlw	9
  8014  002C92  5C07               	subwf	memset@n^0,w,c
  8015  002C94  B0D8               	btfsc	status,0,c
  8016  002C96  EF4F  F016         	goto	u3891
  8017  002C9A  EF51  F016         	goto	u3890
  8018  002C9E                     u3891:
  8019  002C9E  EF53  F016         	goto	l3445
  8020  002CA2                     u3890:
  8021  002CA2  EF81  F016         	goto	l876
  8022  002CA6                     l3445:
  8023  002CA6  C00D  F009         	movff	memset@s,??_memset
  8024  002CAA  C00E  F00A         	movff	memset@s+1,??_memset+1
  8025  002CAE  1E09               	comf	??_memset^0,f,c
  8026  002CB0  1E0A               	comf	(??_memset+1)^0,f,c
  8027  002CB2  4A09               	infsnz	??_memset^0,f,c
  8028  002CB4  2A0A               	incf	(??_memset+1)^0,f,c
  8029  002CB6  0E03               	movlw	3
  8030  002CB8  1409               	andwf	??_memset^0,w,c
  8031  002CBA  6E0B               	movwf	memset@k^0,c
  8032  002CBC  6A0C               	clrf	(memset@k+1)^0,c
  8033  002CBE  500B               	movf	memset@k^0,w,c
  8034  002CC0  260D               	addwf	memset@s^0,f,c
  8035  002CC2  500C               	movf	(memset@k+1)^0,w,c
  8036  002CC4  220E               	addwfc	(memset@s+1)^0,f,c
  8037  002CC6  500B               	movf	memset@k^0,w,c
  8038  002CC8  5E07               	subwf	memset@n^0,f,c
  8039  002CCA  500C               	movf	(memset@k+1)^0,w,c
  8040  002CCC  5A08               	subwfb	(memset@n+1)^0,f,c
  8041  002CCE  0EFC               	movlw	252
  8042  002CD0  1607               	andwf	memset@n^0,f,c
  8043  002CD2  0EFF               	movlw	255
  8044  002CD4  1608               	andwf	(memset@n+1)^0,f,c
  8045  002CD6  EF78  F016         	goto	l3453
  8046  002CDA                     l3447:
  8047  002CDA  C00D  FFD9         	movff	memset@s,fsr2l
  8048  002CDE  C00E  FFDA         	movff	memset@s+1,fsr2h
  8049  002CE2  C005  FFDF         	movff	memset@c,indf2
  8050  002CE6  0607               	decf	memset@n^0,f,c
  8051  002CE8  A0D8               	btfss	status,0,c
  8052  002CEA  0608               	decf	(memset@n+1)^0,f,c
  8053  002CEC  4A0D               	infsnz	memset@s^0,f,c
  8054  002CEE  2A0E               	incf	(memset@s+1)^0,f,c
  8055  002CF0                     l3453:
  8056  002CF0  5007               	movf	memset@n^0,w,c
  8057  002CF2  1008               	iorwf	(memset@n+1)^0,w,c
  8058  002CF4  A4D8               	btfss	status,2,c
  8059  002CF6  EF7F  F016         	goto	u3901
  8060  002CFA  EF81  F016         	goto	u3900
  8061  002CFE                     u3901:
  8062  002CFE  EF6D  F016         	goto	l3447
  8063  002D02                     u3900:
  8064  002D02                     l876:
  8065  002D02  0012               	return		;funcret
  8066  002D04                     __end_of_memset:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function _dht_read_bit *****************
  8070 ;; Defined at:
  8071 ;;		line 196 in file "main.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  2    2[COMRAM] int 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8085 ;;      Params:         2       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        2 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    1
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_dht_read
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text31
  8100  00384E                     __ptext31:
  8101                           	callstack 0
  8102  00384E                     _dht_read_bit:
  8103                           	callstack 28
  8104  00384E                     l111:
  8105  00384E  A483               	btfss	131,2,c	;volatile
  8106  003850  EF2C  F01C         	goto	u3911
  8107  003854  EF2E  F01C         	goto	u3910
  8108  003858                     u3911:
  8109  003858  EF27  F01C         	goto	l111
  8110  00385C                     u3910:
  8111  00385C                     
  8112                           ;main.c: 198:     _delay((unsigned long)((30)*(16000000/4000000.0)));
  8113  00385C  0E28               	movlw	40
  8114  00385E                     u4157:
  8115  00385E  2EE8               	decfsz	wreg,f,c
  8116  003860  D7FE               	bra	u4157
  8117  003862                     
  8118                           ;main.c: 200:     if (PORTDbits.RD2 == 1) {
  8119  003862  A483               	btfss	131,2,c	;volatile
  8120  003864  EF36  F01C         	goto	u3921
  8121  003868  EF38  F01C         	goto	u3920
  8122  00386C                     u3921:
  8123  00386C  EF45  F01C         	goto	l3469
  8124  003870                     u3920:
  8125  003870                     l115:
  8126  003870  B483               	btfsc	131,2,c	;volatile
  8127  003872  EF3D  F01C         	goto	u3931
  8128  003876  EF3F  F01C         	goto	u3930
  8129  00387A                     u3931:
  8130  00387A  EF38  F01C         	goto	l115
  8131  00387E                     u3930:
  8132  00387E                     
  8133                           ;main.c: 202:         return 1;
  8134  00387E  0E00               	movlw	0
  8135  003880  6E04               	movwf	(?_dht_read_bit+1)^0,c
  8136  003882  0E01               	movlw	1
  8137  003884  6E03               	movwf	?_dht_read_bit^0,c
  8138  003886  EF49  F01C         	goto	l118
  8139  00388A                     l3469:
  8140                           
  8141                           ;main.c: 204:         return 0;
  8142  00388A  0E00               	movlw	0
  8143  00388C  6E04               	movwf	(?_dht_read_bit+1)^0,c
  8144  00388E  0E00               	movlw	0
  8145  003890  6E03               	movwf	?_dht_read_bit^0,c
  8146  003892                     l118:
  8147  003892  0012               	return		;funcret
  8148  003894                     __end_of_dht_read_bit:
  8149                           	callstack 0
  8150                           
  8151 ;; *************** function _USART_SendString *****************
  8152 ;; Defined at:
  8153 ;;		line 276 in file "main.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  data            2    6[COMRAM] PTR unsigned char 
  8156 ;;		 -> data_out(50), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  index           1   10[COMRAM] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8168 ;;      Params:         2       0       0       0       0       0       0       0       0
  8169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8170 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8171 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8172 ;;Total ram usage:        5 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    2
  8175 ;; This function calls:
  8176 ;;		_USART_SendChar
  8177 ;;		_strlen
  8178 ;; This function is called by:
  8179 ;;		_dht_read
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text32
  8184  003894                     __ptext32:
  8185                           	callstack 0
  8186  003894                     _USART_SendString:
  8187                           	callstack 27
  8188  003894                     
  8189                           ;main.c: 277:     for (uint8_t index = 0; index < strlen(data); index++) {
  8190  003894  0E00               	movlw	0
  8191  003896  6E0B               	movwf	USART_SendString@index^0,c
  8192  003898  EF58  F01C         	goto	l3491
  8193  00389C                     l3487:
  8194                           
  8195                           ;main.c: 278:         USART_SendChar(data[index]);
  8196  00389C  500B               	movf	USART_SendString@index^0,w,c
  8197  00389E  2407               	addwf	USART_SendString@data^0,w,c
  8198  0038A0  6ED9               	movwf	fsr2l,c
  8199  0038A2  0E00               	movlw	0
  8200  0038A4  2008               	addwfc	(USART_SendString@data+1)^0,w,c
  8201  0038A6  6EDA               	movwf	fsr2h,c
  8202  0038A8  50DF               	movf	indf2,w,c
  8203  0038AA  EC79  F01D         	call	_USART_SendChar
  8204  0038AE                     
  8205                           ;main.c: 279:     }
  8206  0038AE  2A0B               	incf	USART_SendString@index^0,f,c
  8207  0038B0                     l3491:
  8208  0038B0  C007  F003         	movff	USART_SendString@data,strlen@s
  8209  0038B4  C008  F004         	movff	USART_SendString@data+1,strlen@s+1
  8210  0038B8  ECB4  F01B         	call	_strlen	;wreg free
  8211  0038BC  500B               	movf	USART_SendString@index^0,w,c
  8212  0038BE  6E09               	movwf	??_USART_SendString^0,c
  8213  0038C0  6A0A               	clrf	(??_USART_SendString+1)^0,c
  8214  0038C2  5003               	movf	?_strlen^0,w,c
  8215  0038C4  5C09               	subwf	??_USART_SendString^0,w,c
  8216  0038C6  5004               	movf	(?_strlen+1)^0,w,c
  8217  0038C8  580A               	subwfb	(??_USART_SendString+1)^0,w,c
  8218  0038CA  A0D8               	btfss	status,0,c
  8219  0038CC  EF6A  F01C         	goto	u3941
  8220  0038D0  EF6C  F01C         	goto	u3940
  8221  0038D4                     u3941:
  8222  0038D4  EF4E  F01C         	goto	l3487
  8223  0038D8                     u3940:
  8224  0038D8  0012               	return		;funcret
  8225  0038DA                     __end_of_USART_SendString:
  8226                           	callstack 0
  8227                           
  8228 ;; *************** function _USART_SendChar *****************
  8229 ;; Defined at:
  8230 ;;		line 271 in file "main.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  data            1    wreg     unsigned char 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;  data            1    2[COMRAM] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0
  8245 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8247 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8248 ;;Total ram usage:        1 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    1
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_USART_SendString
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text33
  8259  003AF2                     __ptext33:
  8260                           	callstack 0
  8261  003AF2                     _USART_SendChar:
  8262                           	callstack 27
  8263                           
  8264                           ;incstack = 0
  8265                           ;USART_SendChar@data stored from wreg
  8266  003AF2  6E03               	movwf	USART_SendChar@data^0,c
  8267  003AF4                     l144:
  8268  003AF4  A89E               	btfss	3998,4,c	;volatile
  8269  003AF6  EF7F  F01D         	goto	u3841
  8270  003AFA  EF81  F01D         	goto	u3840
  8271  003AFE                     u3841:
  8272  003AFE  EF7A  F01D         	goto	l144
  8273  003B02                     u3840:
  8274  003B02                     
  8275                           ;main.c: 273:     TXREG = data;
  8276  003B02  C003  FFAD         	movff	USART_SendChar@data,4013	;volatile
  8277  003B06  0012               	return		;funcret
  8278  003B08                     __end_of_USART_SendChar:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _data_received *****************
  8282 ;; Defined at:
  8283 ;;		line 208 in file "main.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  8288 ;;		 -> NULL(0), data_in(512), 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      _Bool 
  8291 ;; Registers used:
  8292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0
  8299 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8301 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8302 ;;Total ram usage:        2 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    3
  8305 ;; This function calls:
  8306 ;;		_strstr
  8307 ;; This function is called by:
  8308 ;;		_main
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text34
  8313  003A7A                     __ptext34:
  8314                           	callstack 0
  8315  003A7A                     _data_received:
  8316                           	callstack 27
  8317  003A7A                     
  8318                           ;main.c: 209:     char * ptr = strstr(data_in, END_CMD);
  8319  003A7A  0E50               	movlw	low _data_in
  8320  003A7C  6E0E               	movwf	strstr@h^0,c
  8321  003A7E  0E01               	movlw	high _data_in
  8322  003A80  6E0F               	movwf	(strstr@h+1)^0,c
  8323  003A82  0E18               	movlw	low (STR_2+9)
  8324  003A84  6E10               	movwf	strstr@n^0,c
  8325  003A86  0E08               	movlw	high (STR_2+9)
  8326  003A88  6E11               	movwf	(strstr@n+1)^0,c
  8327  003A8A  ECD2  F019         	call	_strstr	;wreg free
  8328  003A8E  C00E  F014         	movff	?_strstr,data_received@ptr
  8329  003A92  C00F  F015         	movff	?_strstr+1,data_received@ptr+1
  8330  003A96                     
  8331                           ;main.c: 211:     if (ptr != ((void*)0)) {
  8332  003A96  5014               	movf	data_received@ptr^0,w,c
  8333  003A98  1015               	iorwf	(data_received@ptr+1)^0,w,c
  8334  003A9A  B4D8               	btfsc	status,2,c
  8335  003A9C  EF52  F01D         	goto	u4041
  8336  003AA0  EF54  F01D         	goto	u4040
  8337  003AA4                     u4041:
  8338  003AA4  EF57  F01D         	goto	l3605
  8339  003AA8                     u4040:
  8340  003AA8                     
  8341                           ;main.c: 212:         return 1;
  8342  003AA8  0E01               	movlw	1
  8343  003AAA  EF58  F01D         	goto	l123
  8344  003AAE                     l3605:
  8345                           
  8346                           ;main.c: 215:     return 0;
  8347  003AAE  0E00               	movlw	0
  8348  003AB0                     l123:
  8349  003AB0  0012               	return		;funcret
  8350  003AB2                     __end_of_data_received:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function _strstr *****************
  8354 ;; Defined at:
  8355 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strstr.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  h               2   13[COMRAM] PTR const unsigned char 
  8358 ;;		 -> NULL(0), data_in(512), 
  8359 ;;  n               2   15[COMRAM] PTR const unsigned char 
  8360 ;;		 -> STR_5(2), STR_4(4), STR_3(8), 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  nl              2   17[COMRAM] unsigned int 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  2   13[COMRAM] PTR unsigned char 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8372 ;;      Params:         4       0       0       0       0       0       0       0       0
  8373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8375 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8376 ;;Total ram usage:        6 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    2
  8379 ;; This function calls:
  8380 ;;		_strchr
  8381 ;;		_strlen
  8382 ;;		_strncmp
  8383 ;; This function is called by:
  8384 ;;		_data_received
  8385 ;;		_get_action
  8386 ;;		_is_command
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text35
  8391  0033A4                     __ptext35:
  8392                           	callstack 0
  8393  0033A4                     _strstr:
  8394                           	callstack 27
  8395  0033A4  5010               	movf	strstr@n^0,w,c
  8396  0033A6  1011               	iorwf	(strstr@n+1)^0,w,c
  8397  0033A8  B4D8               	btfsc	status,2,c
  8398  0033AA  EFD9  F019         	goto	u3801
  8399  0033AE  EFDB  F019         	goto	u3800
  8400  0033B2                     u3801:
  8401  0033B2  EF2D  F01A         	goto	l3407
  8402  0033B6                     u3800:
  8403  0033B6  C010  F003         	movff	strstr@n,strlen@s
  8404  0033BA  C011  F004         	movff	strstr@n+1,strlen@s+1
  8405  0033BE  ECB4  F01B         	call	_strlen	;wreg free
  8406  0033C2  C003  F012         	movff	?_strlen,strstr@nl
  8407  0033C6  C004  F013         	movff	?_strlen+1,strstr@nl+1
  8408  0033CA  EF18  F01A         	goto	l3403
  8409  0033CE                     l3395:
  8410  0033CE  C00E  F003         	movff	strstr@h,strncmp@_l
  8411  0033D2  C00F  F004         	movff	strstr@h+1,strncmp@_l+1
  8412  0033D6  C010  F005         	movff	strstr@n,strncmp@_r
  8413  0033DA  C011  F006         	movff	strstr@n+1,strncmp@_r+1
  8414  0033DE  C012  F007         	movff	strstr@nl,strncmp@n
  8415  0033E2  C013  F008         	movff	strstr@nl+1,strncmp@n+1
  8416  0033E6  EC34  F017         	call	_strncmp	;wreg free
  8417  0033EA  5003               	movf	?_strncmp^0,w,c
  8418  0033EC  1004               	iorwf	(?_strncmp+1)^0,w,c
  8419  0033EE  A4D8               	btfss	status,2,c
  8420  0033F0  EFFC  F019         	goto	u3811
  8421  0033F4  EFFE  F019         	goto	u3810
  8422  0033F8                     u3811:
  8423  0033F8  EF04  F01A         	goto	l3401
  8424  0033FC                     u3810:
  8425  0033FC  C00E  F00E         	movff	strstr@h,?_strstr
  8426  003400  C00F  F00F         	movff	strstr@h+1,?_strstr+1
  8427  003404  EF31  F01A         	goto	l1211
  8428  003408                     l3401:
  8429  003408  0E01               	movlw	1
  8430  00340A  240E               	addwf	strstr@h^0,w,c
  8431  00340C  6E03               	movwf	strchr@s^0,c
  8432  00340E  0E00               	movlw	0
  8433  003410  200F               	addwfc	(strstr@h+1)^0,w,c
  8434  003412  6E04               	movwf	(strchr@s+1)^0,c
  8435  003414  C010  FFF6         	movff	strstr@n,tblptrl
  8436  003418  C011  FFF7         	movff	strstr@n+1,tblptrh
  8437  00341C                     	if	0	;tblptru may be non-zero
  8438  00341C                     	endif
  8439  00341C                     	if	0	;tblptru may be non-zero
  8440  00341C                     	endif
  8441  00341C  0008               	tblrd		*
  8442  00341E  50F5               	movf	tablat,w,c
  8443  003420  6E05               	movwf	strchr@c^0,c
  8444  003422  6A06               	clrf	(strchr@c+1)^0,c
  8445  003424  ECDB  F01B         	call	_strchr	;wreg free
  8446  003428  C003  F00E         	movff	?_strchr,strstr@h
  8447  00342C  C004  F00F         	movff	?_strchr+1,strstr@h+1
  8448  003430                     l3403:
  8449  003430  500E               	movf	strstr@h^0,w,c
  8450  003432  100F               	iorwf	(strstr@h+1)^0,w,c
  8451  003434  B4D8               	btfsc	status,2,c
  8452  003436  EF1F  F01A         	goto	u3821
  8453  00343A  EF21  F01A         	goto	u3820
  8454  00343E                     u3821:
  8455  00343E  EF2D  F01A         	goto	l3407
  8456  003442                     u3820:
  8457  003442  C00E  FFD9         	movff	strstr@h,fsr2l
  8458  003446  C00F  FFDA         	movff	strstr@h+1,fsr2h
  8459  00344A  50DF               	movf	indf2,w,c
  8460  00344C  A4D8               	btfss	status,2,c
  8461  00344E  EF2B  F01A         	goto	u3831
  8462  003452  EF2D  F01A         	goto	u3830
  8463  003456                     u3831:
  8464  003456  EFE7  F019         	goto	l3395
  8465  00345A                     u3830:
  8466  00345A                     l3407:
  8467  00345A  0E00               	movlw	0
  8468  00345C  6E0E               	movwf	?_strstr^0,c
  8469  00345E  0E00               	movlw	0
  8470  003460  6E0F               	movwf	(?_strstr+1)^0,c
  8471  003462                     l1211:
  8472  003462  0012               	return		;funcret
  8473  003464                     __end_of_strstr:
  8474                           	callstack 0
  8475                           
  8476 ;; *************** function _strncmp *****************
  8477 ;; Defined at:
  8478 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  8481 ;;		 -> NULL(0), data_in(512), STR_2(13), STR_1(14), 
  8482 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  8483 ;;		 -> STR_102(3), STR_98(3), STR_93(3), STR_89(3), 
  8484 ;;		 -> STR_84(4), STR_80(4), STR_75(3), STR_70(3), 
  8485 ;;		 -> STR_65(4), STR_60(3), STR_55(3), STR_50(4), 
  8486 ;;		 -> STR_45(3), STR_40(3), STR_35(4), STR_30(3), 
  8487 ;;		 -> STR_26(3), STR_21(3), STR_17(3), STR_12(4), 
  8488 ;;		 -> STR_8(4), STR_5(2), STR_4(4), STR_3(8), 
  8489 ;;  n               2    6[COMRAM] unsigned int 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  r               2   11[COMRAM] PTR const unsigned char 
  8492 ;;		 -> STR_102(3), STR_98(3), STR_93(3), STR_89(3), 
  8493 ;;		 -> STR_84(4), STR_80(4), STR_75(3), STR_70(3), 
  8494 ;;		 -> STR_65(4), STR_60(3), STR_55(3), STR_50(4), 
  8495 ;;		 -> STR_45(3), STR_40(3), STR_35(4), STR_30(3), 
  8496 ;;		 -> STR_26(3), STR_21(3), STR_17(3), STR_12(4), 
  8497 ;;		 -> STR_8(4), STR_5(2), STR_4(4), STR_3(8), 
  8498 ;;  l               2    9[COMRAM] PTR const unsigned char 
  8499 ;;		 -> NULL(0), data_in(512), STR_2(13), STR_1(14), 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  2    2[COMRAM] int 
  8502 ;; Registers used:
  8503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8509 ;;      Params:         6       0       0       0       0       0       0       0       0
  8510 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8512 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8513 ;;Total ram usage:       11 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_vfpfcnvrt
  8520 ;;		_strstr
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text36
  8525  002E68                     __ptext36:
  8526                           	callstack 0
  8527  002E68                     _strncmp:
  8528                           	callstack 27
  8529  002E68  C003  F00A         	movff	strncmp@_l,strncmp@l
  8530  002E6C  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  8531  002E70  C005  F00C         	movff	strncmp@_r,strncmp@r
  8532  002E74  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  8533  002E78  0607               	decf	strncmp@n^0,f,c
  8534  002E7A  A0D8               	btfss	status,0,c
  8535  002E7C  0608               	decf	(strncmp@n+1)^0,f,c
  8536  002E7E  2807               	incf	strncmp@n^0,w,c
  8537  002E80  E106               	bnz	u3261
  8538  002E82  2808               	incf	(strncmp@n+1)^0,w,c
  8539  002E84  A4D8               	btfss	status,2,c
  8540  002E86  EF47  F017         	goto	u3261
  8541  002E8A  EF49  F017         	goto	u3260
  8542  002E8E                     u3261:
  8543  002E8E  EF56  F017         	goto	l3031
  8544  002E92                     u3260:
  8545  002E92  0E00               	movlw	0
  8546  002E94  6E04               	movwf	(?_strncmp+1)^0,c
  8547  002E96  0E00               	movlw	0
  8548  002E98  6E03               	movwf	?_strncmp^0,c
  8549  002E9A  EFC0  F017         	goto	l1193
  8550  002E9E                     l3029:
  8551  002E9E  4A0A               	infsnz	strncmp@l^0,f,c
  8552  002EA0  2A0B               	incf	(strncmp@l+1)^0,f,c
  8553  002EA2  4A0C               	infsnz	strncmp@r^0,f,c
  8554  002EA4  2A0D               	incf	(strncmp@r+1)^0,f,c
  8555  002EA6  0607               	decf	strncmp@n^0,f,c
  8556  002EA8  A0D8               	btfss	status,0,c
  8557  002EAA  0608               	decf	(strncmp@n+1)^0,f,c
  8558  002EAC                     l3031:
  8559  002EAC  C00A  FFF6         	movff	strncmp@l,tblptrl
  8560  002EB0  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8561  002EB4  6AF8               	clrf	tblptru,c
  8562  002EB6  0E07               	movlw	(high __ramtop+-1)
  8563  002EB8  64F7               	cpfsgt	tblptrh,c
  8564  002EBA  D003               	bra	u3277
  8565  002EBC  0008               	tblrd		*
  8566  002EBE  50F5               	movf	tablat,w,c
  8567  002EC0  D005               	bra	u3270
  8568  002EC2                     u3277:
  8569  002EC2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8570  002EC6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8571  002ECA  50E7               	movf	indf1,w,c
  8572  002ECC                     u3270:
  8573  002ECC  0900               	iorlw	0
  8574  002ECE  B4D8               	btfsc	status,2,c
  8575  002ED0  EF6C  F017         	goto	u3281
  8576  002ED4  EF6E  F017         	goto	u3280
  8577  002ED8                     u3281:
  8578  002ED8  EFA4  F017         	goto	l3039
  8579  002EDC                     u3280:
  8580  002EDC  C00C  FFF6         	movff	strncmp@r,tblptrl
  8581  002EE0  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8582  002EE4                     	if	0	;tblptru may be non-zero
  8583  002EE4                     	endif
  8584  002EE4                     	if	0	;tblptru may be non-zero
  8585  002EE4                     	endif
  8586  002EE4  0008               	tblrd		*
  8587  002EE6  50F5               	movf	tablat,w,c
  8588  002EE8  0900               	iorlw	0
  8589  002EEA  B4D8               	btfsc	status,2,c
  8590  002EEC  EF7A  F017         	goto	u3291
  8591  002EF0  EF7C  F017         	goto	u3290
  8592  002EF4                     u3291:
  8593  002EF4  EFA4  F017         	goto	l3039
  8594  002EF8                     u3290:
  8595  002EF8  5007               	movf	strncmp@n^0,w,c
  8596  002EFA  1008               	iorwf	(strncmp@n+1)^0,w,c
  8597  002EFC  B4D8               	btfsc	status,2,c
  8598  002EFE  EF83  F017         	goto	u3301
  8599  002F02  EF85  F017         	goto	u3300
  8600  002F06                     u3301:
  8601  002F06  EFA4  F017         	goto	l3039
  8602  002F0A                     u3300:
  8603  002F0A  C00C  FFF6         	movff	strncmp@r,tblptrl
  8604  002F0E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8605  002F12                     	if	0	;tblptru may be non-zero
  8606  002F12                     	endif
  8607  002F12                     	if	0	;tblptru may be non-zero
  8608  002F12                     	endif
  8609  002F12  0008               	tblrd		*
  8610  002F14  CFF5 F009          	movff	tablat,??_strncmp
  8611  002F18  C00A  FFF6         	movff	strncmp@l,tblptrl
  8612  002F1C  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8613  002F20  6AF8               	clrf	tblptru,c
  8614  002F22  0E07               	movlw	(high __ramtop+-1)
  8615  002F24  64F7               	cpfsgt	tblptrh,c
  8616  002F26  D003               	bra	u3317
  8617  002F28  0008               	tblrd		*
  8618  002F2A  50F5               	movf	tablat,w,c
  8619  002F2C  D005               	bra	u3315
  8620  002F2E                     u3317:
  8621  002F2E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8622  002F32  CFF7 FFE2          	movff	tblptrh,fsr1h
  8623  002F36  50E7               	movf	indf1,w,c
  8624  002F38                     u3315:
  8625  002F38  1809               	xorwf	??_strncmp^0,w,c
  8626  002F3A  B4D8               	btfsc	status,2,c
  8627  002F3C  EFA2  F017         	goto	u3311
  8628  002F40  EFA4  F017         	goto	u3310
  8629  002F44                     u3311:
  8630  002F44  EF4F  F017         	goto	l3029
  8631  002F48                     u3310:
  8632  002F48                     l3039:
  8633  002F48  C00A  FFF6         	movff	strncmp@l,tblptrl
  8634  002F4C  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8635  002F50  6AF8               	clrf	tblptru,c
  8636  002F52  0E07               	movlw	(high __ramtop+-1)
  8637  002F54  64F7               	cpfsgt	tblptrh,c
  8638  002F56  D003               	bra	u3327
  8639  002F58  0008               	tblrd		*
  8640  002F5A  50F5               	movf	tablat,w,c
  8641  002F5C  D005               	bra	u3320
  8642  002F5E                     u3327:
  8643  002F5E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8644  002F62  CFF7 FFE2          	movff	tblptrh,fsr1h
  8645  002F66  50E7               	movf	indf1,w,c
  8646  002F68                     u3320:
  8647  002F68  6E09               	movwf	??_strncmp^0,c
  8648  002F6A  C00C  FFF6         	movff	strncmp@r,tblptrl
  8649  002F6E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8650  002F72                     	if	0	;tblptru may be non-zero
  8651  002F72                     	endif
  8652  002F72                     	if	0	;tblptru may be non-zero
  8653  002F72                     	endif
  8654  002F72  0008               	tblrd		*
  8655  002F74  50F5               	movf	tablat,w,c
  8656  002F76  5C09               	subwf	??_strncmp^0,w,c
  8657  002F78  6E03               	movwf	?_strncmp^0,c
  8658  002F7A  6A04               	clrf	(?_strncmp+1)^0,c
  8659  002F7C  A0D8               	btfss	status,0,c
  8660  002F7E  0604               	decf	(?_strncmp+1)^0,f,c
  8661  002F80                     l1193:
  8662  002F80  0012               	return		;funcret
  8663  002F82                     __end_of_strncmp:
  8664                           	callstack 0
  8665                           
  8666 ;; *************** function _strlen *****************
  8667 ;; Defined at:
  8668 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  s               2    2[COMRAM] PTR const unsigned char 
  8671 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), STR_5(2), 
  8672 ;;		 -> data_out(50), STR_4(4), STR_3(8), 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  a               2    4[COMRAM] PTR const unsigned char 
  8675 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), STR_5(2), 
  8676 ;;		 -> data_out(50), STR_4(4), STR_3(8), 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  2    2[COMRAM] unsigned int 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8686 ;;      Params:         2       0       0       0       0       0       0       0       0
  8687 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8689 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8690 ;;Total ram usage:        4 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_USART_SendString
  8697 ;;		_pad
  8698 ;;		_stoa
  8699 ;;		_strstr
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text37
  8704  003768                     __ptext37:
  8705                           	callstack 0
  8706  003768                     _strlen:
  8707                           	callstack 27
  8708  003768  C003  F005         	movff	strlen@s,strlen@a
  8709  00376C  C004  F006         	movff	strlen@s+1,strlen@a+1
  8710  003770  EFBC  F01B         	goto	l2497
  8711  003774                     l2495:
  8712  003774  4A03               	infsnz	strlen@s^0,f,c
  8713  003776  2A04               	incf	(strlen@s+1)^0,f,c
  8714  003778                     l2497:
  8715  003778  C003  FFF6         	movff	strlen@s,tblptrl
  8716  00377C  C004  FFF7         	movff	strlen@s+1,tblptrh
  8717  003780  6AF8               	clrf	tblptru,c
  8718  003782  0E07               	movlw	(high __ramtop+-1)
  8719  003784  64F7               	cpfsgt	tblptrh,c
  8720  003786  D003               	bra	u2107
  8721  003788  0008               	tblrd		*
  8722  00378A  50F5               	movf	tablat,w,c
  8723  00378C  D005               	bra	u2100
  8724  00378E                     u2107:
  8725  00378E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8726  003792  CFF7 FFE2          	movff	tblptrh,fsr1h
  8727  003796  50E7               	movf	indf1,w,c
  8728  003798                     u2100:
  8729  003798  0900               	iorlw	0
  8730  00379A  A4D8               	btfss	status,2,c
  8731  00379C  EFD2  F01B         	goto	u2111
  8732  0037A0  EFD4  F01B         	goto	u2110
  8733  0037A4                     u2111:
  8734  0037A4  EFBA  F01B         	goto	l2495
  8735  0037A8                     u2110:
  8736  0037A8  5005               	movf	strlen@a^0,w,c
  8737  0037AA  5C03               	subwf	strlen@s^0,w,c
  8738  0037AC  6E03               	movwf	?_strlen^0,c
  8739  0037AE  5006               	movf	(strlen@a+1)^0,w,c
  8740  0037B0  5804               	subwfb	(strlen@s+1)^0,w,c
  8741  0037B2  6E04               	movwf	(?_strlen+1)^0,c
  8742  0037B4  0012               	return		;funcret
  8743  0037B6                     __end_of_strlen:
  8744                           	callstack 0
  8745                           
  8746 ;; *************** function _strchr *****************
  8747 ;; Defined at:
  8748 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strchr.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  s               2    2[COMRAM] PTR const unsigned char 
  8751 ;;		 -> NULL(0), data_in(512), 
  8752 ;;  c               2    4[COMRAM] int 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  2    2[COMRAM] PTR unsigned char 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8764 ;;      Params:         4       0       0       0       0       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8766 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8767 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8768 ;;Total ram usage:        5 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:    1
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_strstr
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text38
  8779  0037B6                     __ptext38:
  8780                           	callstack 0
  8781  0037B6                     _strchr:
  8782                           	callstack 27
  8783  0037B6                     l1217:
  8784  0037B6  C003  FFD9         	movff	strchr@s,fsr2l
  8785  0037BA  C004  FFDA         	movff	strchr@s+1,fsr2h
  8786  0037BE  5005               	movf	strchr@c^0,w,c
  8787  0037C0  18DE               	xorwf	postinc2,w,c
  8788  0037C2  A4D8               	btfss	status,2,c
  8789  0037C4  EFE6  F01B         	goto	u3781
  8790  0037C8  EFE8  F01B         	goto	u3780
  8791  0037CC                     u3781:
  8792  0037CC  EFEE  F01B         	goto	l3385
  8793  0037D0                     u3780:
  8794  0037D0  C003  F003         	movff	strchr@s,?_strchr
  8795  0037D4  C004  F004         	movff	strchr@s+1,?_strchr+1
  8796  0037D8  EF00  F01C         	goto	l1219
  8797  0037DC                     l3385:
  8798  0037DC  C003  FFD9         	movff	strchr@s,fsr2l
  8799  0037E0  C004  FFDA         	movff	strchr@s+1,fsr2h
  8800  0037E4  4A03               	infsnz	strchr@s^0,f,c
  8801  0037E6  2A04               	incf	(strchr@s+1)^0,f,c
  8802  0037E8  50DF               	movf	indf2,w,c
  8803  0037EA  A4D8               	btfss	status,2,c
  8804  0037EC  EFFA  F01B         	goto	u3791
  8805  0037F0  EFFC  F01B         	goto	u3790
  8806  0037F4                     u3791:
  8807  0037F4  EFDB  F01B         	goto	l1217
  8808  0037F8                     u3790:
  8809  0037F8  0E00               	movlw	0
  8810  0037FA  6E03               	movwf	?_strchr^0,c
  8811  0037FC  0E00               	movlw	0
  8812  0037FE  6E04               	movwf	(?_strchr+1)^0,c
  8813  003800                     l1219:
  8814  003800  0012               	return		;funcret
  8815  003802                     __end_of_strchr:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function _USART_Init *****************
  8819 ;; Defined at:
  8820 ;;		line 243 in file "main.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_main
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text39
  8849  003AD8                     __ptext39:
  8850                           	callstack 0
  8851  003AD8                     _USART_Init:
  8852                           	callstack 29
  8853  003AD8                     
  8854                           ;main.c: 244:     TRISC6=1;
  8855  003AD8  8C94               	bsf	3988,6,c	;volatile
  8856                           
  8857                           ;main.c: 245:     TRISC7=1;
  8858  003ADA  8E94               	bsf	3988,7,c	;volatile
  8859  003ADC                     
  8860                           ;main.c: 246:     SPBRG = 25;
  8861  003ADC  0E19               	movlw	25
  8862  003ADE  6EAF               	movwf	175,c	;volatile
  8863  003AE0                     
  8864                           ;main.c: 247:     TXSTAbits.CSRC = 1;
  8865  003AE0  8EAC               	bsf	172,7,c	;volatile
  8866  003AE2                     
  8867                           ;main.c: 248:     TXSTAbits.TXEN = 1;
  8868  003AE2  8AAC               	bsf	172,5,c	;volatile
  8869  003AE4                     
  8870                           ;main.c: 249:     RCSTAbits.CREN = 1;
  8871  003AE4  88AB               	bsf	171,4,c	;volatile
  8872  003AE6                     
  8873                           ;main.c: 250:     RCSTAbits.SPEN = 1;
  8874  003AE6  8EAB               	bsf	171,7,c	;volatile
  8875  003AE8                     
  8876                           ;main.c: 252:     INTCONbits.GIE = 1;
  8877  003AE8  8EF2               	bsf	242,7,c	;volatile
  8878  003AEA                     
  8879                           ;main.c: 253:     INTCONbits.PEIE = 1;
  8880  003AEA  8CF2               	bsf	242,6,c	;volatile
  8881  003AEC                     
  8882                           ;main.c: 254:     PIE1bits.RCIE = 1;
  8883  003AEC  8A9D               	bsf	157,5,c	;volatile
  8884  003AEE                     
  8885                           ;main.c: 255:     PIE1bits.TXIE = 0;
  8886  003AEE  989D               	bcf	157,4,c	;volatile
  8887  003AF0  0012               	return		;funcret
  8888  003AF2                     __end_of_USART_Init:
  8889                           	callstack 0
  8890                           
  8891 ;; *************** function _isr *****************
  8892 ;; Defined at:
  8893 ;;		line 258 in file "main.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;		None
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8909 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8910 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8911 ;;Total ram usage:        2 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		Interrupt level 2
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	intcode
  8921  000008                     __pintcode:
  8922                           	callstack 0
  8923  000008                     _isr:
  8924                           	callstack 21
  8925                           
  8926                           ;incstack = 0
  8927  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8928  00000A  ED01  F01C         	call	int_func,f	;refresh shadow registers
  8929                           
  8930                           	psect	intcode_body
  8931  003802                     __pintcode_body:
  8932                           	callstack 21
  8933  003802                     int_func:
  8934                           	callstack 21
  8935  003802  0006               	pop		; remove dummy address from shadow register refresh
  8936  003804  CFD9 F001          	movff	fsr2l,??_isr
  8937  003808  CFDA F002          	movff	fsr2h,??_isr+1
  8938  00380C                     
  8939                           ;main.c: 259:     if (RCIF == 1) {
  8940  00380C  AA9E               	btfss	3998,5,c	;volatile
  8941  00380E  EF0B  F01C         	goto	i2u409_41
  8942  003812  EF0D  F01C         	goto	i2u409_40
  8943  003816                     i2u409_41:
  8944  003816  EF21  F01C         	goto	i2l141
  8945  00381A                     i2u409_40:
  8946  00381A                     
  8947                           ;main.c: 260:         if (RCSTAbits.OERR) {
  8948  00381A  A2AB               	btfss	171,1,c	;volatile
  8949  00381C  EF12  F01C         	goto	i2u410_41
  8950  003820  EF14  F01C         	goto	i2u410_40
  8951  003824                     i2u410_41:
  8952  003824  EF17  F01C         	goto	i2l3659
  8953  003828                     i2u410_40:
  8954  003828                     
  8955                           ;main.c: 261:             CREN = 0;
  8956  003828  98AB               	bcf	4011,4,c	;volatile
  8957                           
  8958                           ;main.c: 262:             __nop();
  8959  00382A  F000               	nop	
  8960                           
  8961                           ;main.c: 263:             CREN=1;
  8962  00382C  88AB               	bsf	4011,4,c	;volatile
  8963  00382E                     i2l3659:
  8964                           
  8965                           ;main.c: 266:         data_in[position] = RCREG;
  8966  00382E  0E50               	movlw	low _data_in
  8967  003830  0100               	movlb	0	; () banked
  8968  003832  2566               	addwf	_position& (0+255),w,b
  8969  003834  6ED9               	movwf	fsr2l,c
  8970  003836  6ADA               	clrf	fsr2h,c
  8971  003838  0E01               	movlw	high _data_in
  8972  00383A  22DA               	addwfc	fsr2h,f,c
  8973  00383C  CFAE FFDF          	movff	4014,indf2	;volatile
  8974  003840                     
  8975                           ; BSR set to: 0
  8976                           ;main.c: 267:         position++;
  8977  003840  2B66               	incf	_position& (0+255),f,b
  8978  003842                     i2l141:
  8979  003842  C002  FFDA         	movff	??_isr+1,fsr2h
  8980  003846  C001  FFD9         	movff	??_isr,fsr2l
  8981  00384A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8982  00384C  0011               	retfie		f
  8983  00384E                     __end_of_isr:
  8984                           	callstack 0
  8985                           
  8986                           	psect	rparam
  8987  0000                     
  8988                           	psect	temp
  8989  00005D                     btemp:
  8990                           	callstack 0
  8991  00005D                     	ds	1
  8992  0000                     int$flags	set	btemp
  8993  0000                     wtemp8	set	btemp+1
  8994  0000                     ttemp5	set	btemp+1
  8995  0000                     ttemp6	set	btemp+4
  8996  0000                     ttemp7	set	btemp+8
  8997                           
  8998                           	psect	idloc
  8999                           
  9000                           ;Config register IDLOC0 @ 0x200000
  9001                           ;	unspecified, using default values
  9002  200000                     	org	2097152
  9003  200000  FF                 	db	255
  9004                           
  9005                           ;Config register IDLOC1 @ 0x200001
  9006                           ;	unspecified, using default values
  9007  200001                     	org	2097153
  9008  200001  FF                 	db	255
  9009                           
  9010                           ;Config register IDLOC2 @ 0x200002
  9011                           ;	unspecified, using default values
  9012  200002                     	org	2097154
  9013  200002  FF                 	db	255
  9014                           
  9015                           ;Config register IDLOC3 @ 0x200003
  9016                           ;	unspecified, using default values
  9017  200003                     	org	2097155
  9018  200003  FF                 	db	255
  9019                           
  9020                           ;Config register IDLOC4 @ 0x200004
  9021                           ;	unspecified, using default values
  9022  200004                     	org	2097156
  9023  200004  FF                 	db	255
  9024                           
  9025                           ;Config register IDLOC5 @ 0x200005
  9026                           ;	unspecified, using default values
  9027  200005                     	org	2097157
  9028  200005  FF                 	db	255
  9029                           
  9030                           ;Config register IDLOC6 @ 0x200006
  9031                           ;	unspecified, using default values
  9032  200006                     	org	2097158
  9033  200006  FF                 	db	255
  9034                           
  9035                           ;Config register IDLOC7 @ 0x200007
  9036                           ;	unspecified, using default values
  9037  200007                     	org	2097159
  9038  200007  FF                 	db	255
  9039                           
  9040                           	psect	config
  9041                           
  9042                           ;Config register CONFIG1L @ 0x300000
  9043                           ;	PLL Prescaler Selection bits
  9044                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  9045                           ;	System Clock Postscaler Selection bits
  9046                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9047                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9048                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9049  300000                     	org	3145728
  9050  300000  03                 	db	3
  9051                           
  9052                           ;Config register CONFIG1H @ 0x300001
  9053                           ;	Oscillator Selection bits
  9054                           ;	FOSC = HS, HS oscillator (HS)
  9055                           ;	Fail-Safe Clock Monitor Enable bit
  9056                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9057                           ;	Internal/External Oscillator Switchover bit
  9058                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9059  300001                     	org	3145729
  9060  300001  0C                 	db	12
  9061                           
  9062                           ;Config register CONFIG2L @ 0x300002
  9063                           ;	Power-up Timer Enable bit
  9064                           ;	PWRT = OFF, PWRT disabled
  9065                           ;	Brown-out Reset Enable bits
  9066                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9067                           ;	Brown-out Reset Voltage bits
  9068                           ;	BORV = 3, Minimum setting
  9069                           ;	USB Voltage Regulator Enable bit
  9070                           ;	VREGEN = OFF, USB voltage regulator disabled
  9071  300002                     	org	3145730
  9072  300002  19                 	db	25
  9073                           
  9074                           ;Config register CONFIG2H @ 0x300003
  9075                           ;	Watchdog Timer Enable bit
  9076                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9077                           ;	Watchdog Timer Postscale Select bits
  9078                           ;	WDTPS = 32768, 1:32768
  9079  300003                     	org	3145731
  9080  300003  1E                 	db	30
  9081                           
  9082                           ; Padding undefined space
  9083  300004                     	org	3145732
  9084  300004  FF                 	db	255
  9085                           
  9086                           ;Config register CONFIG3H @ 0x300005
  9087                           ;	CCP2 MUX bit
  9088                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9089                           ;	PORTB A/D Enable bit
  9090                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9091                           ;	Low-Power Timer 1 Oscillator Enable bit
  9092                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9093                           ;	MCLR Pin Enable bit
  9094                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  9095  300005                     	org	3145733
  9096  300005  03                 	db	3
  9097                           
  9098                           ;Config register CONFIG4L @ 0x300006
  9099                           ;	Stack Full/Underflow Reset Enable bit
  9100                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9101                           ;	Single-Supply ICSP Enable bit
  9102                           ;	LVP = OFF, Single-Supply ICSP disabled
  9103                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9104                           ;	ICPRT = OFF, ICPORT disabled
  9105                           ;	Extended Instruction Set Enable bit
  9106                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9107                           ;	Background Debugger Enable bit
  9108                           ;	DEBUG = 0x1, unprogrammed default
  9109  300006                     	org	3145734
  9110  300006  80                 	db	128
  9111                           
  9112                           ; Padding undefined space
  9113  300007                     	org	3145735
  9114  300007  FF                 	db	255
  9115                           
  9116                           ;Config register CONFIG5L @ 0x300008
  9117                           ;	Code Protection bit
  9118                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9119                           ;	Code Protection bit
  9120                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9121                           ;	Code Protection bit
  9122                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9123                           ;	Code Protection bit
  9124                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9125  300008                     	org	3145736
  9126  300008  0F                 	db	15
  9127                           
  9128                           ;Config register CONFIG5H @ 0x300009
  9129                           ;	Boot Block Code Protection bit
  9130                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9131                           ;	Data EEPROM Code Protection bit
  9132                           ;	CPD = OFF, Data EEPROM is not code-protected
  9133  300009                     	org	3145737
  9134  300009  C0                 	db	192
  9135                           
  9136                           ;Config register CONFIG6L @ 0x30000A
  9137                           ;	Write Protection bit
  9138                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9139                           ;	Write Protection bit
  9140                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9141                           ;	Write Protection bit
  9142                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9143                           ;	Write Protection bit
  9144                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9145  30000A                     	org	3145738
  9146  30000A  0F                 	db	15
  9147                           
  9148                           ;Config register CONFIG6H @ 0x30000B
  9149                           ;	Configuration Register Write Protection bit
  9150                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9151                           ;	Boot Block Write Protection bit
  9152                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9153                           ;	Data EEPROM Write Protection bit
  9154                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9155  30000B                     	org	3145739
  9156  30000B  E0                 	db	224
  9157                           
  9158                           ;Config register CONFIG7L @ 0x30000C
  9159                           ;	Table Read Protection bit
  9160                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9161                           ;	Table Read Protection bit
  9162                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9163                           ;	Table Read Protection bit
  9164                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9165                           ;	Table Read Protection bit
  9166                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9167  30000C                     	org	3145740
  9168  30000C  0F                 	db	15
  9169                           
  9170                           ;Config register CONFIG7H @ 0x30000D
  9171                           ;	Boot Block Table Read Protection bit
  9172                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9173  30000D                     	org	3145741
  9174  30000D  40                 	db	64
  9175                           tosu	equ	0xFFF
  9176                           tosh	equ	0xFFE
  9177                           tosl	equ	0xFFD
  9178                           stkptr	equ	0xFFC
  9179                           pclatu	equ	0xFFB
  9180                           pclath	equ	0xFFA
  9181                           pcl	equ	0xFF9
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           indf0	equ	0xFEF
  9189                           postinc0	equ	0xFEE
  9190                           postdec0	equ	0xFED
  9191                           preinc0	equ	0xFEC
  9192                           plusw0	equ	0xFEB
  9193                           fsr0h	equ	0xFEA
  9194                           fsr0l	equ	0xFE9
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postinc1	equ	0xFE6
  9198                           postdec1	equ	0xFE5
  9199                           preinc1	equ	0xFE4
  9200                           plusw1	equ	0xFE3
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           bsr	equ	0xFE0
  9204                           indf2	equ	0xFDF
  9205                           postinc2	equ	0xFDE
  9206                           postdec2	equ	0xFDD
  9207                           preinc2	equ	0xFDC
  9208                           plusw2	equ	0xFDB
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        15
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     56     160
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[8]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_102(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_80(CODE[4]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_65(CODE[4]), STR_60(CODE[3]), STR_55(CODE[3]), STR_50(CODE[4]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_35(CODE[4]), STR_30(CODE[3]), 
		 -> STR_26(CODE[3]), STR_21(CODE[3]), STR_17(CODE[3]), STR_12(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[8]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_102(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_80(CODE[4]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_65(CODE[4]), STR_60(CODE[3]), STR_55(CODE[3]), STR_50(CODE[4]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_35(CODE[4]), STR_30(CODE[3]), 
		 -> STR_26(CODE[3]), STR_21(CODE[3]), STR_17(CODE[3]), STR_12(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[8]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), STR_2(CODE[13]), STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), STR_2(CODE[13]), STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_sprintf(BANK0[2]), STR_5(CODE[2]), 
		 -> data_out(BANK0[50]), STR_4(CODE[4]), STR_3(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_sprintf(BANK0[2]), STR_5(CODE[2]), 
		 -> data_out(BANK0[50]), STR_4(CODE[4]), STR_3(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S959_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    memset@dest	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    memset@s	PTR unsigned char  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), STR_2(CODE[13]), STR_1(CODE[14]), 

    USART_SendString@data	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    is_command@command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    is_command@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    get_action@str_value	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    data_received@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__memset	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    END_CMD	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    LED0_CMD	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    RH_SENSOR_CMD	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), 

    TEMP_SENSOR_CMD	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_dht_read
    _get_action->_atoi
    _is_command->_strstr
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _USART_SendString->_strlen
    _data_received->_strstr
    _strstr->_strncmp

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_dht_read
    _dht_read->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   76007
                                             89 COMRAM     1     1      0
                                             54 BANK0      2     2      0
                         _USART_Init
                      _data_received
                           _dht_read
                         _get_action
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_action                                           4     4      0   16972
                                             24 COMRAM     4     4      0
                               _atoi
                         _is_command
                             _memset
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _is_command                                           4     2      2    6674
                                             19 COMRAM     4     2      2
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _dht_read                                            14    14      0   50566
                                             86 COMRAM     3     3      0
                                             43 BANK0     11    11      0
                   _USART_SendString
                       _dht_read_bit
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   47611
                                             27 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   47060
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   46599
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7911
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6951
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2747
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6396
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7550
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5445
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2147
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2101
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1746
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1840
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     313
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     771
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1859
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _dht_read_bit                                         2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     5     3      2     658
                                              6 COMRAM     5     3      2
                     _USART_SendChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _USART_SendChar                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _data_received                                        2     2      0    6576
                                             19 COMRAM     2     2      0
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    6553
                                             13 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6    5241
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     394
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     240
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
   _data_received
     _strstr
       _strchr
       _strlen
       _strncmp
   _dht_read
     _USART_SendString
       _USART_SendChar
       _strlen
     _dht_read_bit
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _get_action
     _atoi
       ___wmul
       _isdigit
       _isspace
     _is_command
       _strstr
         _strchr
         _strlen
         _strncmp
     _memset
     _strstr
       _strchr
       _strlen
       _strncmp
   _memset

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      20        0.0%
DATA                 0      0     34C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 29 03:33:40 2021

           ??_dht_read_bit 0005     __end_of_USART_SendChar 3B08                         l82 350E  
                       l84 34CE                         l93 2094                         l86 34D4  
                       l96 20A2                         l99 20B0        ___wmul@multiplicand 0005  
                      l111 384E                        l123 3AB0                        l115 3870  
                      l131 39D0                        l108 22A0                        l134 3AF0  
                      l118 3892                        l127 35A4                        l144 3AF4  
                      l153 38D8                        l147 3B06                        l156 3AD6  
                      l270 2A0A                        l601 3070                        l283 2E66  
                      l611 3216                        l604 31F6                        l594 3050  
                      l931 3368                        l861 3A78                        l933 33A2  
                      l855 2690                        l944 30D8                        l928 3326  
                      l858 2698                        l947 311A                        l955 1B42  
                      l876 2D02                        l980 26D2                        l869 3766  
                      l949 3146                        l957 1B4A                        l982 26DA  
                      l975 1D7E                        l991 2882                        l889 3714  
                      l989 281E                        l998 2A8C                        _abs 391E  
                      _pad 32E2                        _isr 0008                        prod 000FF3  
                      wreg 000FE8                       l1000 2A94                       l1010 2B84  
                     l1021 22E2                       l1014 2B8C                       l1009 2B3C  
                     l1034 1DB8                       l1211 3462                       l1019 22DA  
                     l1043 1E54                       ?_abs 0015                       l1036 1DC0  
                     l1140 35FE                       l1029 24A0                       l1141 3606  
                     l1230 36C2                       l1151 3998                       l1217 37B6  
                     l1145 3954                       l1225 36BA                       l1057 1FF0  
                     l3001 1F16                       l1073 094A                       l1219 3800  
                     l1059 2052                       l3011 1FE2                       l3003 1F74  
                     l1172 32E0                       l1148 395C                       l1180 391C  
                     l1236 3A08                       l1157 3A40                       l3013 1FFE  
                     l3005 1F90                       l3101 0A58                       l3031 2EAC  
                     l3023 2E68                       l1183 3B18                       l3015 2004  
                     l3007 1FAE                       l3111 0AF0                       l3103 0A7C  
                     l1096 1AA0                       l3033 2EDC                       l1193 2F80  
                     l3025 2E92                       l3017 2014                       l3009 1FC8  
                     l3201 1122                       l3113 0B10                       l3105 0A84  
                     l3121 0B78                       l3035 2EF8                       l3019 202A  
                     l3203 1158                       l3211 11A8                       l3131 0C20  
                     l3123 0B9C                       l3115 0B1E                       l3107 0A92  
                     l3051 08A0                       l3043 0858                       l1189 37B4  
                     l3037 2F0A                       l3029 2E9E                       l3213 11DE  
                     l3221 122A                       l3205 1190                       l3141 0D0E  
                     l3133 0C56                       l3125 0BCE                       l3109 0AB6  
                     l3061 08C6                       l3053 08AC                       l3045 087C  
                     l3039 2F48                       l2503 38DA                       l2511 39D2  
                     l3311 1832                       l3303 1790                       l3223 124E  
                     l3231 1298                       l3215 1216                       l3207 119C  
                     l3151 0DB8                       l3143 0D44                       l3135 0CA0  
                     l3119 0B66                       l3055 08AE                       l3047 088A  
                     l3401 3408                       l2521 2884                       l2505 38E6  
                     l2601 2F82                       l3321 18BC                       l3305 17C6  
                     l3233 12CE                       l3241 131A                       l3225 1284  
                     l3161 0E60                       l3153 0DDC                       l3129 0BEA  
                     l3081 0958                       l3073 08D8                       l3065 08CC  
                     l3057 08C0                       l3049 089C                       l3403 3430  
                     l3411 3AF4                       l2515 3AB2                       l2531 28C8  
                     l2523 2888                       l2507 38F8                       l2611 2FD6  
                     l2603 2F8E                       l3323 18D2                       l3331 1922  
                     l3307 17FC                       l3251 13EA                       l3243 133E  
                     l3235 1306                       l3171 0F1E                       l3163 0E96  
                     l3139 0CD8                       l3091 09D0                       l3083 095A  
                     l3405 3442                       l3413 3B02                       l2517 3ACE  
                     l2701 24B6                       l2541 291E                       l2533 28E8  
                     l2525 2896                       l2509 38FC                       l2621 304A  
                     l2613 2FE8                       l2605 2FAC                       l3333 1958  
                     l3325 18E0                       l3309 1822                       l3317 1874  
                     l3261 14BE                       l3253 1420                       l3245 138A  
                     l3173 0F66                       l3149 0D94                       l3093 09F0  
                     l3085 097E                       l3077 08E4                       l3069 08D2  
                     l3421 35E2                       l3501 39CE                       l3511 3AE2  
                     l3407 345A                       l3423 2B8E                       l2711 253C  
                     l2703 24BA                       l2551 29A0                       l2543 2932  
                     l2535 28EC                       l2527 28B6                       l2615 3016  
                     l2607 2FB4                       l2631 3190                       l2623 3148  
                     l3351 1A4C                       l3335 198E                       l3319 1898  
                     l3159 0E2A                       l3095 09FE                       l3087 09B4  
                     l3079 0938                       l3415 35A6                       l3521 3AEC  
                     l3513 3AE4                       l3505 3AD8                       l3601 3AA8  
                     l3441 2C8C                       l3433 2BEE                       l2641 371A  
                     l2721 2568                       l2705 24BE                       l2481 322A  
                     l2561 29EA                       l2553 29A2                       l2545 2940  
                     l2537 28F8                       l2529 28BA                       l2801 1C1C  
                     l2617 3036                       l2609 2FC8                       l2633 31BE  
                     l2625 3166                       l3337 19B4                       l3345 1A06  
                     l3281 15F2                       l3273 157E                       l3265 14F6  
                     l3257 1440                       l3249 13C6                       l3193 109A  
                     l3185 1026                       l3177 0F9E                       l3169 0EE8  
                     l3089 09C2                       l3361 1A6A                       l3417 35AE  
                     l3523 3AEE                       l3515 3AE6                       l3507 3ADC  
                     l3451 2CEC                       l3435 2C46                       l3427 2BAC  
                     l2651 3A42                       l2643 372E                       l2731 2650  
                     l2723 25B0                       l2715 2542                       l2707 24EE  
                     l2483 323C                       l2555 29B4                       l2547 2952  
                     l2539 2916                       l2571 2D36                       l2811 1CEC  
                     l2803 1C80                       l2619 3038                       l2635 31DE  
                     l2627 316E                       l3363 1A8E                       l3347 1A2A  
                     l3355 1A58                       l3339 19C4                       l3291 16B0  
                     l3283 1628                       l3275 15A2                       l3267 152C  
                     l3259 1476                       l3195 10D0                       l3187 104A  
                     l3179 0FD4                       l3099 0A46                       l3419 35BC  
                     l3531 2076                       l3611 3532                       l3517 3AE8  
                     l3509 3AE0                       l3381 37D0                       l2493 3768  
                     l3605 3AAE                       l3453 2CF0                       l3445 2CA6  
                     l3429 2BB8                       l2645 375C                       l2733 2662  
                     l2717 2558                       l2709 2538                       l2485 3246  
                     l2741 3072                       l2549 2980                       l2557 29BA  
                     l2581 2D8E                       l2573 2D3A                       l2565 2D04  
                     l2661 3312                       l2821 1D32                       l2805 1C9A  
                     l2813 1CFA                       l2901 2ACE                       l2637 31F0  
                     l2629 3182                       l3349 1A38                       l3293 16E6  
                     l3533 2086                       l3525 2054                       l3613 3552  
                     l3519 3AEA                       l2495 3774                       l3391 33A4  
                     l3463 387E                       l3455 384E                       l3447 2CDA  
                     l3439 2C60                       l2647 3760                       l2639 3716  
                     l2735 2674                       l2727 25FE                       l2719 2560  
                     l2487 3264                       l2479 3218                       l2751 30BE  
                     l2743 3086                       l2559 29CA                       l2591 2E10  
                     l2583 2DA2                       l2575 2D48                       l2567 2D08  
                     l2671 3376                       l2663 331E                       l2655 32E2  
                     l2823 1D3E                       l2815 1D0C                       l2807 1CB8  
                     l2831 269A                       l2911 2B1E                       l2903 2AEC  
                     l3295 170C                       l3551 20F4                       l3535 2088  
                     l3527 2070                       l3615 3566                       l3623 35A2  
                     l3385 37DC                       l2497 3778                       l3393 33B6  
                     l3457 385C                       l3449 2CE6                       l2489 329A  
                     l2761 30FC                       l2745 3092                       l2585 2DB0  
                     l2593 2E16                       l2577 2D68                       l2569 2D16  
                     l2673 338A                       l2665 3332                       l2657 32F0  
                     l2825 1D46                       l2817 1D1A                       l2809 1CD2  
                     l2841 270A                       l2833 26AA                       l2905 2AF8  
                     l2921 22A2                       l2681 3A0A                       l3297 171C  
                     l3289 167A                       l3481 3702                       l3473 36C4  
                     l3561 215C                       l3545 20C4                       l3537 2090  
                     l3529 2074                       l3617 3582                       l3609 3516  
                     l3387 37F8                       l3379 37B6                       l2499 37A8  
                     l3395 33CE                       l3491 38B0                       l3459 3862  
                     l2763 3128                       l2755 30D0                       l2747 309E  
                     l2595 2E26                       l2587 2DDE                       l2579 2D86  
                     l2667 3346                       l2659 3304                       l2819 1D20  
                     l2827 1D56                       l2771 1AC2                       l2851 273A  
                     l2843 270E                       l2835 26AC                       l2915 2B4E  
                     l2907 2B16                       l2931 2312                       l2923 22B2  
                     l3299 1754                       l3475 36D6                       l3563 216A  
                     l3547 20E2                       l3539 20BE                       l3619 3588  
                     l3397 33FC                       l3485 3894                       l3469 388A  
                     l2765 313A                       l2757 30E4                       l2749 30AC  
                     l2597 2E46                       l2589 2DFE                       l2677 391E  
                     l2669 334A                       l2781 1B36                       l2773 1AEA  
                     l2861 27DC                       l2853 2740                       l2845 271A  
                     l2837 26C6                       l2917 2B62                       l2909 2B1A  
                     l2941 23A2                       l2933 231A                       l2925 22B4  
                     l2685 395E                       l2693 369C                       l3477 36DE  
                     l3581 21EE                       l3565 2170                       l3557 211C  
                     l3549 20E4                       l3493 399A                       ?_pad 0013  
                     l3487 389C                       l2759 30F8                       l2679 3938  
                     l2791 1B80                       l2783 1B52                       l2775 1B0A  
                     l2871 2844                       l2863 27F6                       l2855 2746  
                     l2847 2720                       l2839 2702                       l2919 2B66  
                     l2951 246A                       l2935 2320                       l2943 2406  
                     l2927 22CE                       l2695 36AE                       l3479 36E6  
                     l3591 224E                       l3583 21F4                       l3575 21A0  
                     l3567 2174                       l3559 2136                       l3495 39B6  
                     l3489 38AE                       l2793 1B88                       l2785 1B64  
                     l2777 1B1A                       l2769 1AA2                       l2873 2854  
                     l2865 2810                       l2849 2728                       l2857 27A4  
                     l2881 2A1E                       l2945 2418                       l2953 2478  
                     l2937 2396                       l2929 230A                       l2689 3666  
                     l2961 1D92                       l3593 225A                       l3585 21F8  
                     l3577 21BA                       l3569 2190                       l3497 39C8  
                     l3761 348E                       l3753 3464                       l2699 24A2  
                     l2795 1B8E                       l2787 1B72                       l2779 1B1C  
                     l2867 282C                       l2875 285A                       l2859 27BE  
                     l2891 2A5C                       l2883 2A26                       l2947 2436  
                     l2939 239C                       l2971 1E06                       l2963 1DAC  
                     l3595 2276                       l3587 2214                       l3579 21E0  
                     l3763 3492                       l3755 3468                       l3597 3A7A  
                     l2797 1C10                       l2789 1B78                       l2869 283E  
                     l2893 2A6A                       l2885 2A38                       l2949 2450  
                     l2981 1E48                       l2973 1E0E                       l2965 1DD6  
                     l2957 1D80                       l3589 2230                       l3773 34DA  
                     l3765 34AC                       l3757 3484                       l3599 3A96  
                     l2799 1C16                       l2887 2A40                       l2879 2A0C  
                     l2991 1ED4                       l2975 1E14                       l2967 1DDE  
                     l2959 1D90                       l3767 34B0                       l3759 348A  
                     l2897 2AB6                       l2889 2A54                       l2993 1EE6  
                     l2985 1E88                       l2977 1E1C                       l2969 1DFE  
                     l3881 34F0                       l3769 34C4                       l2899 2ACA  
                     l2987 1E9A                       l2995 1EFA                       l2979 1E38  
                     l3883 090A                       l3885 259A                       l2997 1F0A  
                     l2999 1F10                       ?_isr 0001                       STR_1 0801  
                     STR_2 080F                       STR_3 081C                       STR_4 0818  
                     STR_5 0855                       STR_6 0828                       STR_8 0828  
                     _CREN 007D5C                       u2100 3798                       u2110 37A8  
                     u2111 37A4                       u2200 2980                       u2120 391C  
                     u3000 2B4A                       u2201 297C                       u2121 3918  
                     u3001 2B46                       u2210 29CA                       u3010 2B84  
                     u2130 3A02                       u2107 378E                       u2211 29C6  
                     u3011 2B80                       u2131 39FC                       u2060 322A  
                     u2220 2D16                       u2300 2FD6                       u3020 22B2  
                     u2140 3A04                       u3100 1DAC                       u2061 3226  
                     u2221 2D12                       u2301 2FD2                       u3021 22AE  
                     u3101 1DA8                       u2070 323C                       u2150 2896  
                     u2230 2D48                       u2310 3016                       u3030 22CE  
                     u3110 1DD6                       u2071 3238                       u2151 2892  
                     u2231 2D44                       u2311 3012                       u3031 22CA  
                     u3111 1DD2                       u2080 3264                       u2160 28C8  
                     u2240 2D86                       u2400 3312                       u2320 3166  
                     u3040 2418                       u3200 1F90                       u3120 1E38  
                     _LATD 000F8C                       u2081 3260                       u2161 28C4  
                     u2241 2D82                       u2401 330E                       u2321 3162  
                     u3041 2414                       u3201 1F8C                       u3121 1E34  
                     u2090 329A                       u2250 2DB0                       u2410 3368  
                     u2330 3190                       u3050 2436                       u3210 1FAE  
                     u3130 1E82                       u4010 2190                       u2091 3296  
                     u2171 28F2                       u2251 2DAC                       u2411 3364  
                     u2331 318C                       u3051 2432                       u3211 1FAA  
                     u3131 1E7C                       u4011 218C                       u3300 2F0A  
                     u2180 2916                       u2260 2DDE                       u2420 3376  
                     u2340 31BE                       u3060 2450                       u2500 36AE  
                     u3220 1FC8                       u3140 1E84                       u4004 214E  
                     u3301 2F06                       u2181 2912                       u2261 2DDA  
                     u2421 3372                       u2341 31BA                       u3061 244C  
                     u2501 36AA                       u3221 1FC4                       u4005 2148  
                     u3310 2F48                       u2350 372E                       u2510 24DE  
                     u2190 2940                       u2270 2E26                       u2430 3938  
                     u3070 246A                       u3230 1FE2                       u3150 1E9A  
                     u4030 2214                       u4110 34C4                       u3311 2F44  
                     u2351 372A                       u2191 293C                       u2271 2E22  
                     u2431 3934                       u3071 2466                       u3231 1FDE  
                     u3151 1E96                       u4031 2210                       u4111 34C0  
                     u3320 2F68                       u4040 3AA8                       u2360 375C  
                     u2600 264C                       u2520 24EE                       u3080 2478  
                     u2440 3A3A                       u3240 1FF0                       u3160 1ECE  
                     u3400 0A58                       u4024 21D2                       u4041 3AA4  
                     u2361 3758                       u2521 24EA                       u2281 2F88  
                     u3081 2474                       u2441 3A34                       u3241 1FEC  
                     u3161 1EC8                       u3401 0A54                       u4025 21CC  
                     u2370 3A72                       u2610 2662                       u2530 2516  
                     u2290 2FAC                       u2450 3A3C                       u3250 1FFE  
                     u3170 1ED0                       u3090 1D90                       u3410 0A7C  
                     u3330 087C                       u4050 3532                       u3315 2F38  
                     u2371 3A6C                       u2611 265E                       u2291 2FA8  
                     u3251 1FFA                       u3091 1D8C                       u3411 0A78  
                     u3331 0878                       u4051 352E                       u3260 2E92  
                     u2380 3A74                       u2620 2674                       u2540 2538  
                     u2700 1AEA                       u2460 3992                       u3180 1EE6  
                     u3500 0D44                       u3420 0AB6                       u3340 094A  
                     u4060 359C                       u3317 2F2E                       u3261 2E8E  
                     u2621 2670                       u2541 2534                       u2517 24D4  
                     u2701 1AE6                       u2461 398C                       u3181 1EE2  
                     u3501 0D40                       u3421 0AB2                       u3341 0946  
                     u4061 3596                       u3270 2ECC                       u2550 2554  
                     u2630 3086                       u2390 32F0                       u2710 1B1A  
                     u2470 3994                       u3190 1F4E                       u3510 0DB8  
                     u3430 0B5E                       u3350 0958                       u4070 359E  
                     u3327 2F5E                       u2551 2550                       u2631 3082  
                     u2391 32EC                       u2711 1B16                       u3511 0DB4  
                     u3431 0B58                       u3351 0954                       u4127 349E  
                     u3280 2EDC                       u2560 2588                       u2640 30AC  
                     u2800 1D0C                       u2720 1B36                       u2480 3696  
                     u3600 11DE                       u3520 0DDC                       u3440 0B60  
                     u3360 097E                       u3281 2ED8                       u2537 250C  
                     u2641 30A8                       u2801 1D08                       u2721 1B32  
                     u2481 3690                       u3601 11DA                       u3521 0DD8  
                     u3361 097A                       u4137 207C                       u3290 2EF8  
                     u2570 25E4                       u2650 30CC                       u2810 1D1A  
                     u2730 1B64                       u2490 3698                       u3610 124E  
                     u3530 0E60                       u3450 0B78                       u3370 09C2  
                     u3291 2EF4                       u2651 30C8                       u2811 1D16  
                     u2731 1B60                       u3195 1F3C                       u3611 124A  
                     u3531 0E5C                       u3451 0B74                       u3371 09BE  
                     u4147 208A                       u2580 2626                       u2660 311A  
                     u2820 1D32                       u2740 1B72                       u2900 281E  
                     u3700 16E6                       u3620 12CE                       u3540 0E96  
                     u3460 0B9C                       u3380 0A3E                       u3277 2EC2  
                     u4157 385E                       u2661 3116                       u2821 1D2E  
                     u2741 1B6E                       u2901 281A                       u3701 16E2  
                     u3621 12CA                       u3541 0E92                       u3461 0B98  
                     u3381 0A38                       u2590 264A                       u2670 3128  
                     u2750 1C9A                       u2910 282C                       u2830 26AA  
                     u3710 17C6                       u3630 133E                       u3550 0F1E  
                     u3470 0C20                       u3390 0A40                       u2591 2644  
                     u2567 257E                       u2671 3124                       u2751 1C96  
                     u2911 2828                       u2831 26A6                       u3711 17C2  
                     u3631 133A                       u3551 0F1A                       u3471 0C1C  
                     u3800 33B6                       u2760 1CB8                       u2680 1AD2  
                     u2920 283E                       u2840 26C6                       u3720 17FC  
                     u3640 13EA                       u3560 0FD4                       u3480 0C56  
                     u3801 33B2                       u2577 25DA                       u2761 1CB4  
                     u2681 1ACC                       u2921 283A                       u2841 26C2  
                     u3721 17F8                       u3641 13E6                       u3561 0FD0  
                     u3481 0C52                       u3810 33FC                       u2770 1CD2  
                     u2690 1AD4                       u2850 277E                       u3730 1898  
                     u3650 1476                       u3570 104A                       u3490 0D0E  
                     u3811 33F8                       u2587 261C                       u2771 1CCE  
                     u2931 2A16                       u3731 1894                       u3651 1472  
                     u3571 1046                       u3491 0D0A                       u3820 3442  
                     u3900 2D02                       u2780 1CEC                       u2860 27BE  
                     u2940 2A38                       u3740 18BC                       u3660 152C  
                     u3580 10D0                       u3821 343E                       u3901 2CFE  
                     u2781 1CE8                       u2861 27BA                       u2941 2A34  
                     u3741 18B8                       u3661 1528                       u3581 10CC  
                     u3830 345A                       u3910 385C                       u2790 1CFA  
                     u2870 27DC                       u2950 2A6A                       u3750 1958  
                     u3670 15A2                       u3590 1158                       u3831 3456  
                     u3911 3858                       u2791 1CF6                       u2871 27D8  
                     u2855 276C                       u2951 2A66                       u3751 1954  
                     u3671 159E                       u3591 1154                       u3840 3B02  
                     u3920 3870                       u2880 27F6                       u2960 2A88  
                     u3760 198E                       u3680 1628                       u3841 3AFE  
                     u3921 386C                       u2881 27F2                       u2961 2A84  
                     u3761 198A                       u3681 1624                       u3930 387E  
                     u2890 2810                       u2970 2AB2                       u3770 1A2A  
                     u3690 16B0                       u3850 35FE                       u3931 387A  
                     u2891 280C                       u2971 2AAE                       u3771 1A26  
                     u3691 16AC                       u3851 35FA                       u3780 37D0  
                     u3940 38D8                       u3860 2BA8                       u2980 2AEC  
                     _RCIF 007CF5                       u3781 37CC                       u3941 38D4  
                     u3861 2BA4                       u2981 2AE8                       u3790 37F8  
                     u3870 2BEA                       u2990 2B3C                       u3950 39C8  
                     u3791 37F4                       u3871 2BE6                       u2991 2B38  
                     u3951 39C4                       u3880 2C5C                       u3960 20A2  
                     u3881 2C58                       u3961 209E                       u3890 2CA2  
                     u3970 20B0                       u3891 2C9E                       u3971 20AC  
                     u3980 20BE                       u3981 20BA                       u3990 20F4  
                     u3991 20F0                       _TXIF 007CF4                       abs@a 0015  
                     _dbuf 0099                       _atoi 24A2                       _ctoa 3072  
                     _main 3464                       _dtoa 1AA2                       _prec 0064  
                     _otoa 269A                       _nout 0060                       pad@i 001A  
                     pad@p 0017                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001C                       fsr2l 000FD9                       _stoa 2A0C  
                     btemp 005D                       _utoa 22A2   __end_of_USART_SendString 38DA  
                     _xtoa 1D80                       prodh 000FF4                       prodl 000FF3  
                     start 000E               ___param_bank 000000                      ??_abs 0017  
                    ??_pad 0019                      ??_isr 0001            ?_USART_SendChar 0001  
          __end_of___aodiv 2A0C                      ?_atoi 000A                      ?_ctoa 000C  
                    ?_main 0001                      ?_dtoa 001E            __end_of___aomod 2E68  
                    STR_10 082C                      STR_12 082C                      STR_21 082D  
                    STR_30 0846                      STR_40 0835                      STR_24 0843  
                    STR_17 0829                      STR_33 0834                      STR_26 0843  
                    STR_50 0830                      STR_35 0834                      STR_43 084C  
                    STR_60 0849                      STR_28 0846                      STR_45 084C  
                    STR_70 0839                      STR_55 0831                      STR_63 0838  
                    STR_80 083C                      STR_48 0830                      STR_65 0838  
                    STR_73 084F                      STR_58 0849                      STR_82 0824  
                    STR_75 084F                      STR_84 0824                      STR_93 0825  
                    STR_78 083C                      STR_96 0852                      STR_89 083D  
                    STR_98 0852                      ?_otoa 001E                      ?_stoa 000C  
                    ?_utoa 001E            __end_of___lodiv 3072                      ?_xtoa 001E  
          __end_of___lomod 3218                      i2l141 3842      __end_of_data_received 3AB2  
                    _RCREG 000FAE               vfpfcnvrt@fmt 0047               vfpfcnvrt@llu 00CC  
                    _SPBRG 000FAF         USART_SendChar@data 0003                      _TRISD 000F95  
                    _TXREG 000FAD                      _flags 005B                      _fputc 3218  
          __end_of_isalpha 399A                      _fputs 38DA            __end_of_isdigit 3A7A  
                    atoi@n 0017                      pad@fp 0013                      atoi@s 000A  
                    _width 0062                      ctoa@c 000E                      _putch 3B18  
                    ctoa@l 0010                      ctoa@w 0012                      dtoa@d 0020  
                    dtoa@i 0040                      dtoa@n 0038                      dtoa@p 0032  
                    dtoa@s 0036                      dtoa@w 0034            __end_of_islower 3A0A  
          __end_of_isspace 3768            __end_of_isupper 3A42                      tablat 000FF5  
                    otoa@d 0020                      otoa@i 003E                      otoa@n 0036  
                    otoa@p 0030                      otoa@t 0032                      otoa@w 0034  
                    plusw1 000FE3                      plusw2 000FDB                      stoa@i 0018  
                    stoa@l 0020                      stoa@p 001E                      stoa@s 000E  
                    stoa@w 001A                      ttemp5 005E                      ttemp6 0061  
                    ttemp7 0065            get_action@value 001B                      utoa@d 0020  
                    utoa@i 003C                      utoa@n 0034                      utoa@p 0030  
                    utoa@w 0032                      status 000FD8                      wtemp8 005E  
          __end_of_sprintf 3716                      xtoa@c 0043                      xtoa@d 0020  
                    xtoa@i 0041                      xtoa@n 0039                      xtoa@p 0035  
                    xtoa@w 0037                      xtoa@x 0028            __end_of_strncmp 2F82  
          __end_of_toupper 36C4           ___lodiv@dividend 0003                ?_USART_Init 0001  
             _toupper$1303 000F            __initialization 3608               __end_of_atoi 269A  
             __end_of_ctoa 3148               __end_of_main 3516               __end_of_dtoa 1D80  
             __end_of_otoa 2884               __end_of_stoa 2B8E               __end_of_utoa 24A2  
             __end_of_xtoa 2054           data_received@ptr 0014                     ??_atoi 000C  
                   ??_ctoa 000F                     ??_main 00EF                     ??_dtoa 0028  
                   ??_otoa 0028                     ??_stoa 0010                     ??_utoa 0028  
                   ??_xtoa 0029              __activetblptr 000002           ___lodiv@quotient 0013  
                   ?_fputc 0003                     STR_100 0840                     STR_102 0840  
                   ?_fputs 000C                     ?_putch 0001       __end_of_dht_read_bit 3894  
                   i2l3661 3840                     i2l3653 380C                     i2l3655 381A  
                   i2l3657 3828                     i2l3659 382E              vfpfcnvrt@done 00BB  
                   _TRISC6 007CA6                     _TRISC7 007CA7           __end_of_dht_read 22A2  
             vfprintf@cfmt 0055                  ??___aodiv 0013                  ??___aomod 0013  
                   ___wmul 3AB2                  ??___lodiv 0013                  ??___lomod 0013  
                   _memset 2B8E                     clear_0 3630                     clear_1 3642  
                   clear_2 364E                     pad@buf 0015                     ctoa@fp 000C  
                   dtoa@fp 001E                     _strchr 37B6                     _strlen 3768  
                   _strstr 33A4                     fputc@c 0003                     fputs@c 0010  
                   fputs@i 0011                     fputs@s 000C                  ??_isalpha 0005  
                ??_isdigit 0005                  ??_islower 0005               __mediumconst 0000  
                ??_isspace 0005                     otoa@fp 001E                     tblptrh 000FF7  
                ??_isupper 0005                     tblptrl 000FF6                     tblptru 000FF8  
      __size_of_USART_Init 001A                     stoa@cp 001C                     stoa@fp 000C  
                   putch@c 0001           __end_of_vfprintf 3608                     utoa@fp 001E  
                ??_sprintf 0057                     xtoa@fp 001E                  ??_strncmp 0009  
                ??_toupper 000B                 __accesstop 0060    __end_of__initialization 3658  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 3B08  
            __end_of_fputc 32E2              __end_of_fputs 391E              __end_of_putch 3B1A  
                  ??_fputc 0007                    ??_fputs 0010                    ??_putch 0003  
               __pbssBANK0 0060                 __pbssBANK1 0100  dht_read@relative_humidity 00E4  
        ?_USART_SendString 0007           ??_USART_SendChar 0003         ??_USART_SendString 0009  
                  ?___wmul 0003                    ?_memset 0003                    ?_strchr 0003  
                  ?_strlen 0003                    ?_strstr 000E                    _END_CMD 00F8  
               _get_action 3516      __size_of_dht_read_bit 0046         __size_of_vfpfcnvrt 124A  
                ?_dht_read 0001           ___lomod@dividend 0003               ??_USART_Init 0003  
                  __Hparam 0000                    __Lparam 0000                 _is_command 399A  
                  ___aodiv 2884                    ___aomod 2D04            __size_of___wmul 0026  
                  ___lodiv 2F82                    ___lomod 3148                  ?_vfprintf 004F  
             __psmallconst 0800               _dht_read_bit 384E                    _data_in 0150  
                  __pcinit 3608            __size_of_memset 0176                    __ramtop 0800  
          _TEMP_SENSOR_CMD 00FE                    __ptext0 3464                    __ptext1 3516  
                  __ptext2 399A                    __ptext3 2054                    __ptext4 36C4  
                  __ptext5 35A6                    __ptext6 0858                    __ptext7 1D80  
                  __ptext8 3666                    __ptext9 39D2               _dht_raw_data 0100  
          __size_of_strchr 004C            __size_of_strlen 004E            __size_of_strstr 00C0  
             __size_of_abs 0040               __size_of_pad 00C2                    _isalpha 395E  
                  _isdigit 3A42               __size_of_isr 3846                    _islower 39D2  
                  _isspace 3716                    _isupper 3A0A                    atoi@neg 0010  
       __end_of_USART_Init 3AF2                 ??_dht_read 0057                    _sprintf 36C4  
                  _strncmp 2E68             __pintcode_body 3802                    _toupper 3666  
     end_of_initialization 3658                    fputc@fp 0005                    memset@c 0005  
                  memset@k 000B                    memset@n 0007                    memset@s 000D  
            __Lmediumconst 0000                    int_func 3802                    fputs@fp 000E  
   __size_of_data_received 0038          __end_of_vfpfcnvrt 1AA2                  _RCSTAbits 000FAB  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 0055  
                  strchr@c 0005                    strchr@s 0003                    strlen@a 0005  
                  strlen@s 0003                    strstr@h 000E                    strstr@n 0010  
                _PORTDbits 000F83                ?_get_action 0001                 main@action 005A  
                _TXSTAbits 000FAC                ?_is_command 0014                vfpfcnvrt@ap 0049  
              vfpfcnvrt@cp 00B9                vfpfcnvrt@fp 0045                vfpfcnvrt@ll 00C1  
           __end_of___wmul 3AD8                vfpfcnvrt@vp 00C9        dht_read@temperature 00E6  
           __end_of_memset 2D04             __end_of_strchr 3802             __end_of_strlen 37B6  
            _data_received 3A7A             __end_of_strstr 3464        start_initialization 3608  
          ___lodiv@divisor 000B            ___lodiv@counter 001B                __end_of_abs 395E  
        dht_read@bit_index 00ED                __end_of_pad 33A4                __end_of_isr 384E  
     dht_read@bit_position 00E8        __size_of_get_action 0090                vfprintf@fmt 0051  
                 ??___wmul 0007                __pdataBANK0 00F1                   ??_memset 0009  
               memset@dest 0003                   ??_strchr 0007                   ??_strlen 0005  
__size_of_USART_SendString 0046                   ??_strstr 0012             ?_data_received 0001  
              __pbssBIGRAM 0150                __pbssCOMRAM 005B              __pcstackBANK0 00B9  
         ___aodiv@dividend 0003        __size_of_is_command 0038          __size_of_dht_read 024E  
                _dtoa$1057 0030                  __pintcode 0008                   ?___aodiv 0003  
                 ?___aomod 0003           ___aodiv@quotient 0015                   ?___lodiv 0003  
                 ?___lomod 0003      USART_SendString@index 000B          __size_of_vfprintf 0062  
          ___lomod@divisor 000B                __smallconst 0800            ___lomod@counter 0013  
                 ?_isalpha 0003                   ?_isdigit 0003                   ?_islower 0003  
                 ?_isspace 0003                   ?_isupper 0003                   _LED0_CMD 00FA  
                 ?_sprintf 00D4             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0003                   ?_toupper 0009             __size_of_putch 0002  
           ___wmul@product 0007                   _LATDbits 000F8C                   _PIE1bits 000F9D  
                 i2u410_40 3828                   i2u410_41 3824                   i2u409_40 381A  
                 i2u409_41 3816              is_command@ptr 0016                  _vfpfcnvrt 0858  
                _xtoa$1093 0031                  _xtoa$1094 0033            ??_data_received 0014  
        ___wmul@multiplier 0003    __size_of_USART_SendChar 0016               ??_get_action 0019  
               vfpfcnvrt@c 00CB                  copy_data0 361C              _RH_SENSOR_CMD 00FC  
                 __Hrparam 0000                 vfprintf@ap 0053                   __Lrparam 0000  
               vfprintf@fp 004F         __end_of_get_action 35A6               ??_is_command 0016  
         __size_of___aodiv 0188           __size_of___aomod 0164           __size_of___lodiv 00F0  
         __size_of___lomod 00D0                 ?_vfpfcnvrt 0045            ___aodiv@divisor 000B  
          ___aodiv@counter 0013          is_command@command 0014           _USART_SendString 3894  
               sprintf@fmt 00D6                   _atoi$930 0012                   _atoi$931 0016  
                 _atoi$932 0014                   _data_out 0067           __size_of_isalpha 003C  
         __size_of_isdigit 0038           __size_of_islower 0038           __size_of_isspace 0052  
     USART_SendString@data 0007                   __ptext10 3A0A                   __ptext11 395E  
                 __ptext20 391E                   __ptext12 22A2                   __ptext21 2D04  
                 __ptext13 3148                   __ptext30 2B8E                   __ptext22 2884  
                 __ptext14 2F82                   __ptext31 384E                   __ptext23 3072  
                 __ptext15 2A0C                   __ptext32 3894                   __ptext24 3218  
                 __ptext16 269A                   __ptext33 3AF2                   __ptext25 3B18  
                 __ptext17 1AA2                   __ptext34 3A7A                   __ptext26 24A2  
                 __ptext18 32E2                   __ptext35 33A4                   __ptext27 3716  
                 __ptext19 38DA                   __ptext36 2E68                   __ptext28 3A42  
                 __ptext37 3768                   __ptext29 3AB2                   __ptext38 37B6  
                 __ptext39 3AD8           __size_of_isupper 0038                   _dht_read 2054  
         __size_of_sprintf 0052         __end_of_is_command 39D2           __size_of_strncmp 011A  
         __size_of_toupper 005E              __size_of_atoi 01F8              __size_of_ctoa 00D6  
            __size_of_main 00B2              __size_of_dtoa 02DE              __size_of_otoa 01EA  
            __size_of_stoa 0182              __size_of_utoa 0200              __size_of_xtoa 02D4  
                stoa@F1154 00F1                   int$flags 005D                   _position 0066  
                 _vfprintf 35A6                _isspace$948 0009           ___aomod@dividend 0003  
           _vfpfcnvrt$1108 00BD             _vfpfcnvrt$1109 00BF                 _INTCONbits 000FF2  
                 isalpha@c 0003                   isdigit@c 0003                   intlevel2 0000  
            dht_read@index 00EA                  sprintf@ap 00E2                   islower@c 0003  
                 isspace@c 0003                   isupper@c 0003                  strncmp@_l 0003  
                strncmp@_r 0005        get_action@str_value 0019            ___aomod@divisor 000B  
            ?_dht_read_bit 0003                ??_vfpfcnvrt 004B                   stoa@nuls 0011  
          ___aomod@counter 0013             _USART_SendChar 3AF2               dht_read@mask 00EB  
                 sprintf@f 00DC                   sprintf@s 00D4                   strncmp@l 000A  
                 strncmp@n 0007                   strncmp@r 000C                   toupper@c 0009  
                 strstr@nl 0012               ___aodiv@sign 0014               ___aomod@sign 0014  
               _USART_Init 3AD8  
